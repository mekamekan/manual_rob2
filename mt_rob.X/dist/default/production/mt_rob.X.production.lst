

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Aug 28 16:16:09 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1779
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	text12,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24     0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F1779 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000F                     	;# 
    76     0010                     	;# 
    77     0011                     	;# 
    78     0012                     	;# 
    79     0013                     	;# 
    80     0014                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0018                     	;# 
    86     0019                     	;# 
    87     001A                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001C                     	;# 
    91     001D                     	;# 
    92     001E                     	;# 
    93     001F                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     008F                     	;# 
    98     0090                     	;# 
    99     0091                     	;# 
   100     0092                     	;# 
   101     0093                     	;# 
   102     0094                     	;# 
   103     0095                     	;# 
   104     0096                     	;# 
   105     0097                     	;# 
   106     0098                     	;# 
   107     0099                     	;# 
   108     009A                     	;# 
   109     009B                     	;# 
   110     009C                     	;# 
   111     009D                     	;# 
   112     009E                     	;# 
   113     009F                     	;# 
   114     010C                     	;# 
   115     010D                     	;# 
   116     010E                     	;# 
   117     010F                     	;# 
   118     0110                     	;# 
   119     0111                     	;# 
   120     0112                     	;# 
   121     0113                     	;# 
   122     0114                     	;# 
   123     0115                     	;# 
   124     0116                     	;# 
   125     0117                     	;# 
   126     0118                     	;# 
   127     0119                     	;# 
   128     011A                     	;# 
   129     011B                     	;# 
   130     011C                     	;# 
   131     011D                     	;# 
   132     018C                     	;# 
   133     018D                     	;# 
   134     018E                     	;# 
   135     018F                     	;# 
   136     0190                     	;# 
   137     0191                     	;# 
   138     0191                     	;# 
   139     0192                     	;# 
   140     0193                     	;# 
   141     0193                     	;# 
   142     0194                     	;# 
   143     0195                     	;# 
   144     0196                     	;# 
   145     0197                     	;# 
   146     0199                     	;# 
   147     0199                     	;# 
   148     0199                     	;# 
   149     019A                     	;# 
   150     019A                     	;# 
   151     019A                     	;# 
   152     019B                     	;# 
   153     019B                     	;# 
   154     019B                     	;# 
   155     019B                     	;# 
   156     019B                     	;# 
   157     019C                     	;# 
   158     019C                     	;# 
   159     019C                     	;# 
   160     019D                     	;# 
   161     019D                     	;# 
   162     019D                     	;# 
   163     019E                     	;# 
   164     019E                     	;# 
   165     019E                     	;# 
   166     019F                     	;# 
   167     019F                     	;# 
   168     019F                     	;# 
   169     019F                     	;# 
   170     019F                     	;# 
   171     020C                     	;# 
   172     020D                     	;# 
   173     020E                     	;# 
   174     020F                     	;# 
   175     0210                     	;# 
   176     0211                     	;# 
   177     0211                     	;# 
   178     0212                     	;# 
   179     0212                     	;# 
   180     0213                     	;# 
   181     0213                     	;# 
   182     0214                     	;# 
   183     0214                     	;# 
   184     0215                     	;# 
   185     0215                     	;# 
   186     0215                     	;# 
   187     0215                     	;# 
   188     0216                     	;# 
   189     0216                     	;# 
   190     0217                     	;# 
   191     0217                     	;# 
   192     021B                     	;# 
   193     021C                     	;# 
   194     021D                     	;# 
   195     021E                     	;# 
   196     021F                     	;# 
   197     028C                     	;# 
   198     028D                     	;# 
   199     028E                     	;# 
   200     028F                     	;# 
   201     0290                     	;# 
   202     0291                     	;# 
   203     0291                     	;# 
   204     0292                     	;# 
   205     0293                     	;# 
   206     0294                     	;# 
   207     0295                     	;# 
   208     0295                     	;# 
   209     0296                     	;# 
   210     0297                     	;# 
   211     0298                     	;# 
   212     0299                     	;# 
   213     0299                     	;# 
   214     029A                     	;# 
   215     029B                     	;# 
   216     029C                     	;# 
   217     029E                     	;# 
   218     029F                     	;# 
   219     030C                     	;# 
   220     030D                     	;# 
   221     030E                     	;# 
   222     030F                     	;# 
   223     0310                     	;# 
   224     0311                     	;# 
   225     0311                     	;# 
   226     0312                     	;# 
   227     0313                     	;# 
   228     0314                     	;# 
   229     0315                     	;# 
   230     0316                     	;# 
   231     0317                     	;# 
   232     0318                     	;# 
   233     0319                     	;# 
   234     031B                     	;# 
   235     031C                     	;# 
   236     031D                     	;# 
   237     031E                     	;# 
   238     031F                     	;# 
   239     038C                     	;# 
   240     038D                     	;# 
   241     038E                     	;# 
   242     038F                     	;# 
   243     0390                     	;# 
   244     0391                     	;# 
   245     0392                     	;# 
   246     0393                     	;# 
   247     0394                     	;# 
   248     0395                     	;# 
   249     0396                     	;# 
   250     0397                     	;# 
   251     0398                     	;# 
   252     0399                     	;# 
   253     039D                     	;# 
   254     039E                     	;# 
   255     039F                     	;# 
   256     040D                     	;# 
   257     040F                     	;# 
   258     040F                     	;# 
   259     0410                     	;# 
   260     0411                     	;# 
   261     0412                     	;# 
   262     0413                     	;# 
   263     0413                     	;# 
   264     0414                     	;# 
   265     0414                     	;# 
   266     0415                     	;# 
   267     0416                     	;# 
   268     0417                     	;# 
   269     0418                     	;# 
   270     041A                     	;# 
   271     041A                     	;# 
   272     041B                     	;# 
   273     041B                     	;# 
   274     041C                     	;# 
   275     041D                     	;# 
   276     041E                     	;# 
   277     041F                     	;# 
   278     048E                     	;# 
   279     048E                     	;# 
   280     048F                     	;# 
   281     0490                     	;# 
   282     0491                     	;# 
   283     0492                     	;# 
   284     0493                     	;# 
   285     0493                     	;# 
   286     0494                     	;# 
   287     0494                     	;# 
   288     0495                     	;# 
   289     0496                     	;# 
   290     0497                     	;# 
   291     0498                     	;# 
   292     049A                     	;# 
   293     049A                     	;# 
   294     049B                     	;# 
   295     049B                     	;# 
   296     049C                     	;# 
   297     049D                     	;# 
   298     049E                     	;# 
   299     049F                     	;# 
   300     050F                     	;# 
   301     0510                     	;# 
   302     0511                     	;# 
   303     0512                     	;# 
   304     0513                     	;# 
   305     0514                     	;# 
   306     0515                     	;# 
   307     0516                     	;# 
   308     0517                     	;# 
   309     0518                     	;# 
   310     0519                     	;# 
   311     051A                     	;# 
   312     051B                     	;# 
   313     051C                     	;# 
   314     051D                     	;# 
   315     051E                     	;# 
   316     058D                     	;# 
   317     058E                     	;# 
   318     058F                     	;# 
   319     058F                     	;# 
   320     058F                     	;# 
   321     0590                     	;# 
   322     0590                     	;# 
   323     0591                     	;# 
   324     0592                     	;# 
   325     0592                     	;# 
   326     0592                     	;# 
   327     0593                     	;# 
   328     0593                     	;# 
   329     0594                     	;# 
   330     0595                     	;# 
   331     0595                     	;# 
   332     0596                     	;# 
   333     0597                     	;# 
   334     0597                     	;# 
   335     0598                     	;# 
   336     0599                     	;# 
   337     0599                     	;# 
   338     0599                     	;# 
   339     059A                     	;# 
   340     059A                     	;# 
   341     059B                     	;# 
   342     059C                     	;# 
   343     059C                     	;# 
   344     059C                     	;# 
   345     059D                     	;# 
   346     059D                     	;# 
   347     059E                     	;# 
   348     059F                     	;# 
   349     059F                     	;# 
   350     060C                     	;# 
   351     060D                     	;# 
   352     060D                     	;# 
   353     060E                     	;# 
   354     060F                     	;# 
   355     0610                     	;# 
   356     0611                     	;# 
   357     0612                     	;# 
   358     0613                     	;# 
   359     0614                     	;# 
   360     0614                     	;# 
   361     0615                     	;# 
   362     0616                     	;# 
   363     0617                     	;# 
   364     0617                     	;# 
   365     0618                     	;# 
   366     0619                     	;# 
   367     061A                     	;# 
   368     061A                     	;# 
   369     061B                     	;# 
   370     061C                     	;# 
   371     061D                     	;# 
   372     061D                     	;# 
   373     061E                     	;# 
   374     061F                     	;# 
   375     068D                     	;# 
   376     068E                     	;# 
   377     068F                     	;# 
   378     0690                     	;# 
   379     0691                     	;# 
   380     0692                     	;# 
   381     0693                     	;# 
   382     0694                     	;# 
   383     0695                     	;# 
   384     0696                     	;# 
   385     0697                     	;# 
   386     0698                     	;# 
   387     0699                     	;# 
   388     069A                     	;# 
   389     069B                     	;# 
   390     069C                     	;# 
   391     069D                     	;# 
   392     069E                     	;# 
   393     069F                     	;# 
   394     070D                     	;# 
   395     070E                     	;# 
   396     070F                     	;# 
   397     0710                     	;# 
   398     0711                     	;# 
   399     0712                     	;# 
   400     0713                     	;# 
   401     0714                     	;# 
   402     0715                     	;# 
   403     0716                     	;# 
   404     0717                     	;# 
   405     0718                     	;# 
   406     0719                     	;# 
   407     071A                     	;# 
   408     071B                     	;# 
   409     071C                     	;# 
   410     071D                     	;# 
   411     071E                     	;# 
   412     071F                     	;# 
   413     078E                     	;# 
   414     078F                     	;# 
   415     0790                     	;# 
   416     0791                     	;# 
   417     0792                     	;# 
   418     0793                     	;# 
   419     0794                     	;# 
   420     0795                     	;# 
   421     0796                     	;# 
   422     0797                     	;# 
   423     0798                     	;# 
   424     0799                     	;# 
   425     079A                     	;# 
   426     079B                     	;# 
   427     079C                     	;# 
   428     079D                     	;# 
   429     079E                     	;# 
   430     079F                     	;# 
   431     080D                     	;# 
   432     080E                     	;# 
   433     080F                     	;# 
   434     0810                     	;# 
   435     0811                     	;# 
   436     0812                     	;# 
   437     0813                     	;# 
   438     0814                     	;# 
   439     0815                     	;# 
   440     0816                     	;# 
   441     0817                     	;# 
   442     0818                     	;# 
   443     0819                     	;# 
   444     081A                     	;# 
   445     081B                     	;# 
   446     081C                     	;# 
   447     081D                     	;# 
   448     081E                     	;# 
   449     081F                     	;# 
   450     088D                     	;# 
   451     088E                     	;# 
   452     088F                     	;# 
   453     0890                     	;# 
   454     0891                     	;# 
   455     0892                     	;# 
   456     0893                     	;# 
   457     0894                     	;# 
   458     0895                     	;# 
   459     0896                     	;# 
   460     0897                     	;# 
   461     0898                     	;# 
   462     0899                     	;# 
   463     089A                     	;# 
   464     089B                     	;# 
   465     089C                     	;# 
   466     089D                     	;# 
   467     089E                     	;# 
   468     089F                     	;# 
   469     090C                     	;# 
   470     090D                     	;# 
   471     090E                     	;# 
   472     090F                     	;# 
   473     0910                     	;# 
   474     0911                     	;# 
   475     0912                     	;# 
   476     0913                     	;# 
   477     0914                     	;# 
   478     0915                     	;# 
   479     0916                     	;# 
   480     0917                     	;# 
   481     0918                     	;# 
   482     0919                     	;# 
   483     091A                     	;# 
   484     091B                     	;# 
   485     091C                     	;# 
   486     091D                     	;# 
   487     091E                     	;# 
   488     091F                     	;# 
   489     0D1B                     	;# 
   490     0D1C                     	;# 
   491     0D1D                     	;# 
   492     0D1E                     	;# 
   493     0D1F                     	;# 
   494     0D8E                     	;# 
   495     0D8F                     	;# 
   496     0D90                     	;# 
   497     0D91                     	;# 
   498     0D91                     	;# 
   499     0D92                     	;# 
   500     0D93                     	;# 
   501     0D93                     	;# 
   502     0D94                     	;# 
   503     0D95                     	;# 
   504     0D95                     	;# 
   505     0D96                     	;# 
   506     0D97                     	;# 
   507     0D97                     	;# 
   508     0D98                     	;# 
   509     0D99                     	;# 
   510     0D99                     	;# 
   511     0D9A                     	;# 
   512     0D9B                     	;# 
   513     0D9C                     	;# 
   514     0D9C                     	;# 
   515     0D9D                     	;# 
   516     0D9D                     	;# 
   517     0D9E                     	;# 
   518     0D9F                     	;# 
   519     0DA0                     	;# 
   520     0DA1                     	;# 
   521     0DA1                     	;# 
   522     0DA2                     	;# 
   523     0DA3                     	;# 
   524     0DA3                     	;# 
   525     0DA4                     	;# 
   526     0DA5                     	;# 
   527     0DA5                     	;# 
   528     0DA6                     	;# 
   529     0DA7                     	;# 
   530     0DA7                     	;# 
   531     0DA8                     	;# 
   532     0DA9                     	;# 
   533     0DA9                     	;# 
   534     0DAA                     	;# 
   535     0DAB                     	;# 
   536     0DAC                     	;# 
   537     0DAC                     	;# 
   538     0DAD                     	;# 
   539     0DAD                     	;# 
   540     0DAE                     	;# 
   541     0DAF                     	;# 
   542     0DB0                     	;# 
   543     0DB1                     	;# 
   544     0DB1                     	;# 
   545     0DB2                     	;# 
   546     0DB3                     	;# 
   547     0DB3                     	;# 
   548     0DB4                     	;# 
   549     0DB5                     	;# 
   550     0DB5                     	;# 
   551     0DB6                     	;# 
   552     0DB7                     	;# 
   553     0DB7                     	;# 
   554     0DB8                     	;# 
   555     0DB9                     	;# 
   556     0DB9                     	;# 
   557     0DBA                     	;# 
   558     0DBB                     	;# 
   559     0DBC                     	;# 
   560     0DBC                     	;# 
   561     0DBD                     	;# 
   562     0DBD                     	;# 
   563     0DBE                     	;# 
   564     0DBF                     	;# 
   565     0DC0                     	;# 
   566     0DC1                     	;# 
   567     0DC1                     	;# 
   568     0DC2                     	;# 
   569     0DC3                     	;# 
   570     0DC3                     	;# 
   571     0DC4                     	;# 
   572     0DC5                     	;# 
   573     0DC5                     	;# 
   574     0DC6                     	;# 
   575     0DC7                     	;# 
   576     0DC7                     	;# 
   577     0DC8                     	;# 
   578     0DC9                     	;# 
   579     0DC9                     	;# 
   580     0DCA                     	;# 
   581     0DCB                     	;# 
   582     0DCC                     	;# 
   583     0DCC                     	;# 
   584     0DCD                     	;# 
   585     0DCD                     	;# 
   586     0DCE                     	;# 
   587     0DCF                     	;# 
   588     0DD0                     	;# 
   589     0E0C                     	;# 
   590     0E0D                     	;# 
   591     0E0E                     	;# 
   592     0E0F                     	;# 
   593     0E10                     	;# 
   594     0E11                     	;# 
   595     0E12                     	;# 
   596     0E13                     	;# 
   597     0E14                     	;# 
   598     0E15                     	;# 
   599     0E15                     	;# 
   600     0E15                     	;# 
   601     0E16                     	;# 
   602     0E16                     	;# 
   603     0E16                     	;# 
   604     0E17                     	;# 
   605     0E17                     	;# 
   606     0E17                     	;# 
   607     0E18                     	;# 
   608     0E18                     	;# 
   609     0E18                     	;# 
   610     0E19                     	;# 
   611     0E1A                     	;# 
   612     0E1B                     	;# 
   613     0E1C                     	;# 
   614     0E1D                     	;# 
   615     0E1E                     	;# 
   616     0E1F                     	;# 
   617     0E20                     	;# 
   618     0E21                     	;# 
   619     0E22                     	;# 
   620     0E23                     	;# 
   621     0E24                     	;# 
   622     0E25                     	;# 
   623     0E26                     	;# 
   624     0E27                     	;# 
   625     0E28                     	;# 
   626     0E29                     	;# 
   627     0E2A                     	;# 
   628     0E2B                     	;# 
   629     0E2C                     	;# 
   630     0E2D                     	;# 
   631     0E2E                     	;# 
   632     0E2F                     	;# 
   633     0E30                     	;# 
   634     0E31                     	;# 
   635     0E32                     	;# 
   636     0E33                     	;# 
   637     0E34                     	;# 
   638     0E35                     	;# 
   639     0E36                     	;# 
   640     0E37                     	;# 
   641     0E38                     	;# 
   642     0E39                     	;# 
   643     0E3A                     	;# 
   644     0E3B                     	;# 
   645     0E3C                     	;# 
   646     0E3D                     	;# 
   647     0E3E                     	;# 
   648     0E90                     	;# 
   649     0E91                     	;# 
   650     0E92                     	;# 
   651     0E93                     	;# 
   652     0E94                     	;# 
   653     0E95                     	;# 
   654     0E96                     	;# 
   655     0E97                     	;# 
   656     0E98                     	;# 
   657     0E99                     	;# 
   658     0E9A                     	;# 
   659     0E9B                     	;# 
   660     0E9C                     	;# 
   661     0E9D                     	;# 
   662     0E9E                     	;# 
   663     0E9F                     	;# 
   664     0EA0                     	;# 
   665     0EA1                     	;# 
   666     0EA2                     	;# 
   667     0EA3                     	;# 
   668     0EA4                     	;# 
   669     0EA5                     	;# 
   670     0EA6                     	;# 
   671     0EA7                     	;# 
   672     0EA8                     	;# 
   673     0EA9                     	;# 
   674     0EAA                     	;# 
   675     0EAB                     	;# 
   676     0EAC                     	;# 
   677     0EAD                     	;# 
   678     0EAE                     	;# 
   679     0EAF                     	;# 
   680     0EB0                     	;# 
   681     0EB1                     	;# 
   682     0EB2                     	;# 
   683     0F0F                     	;# 
   684     0F10                     	;# 
   685     0F11                     	;# 
   686     0F12                     	;# 
   687     0F13                     	;# 
   688     0F14                     	;# 
   689     0F15                     	;# 
   690     0F16                     	;# 
   691     0F17                     	;# 
   692     0F18                     	;# 
   693     0F19                     	;# 
   694     0F1A                     	;# 
   695     0F1B                     	;# 
   696     0F1C                     	;# 
   697     0F1D                     	;# 
   698     0F1E                     	;# 
   699     0F1F                     	;# 
   700     0F20                     	;# 
   701     0F21                     	;# 
   702     0F22                     	;# 
   703     0F23                     	;# 
   704     0F24                     	;# 
   705     0F25                     	;# 
   706     0F26                     	;# 
   707     0F27                     	;# 
   708     0F28                     	;# 
   709     0F29                     	;# 
   710     0F2A                     	;# 
   711     0F2B                     	;# 
   712     0F2C                     	;# 
   713     0F2D                     	;# 
   714     0F2E                     	;# 
   715     0F2F                     	;# 
   716     0F30                     	;# 
   717     0F31                     	;# 
   718     0F32                     	;# 
   719     0F33                     	;# 
   720     0F34                     	;# 
   721     0F35                     	;# 
   722     0F36                     	;# 
   723     0F37                     	;# 
   724     0FE4                     	;# 
   725     0FE5                     	;# 
   726     0FE6                     	;# 
   727     0FE7                     	;# 
   728     0FE8                     	;# 
   729     0FE9                     	;# 
   730     0FEA                     	;# 
   731     0FEB                     	;# 
   732     0FED                     	;# 
   733     0FEE                     	;# 
   734     0FEF                     	;# 
   735     000C                     _PORTAbits	set	12
   736     000F                     _PORTDbits	set	15
   737     000E                     _PORTCbits	set	14
   738     000B                     _INTCONbits	set	11
   739     0011                     _PIR1bits	set	17
   740     0091                     _PIE1bits	set	145
   741     0097                     _OPTION_REGbits	set	151
   742     008F                     _TRISD	set	143
   743     008E                     _TRISC	set	142
   744     008D                     _TRISB	set	141
   745     008C                     _TRISA	set	140
   746     009B                     _OSCCON	set	155
   747     010F                     _LATDbits	set	271
   748     010D                     _LATBbits	set	269
   749     010C                     _LATAbits	set	268
   750     0110                     _LATE	set	272
   751     010F                     _LATD	set	271
   752     010E                     _LATC	set	270
   753     010D                     _LATB	set	269
   754     010C                     _LATA	set	268
   755     019A                     _TX1REG	set	410
   756     0199                     _RC1REG	set	409
   757     019D                     _RC1STAbits	set	413
   758     019C                     _SP1BRGH	set	412
   759     019B                     _SP1BRGL	set	411
   760     019F                     _BAUD1CON	set	415
   761     019D                     _RC1STA	set	413
   762     019E                     _TX1STA	set	414
   763     0190                     _ANSELE	set	400
   764     018F                     _ANSELD	set	399
   765     018E                     _ANSELC	set	398
   766     018D                     _ANSELB	set	397
   767     018C                     _ANSELA	set	396
   768     020F                     _WPUD	set	527
   769     020E                     _WPUC	set	526
   770     020D                     _WPUB	set	525
   771     020C                     _WPUA	set	524
   772     0299                     _CCPR7L	set	665
   773     029A                     _CCPR7H	set	666
   774     029B                     _CCP7CON	set	667
   775     0295                     _CCPR2L	set	661
   776     0296                     _CCPR2H	set	662
   777     0297                     _CCP2CON	set	663
   778     0291                     _CCPR1L	set	657
   779     0292                     _CCPR1H	set	658
   780     029E                     _CCPTMRS1bits	set	670
   781     0293                     _CCP1CON	set	659
   782     029F                     _CCPTMRS2bits	set	671
   783     0311                     _CCPR8L	set	785
   784     0312                     _CCPR8H	set	786
   785     0313                     _CCP8CON	set	787
   786     0494                     _T2PR	set	1172
   787     0495                     _T2CON	set	1173
   788     0497                     _T2CLKCONbits	set	1175
   789     0617                     _PWM4DCL	set	1559
   790     0618                     _PWM4DCH	set	1560
   791     0619                     _PWM4CON	set	1561
   792     0614                     _PWM3DCL	set	1556
   793     0615                     _PWM3DCH	set	1557
   794     0616                     _PWM3CON	set	1558
   795     0E3D                     _RXPPS	set	3645
   796     0EAD                     _RD5PPS	set	3757
   797     0EAF                     _RD7PPS	set	3759
   798     0E99                     _RB1PPS	set	3737
   799     0E9B                     _RB3PPS	set	3739
   800     0E93                     _RA3PPS	set	3731
   801     0E91                     _RA1PPS	set	3729
   802     0E9C                     _RB4PPS	set	3740
   803     0EAC                     _RD4PPS	set	3756
   804     0EAE                     _RD6PPS	set	3758
   805     0E98                     _RB0PPS	set	3736
   806     0E9A                     _RB2PPS	set	3738
   807     0E92                     _RA2PPS	set	3730
   808     0E90                     _RA0PPS	set	3728
   809                           
   810                           	psect	cinit
   811     001F                     start_initialization:	
   812                           ; #config settings
   813                           
   814     001F                     __initialization:
   815                           
   816                           ; Clear objects allocated to COMMON
   817     001F  01FC               	clrf	__pbssCOMMON& (0+127)
   818     0020                     end_of_initialization:	
   819                           ;End of C runtime variable initialization code
   820                           
   821     0020                     __end_of__initialization:
   822     0020  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   823     0021  0020               	movlb	0
   824     0022  3180  2824         	ljmp	_main	;jump to C main() function
   825                           
   826                           	psect	bssCOMMON
   827     007C                     __pbssCOMMON:
   828     007C                     _g_ReadData:
   829     007C                     	ds	1
   830                           
   831                           	psect	cstackCOMMON
   832     0070                     __pcstackCOMMON:
   833     0070                     ?_SwitchA_Read:
   834     0070                     ??_SwitchA_Read:	
   835                           ; 1 bytes @ 0x0
   836                           
   837     0070                     ?_Signal1_Read:	
   838                           ; 1 bytes @ 0x0
   839                           
   840     0070                     ??_Signal1_Read:	
   841                           ; 1 bytes @ 0x0
   842                           
   843     0070                     ?_Signal2_Read:	
   844                           ; 1 bytes @ 0x0
   845                           
   846     0070                     ??_Signal2_Read:	
   847                           ; 1 bytes @ 0x0
   848                           
   849     0070                     ?_Signal3_Read:	
   850                           ; 1 bytes @ 0x0
   851                           
   852     0070                     ??_Signal3_Read:	
   853                           ; 1 bytes @ 0x0
   854                           
   855     0070                     ?_Signal4_Read:	
   856                           ; 1 bytes @ 0x0
   857                           
   858     0070                     ??_Signal4_Read:	
   859                           ; 1 bytes @ 0x0
   860                           
   861     0070                     ?_main:	
   862                           ; 1 bytes @ 0x0
   863                           
   864     0070                     ?_ISR:	
   865                           ; 1 bytes @ 0x0
   866                           
   867     0070                     ??_ISR:	
   868                           ; 1 bytes @ 0x0
   869                           
   870     0070                     ?___wmul:	
   871                           ; 1 bytes @ 0x0
   872                           
   873     0070                     ___wmul@multiplier:	
   874                           ; 2 bytes @ 0x0
   875                           
   876                           
   877                           ; 2 bytes @ 0x0
   878     0070                     	ds	2
   879     0072                     ___wmul@multiplicand:
   880                           
   881                           ; 2 bytes @ 0x2
   882     0072                     	ds	2
   883     0074                     ??___wmul:
   884     0074                     ___wmul@product:	
   885                           ; 1 bytes @ 0x4
   886                           
   887                           
   888                           ; 2 bytes @ 0x4
   889     0074                     	ds	2
   890     0076                     ?_motorA:
   891     0076                     ?_motorB:	
   892                           ; 1 bytes @ 0x6
   893                           
   894     0076                     ?_motorC:	
   895                           ; 1 bytes @ 0x6
   896                           
   897     0076                     ?_motorD:	
   898                           ; 1 bytes @ 0x6
   899                           
   900     0076                     ?_motorE:	
   901                           ; 1 bytes @ 0x6
   902                           
   903     0076                     ?_motorF:	
   904                           ; 1 bytes @ 0x6
   905                           
   906     0076                     motorA@duty:	
   907                           ; 1 bytes @ 0x6
   908                           
   909     0076                     motorB@duty:	
   910                           ; 2 bytes @ 0x6
   911                           
   912     0076                     motorC@duty:	
   913                           ; 2 bytes @ 0x6
   914                           
   915     0076                     motorD@duty:	
   916                           ; 2 bytes @ 0x6
   917                           
   918     0076                     motorE@duty:	
   919                           ; 2 bytes @ 0x6
   920                           
   921     0076                     motorF@duty:	
   922                           ; 2 bytes @ 0x6
   923                           
   924                           
   925                           ; 2 bytes @ 0x6
   926     0076                     	ds	2
   927     0078                     ??_motorA:
   928     0078                     ??_motorB:	
   929                           ; 1 bytes @ 0x8
   930                           
   931     0078                     ??_motorC:	
   932                           ; 1 bytes @ 0x8
   933                           
   934     0078                     ??_motorD:	
   935                           ; 1 bytes @ 0x8
   936                           
   937     0078                     ??_motorE:	
   938                           ; 1 bytes @ 0x8
   939                           
   940     0078                     ??_motorF:	
   941                           ; 1 bytes @ 0x8
   942                           
   943                           
   944                           ; 1 bytes @ 0x8
   945     0078                     	ds	2
   946     007A                     ??_main:
   947     007A                     main@sum:	
   948                           ; 1 bytes @ 0xA
   949                           
   950                           
   951                           ; 2 bytes @ 0xA
   952     007A                     	ds	2
   953                           
   954                           	psect	maintext
   955     0024                     __pmaintext:	
   956 ;;
   957 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   958 ;;
   959 ;; *************** function _main *****************
   960 ;; Defined at:
   961 ;;		line 64 in file "main.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  sum             2   10[COMMON] int 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : B1F/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   976 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   979 ;;Total ram usage:        2 bytes
   980 ;; Hardware stack levels required when called: 3
   981 ;; This function calls:
   982 ;;		_Signal1_Read
   983 ;;		_Signal2_Read
   984 ;;		_Signal3_Read
   985 ;;		_Signal4_Read
   986 ;;		_SwitchA_Read
   987 ;;		_motorA
   988 ;;		_motorB
   989 ;;		_motorC
   990 ;;		_motorD
   991 ;;		_motorE
   992 ;;		_motorF
   993 ;; This function is called by:
   994 ;;		Startup code after reset
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998     0024                     _main:	
   999                           ;psect for function _main
  1000                           
  1001     0024                     l1623:	
  1002                           ;incstack = 0
  1003                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1004                           
  1005                           
  1006                           ;main.c: 65:     OSCCON = 0b11110000;
  1007     0024  30F0               	movlw	240
  1008     0025  0021               	movlb	1	; select bank1
  1009     0026  009B               	movwf	27	;volatile
  1010     0027                     l1625:
  1011                           
  1012                           ;main.c: 66:     ANSELA = 0x00;
  1013     0027  0023               	movlb	3	; select bank3
  1014     0028  018C               	clrf	12	;volatile
  1015     0029                     l1627:
  1016                           
  1017                           ;main.c: 67:     ANSELB = 0x00;
  1018     0029  018D               	clrf	13	;volatile
  1019     002A                     l1629:
  1020                           
  1021                           ;main.c: 68:     ANSELC = 0x00;
  1022     002A  018E               	clrf	14	;volatile
  1023     002B                     l1631:
  1024                           
  1025                           ;main.c: 69:     ANSELD = 0x00;
  1026     002B  018F               	clrf	15	;volatile
  1027     002C                     l1633:
  1028                           
  1029                           ;main.c: 70:     ANSELE = 0x00;
  1030     002C  0190               	clrf	16	;volatile
  1031     002D                     l1635:
  1032                           
  1033                           ;main.c: 71:     TRISA = 0b11000000;
  1034     002D  30C0               	movlw	192
  1035     002E  0021               	movlb	1	; select bank1
  1036     002F  008C               	movwf	12	;volatile
  1037     0030                     l1637:
  1038                           
  1039                           ;main.c: 72:     TRISB = 0b00100000;
  1040     0030  3020               	movlw	32
  1041     0031  008D               	movwf	13	;volatile
  1042     0032                     l1639:
  1043                           
  1044                           ;main.c: 73:     TRISC = 0b00001111;
  1045     0032  300F               	movlw	15
  1046     0033  008E               	movwf	14	;volatile
  1047     0034                     l1641:
  1048                           
  1049                           ;main.c: 74:     TRISD = 0b00000011;
  1050     0034  3003               	movlw	3
  1051     0035  008F               	movwf	15	;volatile
  1052     0036                     l1643:
  1053                           
  1054                           ;main.c: 75:     LATA = 0x00;
  1055     0036  0022               	movlb	2	; select bank2
  1056     0037  018C               	clrf	12	;volatile
  1057     0038                     l1645:
  1058                           
  1059                           ;main.c: 76:     LATB = 0x00;
  1060     0038  018D               	clrf	13	;volatile
  1061     0039                     l1647:
  1062                           
  1063                           ;main.c: 77:     LATC = 0x00;
  1064     0039  018E               	clrf	14	;volatile
  1065     003A                     l1649:
  1066                           
  1067                           ;main.c: 78:     LATD = 0x00;
  1068     003A  018F               	clrf	15	;volatile
  1069     003B                     l1651:
  1070                           
  1071                           ;main.c: 79:     LATE = 0x00;
  1072     003B  0190               	clrf	16	;volatile
  1073     003C                     l1653:
  1074                           
  1075                           ;main.c: 81:     WPUA = 0x00;
  1076     003C  0024               	movlb	4	; select bank4
  1077     003D  018C               	clrf	12	;volatile
  1078     003E                     l1655:
  1079                           
  1080                           ;main.c: 82:     WPUB = 0x00;
  1081     003E  018D               	clrf	13	;volatile
  1082                           
  1083                           ;main.c: 83:     WPUC = 0b00001100;
  1084     003F  300C               	movlw	12
  1085     0040  008E               	movwf	14	;volatile
  1086                           
  1087                           ;main.c: 84:     WPUD = 0b00000011;
  1088     0041  3003               	movlw	3
  1089     0042  008F               	movwf	15	;volatile
  1090     0043                     l1657:
  1091                           
  1092                           ;main.c: 85:     OPTION_REGbits.nWPUEN = 0;
  1093     0043  0021               	movlb	1	; select bank1
  1094     0044  1397               	bcf	23,7	;volatile
  1095     0045                     l1659:
  1096                           
  1097                           ;main.c: 90:     T2CLKCONbits.CS = 0b0001;
  1098     0045  0029               	movlb	9	; select bank9
  1099     0046  0817               	movf	23,w	;volatile
  1100     0047  39F0               	andlw	-16
  1101     0048  3801               	iorlw	1
  1102     0049  0097               	movwf	23	;volatile
  1103     004A                     l1661:
  1104                           
  1105                           ;main.c: 91:     T2CON = 0b10000000;
  1106     004A  3080               	movlw	128
  1107     004B  0095               	movwf	21	;volatile
  1108     004C                     l1663:
  1109                           
  1110                           ;main.c: 92:     T2PR = 0xFF;
  1111     004C  30FF               	movlw	255
  1112     004D  0094               	movwf	20	;volatile
  1113     004E                     l1665:
  1114                           
  1115                           ;main.c: 95:     RA0PPS = 0b011001;
  1116     004E  3019               	movlw	25
  1117     004F  003D               	movlb	29	; select bank29
  1118     0050  0090               	movwf	16	;volatile
  1119     0051                     l1667:
  1120                           
  1121                           ;main.c: 97:     PWM3CON = 0b10000000;
  1122     0051  3080               	movlw	128
  1123     0052  002C               	movlb	12	; select bank12
  1124     0053  0096               	movwf	22	;volatile
  1125     0054                     l1669:
  1126                           
  1127                           ;main.c: 98:     CCPTMRS2bits.P3TSEL = 0b00;
  1128     0054  30FC               	movlw	-4
  1129     0055  0025               	movlb	5	; select bank5
  1130     0056  059F               	andwf	31,f	;volatile
  1131     0057                     l1671:
  1132                           
  1133                           ;main.c: 99:     PWM3DCH = 0x00;
  1134     0057  002C               	movlb	12	; select bank12
  1135     0058  0195               	clrf	21	;volatile
  1136     0059                     l1673:
  1137                           
  1138                           ;main.c: 100:     PWM3DCL = 0x00;
  1139     0059  0194               	clrf	20	;volatile
  1140                           
  1141                           ;main.c: 103:     RA2PPS = 0b011010;
  1142     005A  301A               	movlw	26
  1143     005B  003D               	movlb	29	; select bank29
  1144     005C  0092               	movwf	18	;volatile
  1145                           
  1146                           ;main.c: 105:     PWM4CON = 0b10000000;
  1147     005D  3080               	movlw	128
  1148     005E  002C               	movlb	12	; select bank12
  1149     005F  0099               	movwf	25	;volatile
  1150     0060                     l1675:
  1151                           
  1152                           ;main.c: 106:     CCPTMRS2bits.P4TSEL = 0b00;
  1153     0060  30F3               	movlw	-13
  1154     0061  0025               	movlb	5	; select bank5
  1155     0062  059F               	andwf	31,f	;volatile
  1156     0063                     l1677:
  1157                           
  1158                           ;main.c: 107:     PWM4DCH = 0x00;
  1159     0063  002C               	movlb	12	; select bank12
  1160     0064  0198               	clrf	24	;volatile
  1161     0065                     l1679:
  1162                           
  1163                           ;main.c: 108:     PWM4DCL = 0x00;
  1164     0065  0197               	clrf	23	;volatile
  1165     0066                     l1681:
  1166                           
  1167                           ;main.c: 112:     RB2PPS = 0b010101;
  1168     0066  3015               	movlw	21
  1169     0067  003D               	movlb	29	; select bank29
  1170     0068  009A               	movwf	26	;volatile
  1171     0069                     l1683:
  1172                           
  1173                           ;main.c: 113:     CCP1CON = 0b10011100;
  1174     0069  309C               	movlw	156
  1175     006A  0025               	movlb	5	; select bank5
  1176     006B  0093               	movwf	19	;volatile
  1177     006C                     l1685:
  1178                           
  1179                           ;main.c: 114:     CCPTMRS1bits.C1TSEL = 0b00;
  1180     006C  30FC               	movlw	-4
  1181     006D  059E               	andwf	30,f	;volatile
  1182     006E                     l1687:
  1183                           
  1184                           ;main.c: 115:     CCPR1H = 0x00;
  1185     006E  0192               	clrf	18	;volatile
  1186     006F                     l1689:
  1187                           
  1188                           ;main.c: 116:     CCPR1L = 0x00;
  1189     006F  0191               	clrf	17	;volatile
  1190                           
  1191                           ;main.c: 120:     RB0PPS = 0b010110;
  1192     0070  3016               	movlw	22
  1193     0071  003D               	movlb	29	; select bank29
  1194     0072  0098               	movwf	24	;volatile
  1195                           
  1196                           ;main.c: 121:     CCP2CON = 0b10011100;
  1197     0073  309C               	movlw	156
  1198     0074  0025               	movlb	5	; select bank5
  1199     0075  0097               	movwf	23	;volatile
  1200     0076                     l1691:
  1201                           
  1202                           ;main.c: 122:     CCPTMRS1bits.C2TSEL = 0b00;
  1203     0076  30F3               	movlw	-13
  1204     0077  059E               	andwf	30,f	;volatile
  1205     0078                     l1693:
  1206                           
  1207                           ;main.c: 123:     CCPR2H = 0x00;
  1208     0078  0196               	clrf	22	;volatile
  1209     0079                     l1695:
  1210                           
  1211                           ;main.c: 124:     CCPR2L = 0x00;
  1212     0079  0195               	clrf	21	;volatile
  1213     007A                     l1697:
  1214                           
  1215                           ;main.c: 128:     RD6PPS = 0b010111;
  1216     007A  3017               	movlw	23
  1217     007B  003D               	movlb	29	; select bank29
  1218     007C  00AE               	movwf	46	;volatile
  1219     007D                     l1699:
  1220                           
  1221                           ;main.c: 129:     CCP7CON = 0b10011100;
  1222     007D  309C               	movlw	156
  1223     007E  0025               	movlb	5	; select bank5
  1224     007F  009B               	movwf	27	;volatile
  1225     0080                     l1701:
  1226                           
  1227                           ;main.c: 130:     CCPTMRS1bits.C7TSEL = 0b00;
  1228     0080  30CF               	movlw	-49
  1229     0081  059E               	andwf	30,f	;volatile
  1230     0082                     l1703:
  1231                           
  1232                           ;main.c: 131:     CCPR7H = 0x00;
  1233     0082  019A               	clrf	26	;volatile
  1234     0083                     l1705:
  1235                           
  1236                           ;main.c: 132:     CCPR7L = 0x00;
  1237     0083  0199               	clrf	25	;volatile
  1238                           
  1239                           ;main.c: 136:     RD4PPS = 0b011000;
  1240     0084  3018               	movlw	24
  1241     0085  003D               	movlb	29	; select bank29
  1242     0086  00AC               	movwf	44	;volatile
  1243                           
  1244                           ;main.c: 137:     CCP8CON = 0b10011100;
  1245     0087  309C               	movlw	156
  1246     0088  0026               	movlb	6	; select bank6
  1247     0089  0093               	movwf	19	;volatile
  1248     008A                     l1707:
  1249                           
  1250                           ;main.c: 138:     CCPTMRS1bits.C8TSEL = 0b00;
  1251     008A  303F               	movlw	-193
  1252     008B  0025               	movlb	5	; select bank5
  1253     008C  059E               	andwf	30,f	;volatile
  1254     008D                     l1709:
  1255                           
  1256                           ;main.c: 139:     CCPR8H = 0x00;
  1257     008D  0026               	movlb	6	; select bank6
  1258     008E  0192               	clrf	18	;volatile
  1259     008F                     l1711:
  1260                           
  1261                           ;main.c: 140:     CCPR8L = 0x00;
  1262     008F  0191               	clrf	17	;volatile
  1263     0090                     l1713:
  1264                           
  1265                           ;main.c: 143:     RXPPS = 0b001101;
  1266     0090  300D               	movlw	13
  1267     0091  003C               	movlb	28	; select bank28
  1268     0092  00BD               	movwf	61	;volatile
  1269     0093                     l1715:
  1270                           
  1271                           ;main.c: 144:     RB4PPS = 0b100100;
  1272     0093  3024               	movlw	36
  1273     0094  003D               	movlb	29	; select bank29
  1274     0095  009C               	movwf	28	;volatile
  1275     0096                     l1717:
  1276                           
  1277                           ;main.c: 145:     TX1STA = 0b00100100;
  1278     0096  3024               	movlw	36
  1279     0097  0023               	movlb	3	; select bank3
  1280     0098  009E               	movwf	30	;volatile
  1281     0099                     l1719:
  1282                           
  1283                           ;main.c: 146:     RC1STA = 0b10010000;
  1284     0099  3090               	movlw	144
  1285     009A  009D               	movwf	29	;volatile
  1286     009B                     l1721:
  1287                           
  1288                           ;main.c: 147:     BAUD1CON = 0b00001000;
  1289     009B  3008               	movlw	8
  1290     009C  009F               	movwf	31	;volatile
  1291     009D                     l1723:
  1292                           
  1293                           ;main.c: 148:     SP1BRGL = 416 & 0x00FF;
  1294     009D  30A0               	movlw	160
  1295     009E  009B               	movwf	27	;volatile
  1296     009F                     l1725:
  1297                           
  1298                           ;main.c: 149:     SP1BRGH = (416 >> 8) & 0x00FF;
  1299     009F  3001               	movlw	1
  1300     00A0  009C               	movwf	28	;volatile
  1301     00A1                     l1727:
  1302                           
  1303                           ;main.c: 151:     PIR1bits.RCIF = 0;
  1304     00A1  0020               	movlb	0	; select bank0
  1305     00A2  1291               	bcf	17,5	;volatile
  1306     00A3                     l1729:
  1307                           
  1308                           ;main.c: 152:     PIE1bits.RCIE = 1;
  1309     00A3  0021               	movlb	1	; select bank1
  1310     00A4  1691               	bsf	17,5	;volatile
  1311     00A5                     l1731:
  1312                           
  1313                           ;main.c: 153:     INTCONbits.PEIE = 1;
  1314     00A5  170B               	bsf	11,6	;volatile
  1315     00A6                     l1733:
  1316                           
  1317                           ;main.c: 154:     INTCONbits.GIE = 1;
  1318     00A6  178B               	bsf	11,7	;volatile
  1319     00A7                     l1735:
  1320     00A7                     l1737:
  1321                           
  1322                           ;main.c: 158:     motorA(0);
  1323     00A7  3000               	movlw	0
  1324     00A8  00F6               	movwf	motorA@duty
  1325     00A9  00F7               	movwf	motorA@duty+1
  1326     00AA  3185  25CA  3180   	fcall	_motorA
  1327     00AD                     l1739:
  1328                           
  1329                           ;main.c: 159:     motorB(0);
  1330     00AD  3000               	movlw	0
  1331     00AE  00F6               	movwf	motorB@duty
  1332     00AF  00F7               	movwf	motorB@duty+1
  1333     00B0  3185  2557  3180   	fcall	_motorB
  1334     00B3                     l1741:
  1335                           
  1336                           ;main.c: 160:     motorC(0);
  1337     00B3  3000               	movlw	0
  1338     00B4  00F6               	movwf	motorC@duty
  1339     00B5  00F7               	movwf	motorC@duty+1
  1340     00B6  3184  24E4  3180   	fcall	_motorC
  1341     00B9                     l1743:
  1342                           
  1343                           ;main.c: 161:     motorD(0);
  1344     00B9  3000               	movlw	0
  1345     00BA  00F6               	movwf	motorD@duty
  1346     00BB  00F7               	movwf	motorD@duty+1
  1347     00BC  3184  2471  3180   	fcall	_motorD
  1348     00BF                     l1745:
  1349                           
  1350                           ;main.c: 162:     motorE(0);
  1351     00BF  3000               	movlw	0
  1352     00C0  00F6               	movwf	motorE@duty
  1353     00C1  00F7               	movwf	motorE@duty+1
  1354     00C2  3183  23FE  3180   	fcall	_motorE
  1355     00C5                     l1747:
  1356                           
  1357                           ;main.c: 163:     motorF(0);
  1358     00C5  3000               	movlw	0
  1359     00C6  00F6               	movwf	motorF@duty
  1360     00C7  00F7               	movwf	motorF@duty+1
  1361     00C8  3183  238B  3180   	fcall	_motorF
  1362     00CB                     l1749:	
  1363                           ;main.c: 164:     while(SwitchA_Read());
  1364                           
  1365     00CB  3186  2662  3180   	fcall	_SwitchA_Read
  1366     00CE  3A00               	xorlw	0
  1367     00CF  1D03               	skipz
  1368     00D0  28D2               	goto	u661
  1369     00D1  28D3               	goto	u660
  1370     00D2                     u661:
  1371     00D2  28CB               	goto	l1749
  1372     00D3                     u660:
  1373     00D3                     l1751:
  1374                           
  1375                           ;main.c: 168:         sum = 0;
  1376     00D3  01FA               	clrf	main@sum
  1377     00D4  01FB               	clrf	main@sum+1
  1378     00D5                     l1753:
  1379                           
  1380                           ;main.c: 169:         if(Signal1_Read()){
  1381     00D5  3186  2667  3180   	fcall	_Signal1_Read
  1382     00D8  3A00               	xorlw	0
  1383     00D9  1903               	skipnz
  1384     00DA  28DC               	goto	u671
  1385     00DB  28DD               	goto	u670
  1386     00DC                     u671:
  1387     00DC  28E1               	goto	l1757
  1388     00DD                     u670:
  1389     00DD                     l1755:
  1390                           
  1391                           ;main.c: 170:             sum += 1;
  1392     00DD  3001               	movlw	1
  1393     00DE  07FA               	addwf	main@sum,f
  1394     00DF  3000               	movlw	0
  1395     00E0  3DFB               	addwfc	main@sum+1,f
  1396     00E1                     l1757:	
  1397                           ;main.c: 171:         }
  1398                           
  1399                           
  1400                           ;main.c: 174:         if(Signal2_Read()){
  1401     00E1  3186  265C  3180   	fcall	_Signal2_Read
  1402     00E4  3A00               	xorlw	0
  1403     00E5  1903               	skipnz
  1404     00E6  28E8               	goto	u681
  1405     00E7  28E9               	goto	u680
  1406     00E8                     u681:
  1407     00E8  28ED               	goto	l1761
  1408     00E9                     u680:
  1409     00E9                     l1759:
  1410                           
  1411                           ;main.c: 175:             sum += 2;
  1412     00E9  3002               	movlw	2
  1413     00EA  07FA               	addwf	main@sum,f
  1414     00EB  3000               	movlw	0
  1415     00EC  3DFB               	addwfc	main@sum+1,f
  1416     00ED                     l1761:	
  1417                           ;main.c: 176:         }
  1418                           
  1419                           
  1420                           ;main.c: 179:         if(Signal3_Read()){
  1421     00ED  3186  2670  3180   	fcall	_Signal3_Read
  1422     00F0  3A00               	xorlw	0
  1423     00F1  1903               	skipnz
  1424     00F2  28F4               	goto	u691
  1425     00F3  28F5               	goto	u690
  1426     00F4                     u691:
  1427     00F4  28F9               	goto	l1765
  1428     00F5                     u690:
  1429     00F5                     l1763:
  1430                           
  1431                           ;main.c: 180:             sum += 4;
  1432     00F5  3004               	movlw	4
  1433     00F6  07FA               	addwf	main@sum,f
  1434     00F7  3000               	movlw	0
  1435     00F8  3DFB               	addwfc	main@sum+1,f
  1436     00F9                     l1765:	
  1437                           ;main.c: 181:         }
  1438                           
  1439                           
  1440                           ;main.c: 184:         if(Signal4_Read()){
  1441     00F9  3186  266C  3180   	fcall	_Signal4_Read
  1442     00FC  3A00               	xorlw	0
  1443     00FD  1903               	skipnz
  1444     00FE  2900               	goto	u701
  1445     00FF  2901               	goto	u700
  1446     0100                     u701:
  1447     0100  2B55               	goto	l1803
  1448     0101                     u700:
  1449     0101                     l1767:
  1450                           
  1451                           ;main.c: 185:             sum += 8;
  1452     0101  3008               	movlw	8
  1453     0102  07FA               	addwf	main@sum,f
  1454     0103  3000               	movlw	0
  1455     0104  3DFB               	addwfc	main@sum+1,f
  1456                           
  1457                           ;main.c: 186:         }
  1458     0105  2B55               	goto	l1803
  1459     0106                     l1769:
  1460                           
  1461                           ;main.c: 191:                 motorA(0);
  1462     0106  3000               	movlw	0
  1463     0107  00F6               	movwf	motorA@duty
  1464     0108  00F7               	movwf	motorA@duty+1
  1465     0109  3185  25CA  3180   	fcall	_motorA
  1466                           
  1467                           ;main.c: 192:                 motorB(0);
  1468     010C  3000               	movlw	0
  1469     010D  00F6               	movwf	motorB@duty
  1470     010E  00F7               	movwf	motorB@duty+1
  1471     010F  3185  2557  3180   	fcall	_motorB
  1472                           
  1473                           ;main.c: 193:                 motorC(0);
  1474     0112  3000               	movlw	0
  1475     0113  00F6               	movwf	motorC@duty
  1476     0114  00F7               	movwf	motorC@duty+1
  1477     0115  3184  24E4  3180   	fcall	_motorC
  1478                           
  1479                           ;main.c: 194:                 motorD(0);
  1480     0118  3000               	movlw	0
  1481     0119  00F6               	movwf	motorD@duty
  1482     011A  00F7               	movwf	motorD@duty+1
  1483     011B  3184  2471  3180   	fcall	_motorD
  1484                           
  1485                           ;main.c: 195:                 motorE(0);
  1486     011E  3000               	movlw	0
  1487     011F  00F6               	movwf	motorE@duty
  1488     0120  00F7               	movwf	motorE@duty+1
  1489     0121  3183  23FE  3180   	fcall	_motorE
  1490                           
  1491                           ;main.c: 196:                 motorF(600);
  1492     0124  3058               	movlw	88
  1493     0125  00F6               	movwf	motorF@duty
  1494     0126  3002               	movlw	2
  1495     0127  00F7               	movwf	motorF@duty+1
  1496     0128  3183  238B  3180   	fcall	_motorF
  1497                           
  1498                           ;main.c: 197:                 break;
  1499     012B  28D3               	goto	l1751
  1500     012C                     l1771:
  1501                           
  1502                           ;main.c: 199:                 motorA(0);
  1503     012C  3000               	movlw	0
  1504     012D  00F6               	movwf	motorA@duty
  1505     012E  00F7               	movwf	motorA@duty+1
  1506     012F  3185  25CA  3180   	fcall	_motorA
  1507                           
  1508                           ;main.c: 200:                 motorB(0);
  1509     0132  3000               	movlw	0
  1510     0133  00F6               	movwf	motorB@duty
  1511     0134  00F7               	movwf	motorB@duty+1
  1512     0135  3185  2557  3180   	fcall	_motorB
  1513                           
  1514                           ;main.c: 201:                 motorC(0);
  1515     0138  3000               	movlw	0
  1516     0139  00F6               	movwf	motorC@duty
  1517     013A  00F7               	movwf	motorC@duty+1
  1518     013B  3184  24E4  3180   	fcall	_motorC
  1519                           
  1520                           ;main.c: 202:                 motorD(0);
  1521     013E  3000               	movlw	0
  1522     013F  00F6               	movwf	motorD@duty
  1523     0140  00F7               	movwf	motorD@duty+1
  1524     0141  3184  2471  3180   	fcall	_motorD
  1525                           
  1526                           ;main.c: 203:                 motorE(600);
  1527     0144  3058               	movlw	88
  1528     0145  00F6               	movwf	motorE@duty
  1529     0146  3002               	movlw	2
  1530     0147  00F7               	movwf	motorE@duty+1
  1531     0148  3183  23FE  3180   	fcall	_motorE
  1532                           
  1533                           ;main.c: 204:                 motorF(0);
  1534     014B  3000               	movlw	0
  1535     014C  00F6               	movwf	motorF@duty
  1536     014D  00F7               	movwf	motorF@duty+1
  1537     014E  3183  238B  3180   	fcall	_motorF
  1538                           
  1539                           ;main.c: 205:                 break;
  1540     0151  28D3               	goto	l1751
  1541     0152                     l1773:
  1542                           
  1543                           ;main.c: 207:                 motorA(0);
  1544     0152  3000               	movlw	0
  1545     0153  00F6               	movwf	motorA@duty
  1546     0154  00F7               	movwf	motorA@duty+1
  1547     0155  3185  25CA  3180   	fcall	_motorA
  1548                           
  1549                           ;main.c: 208:                 motorB(0);
  1550     0158  3000               	movlw	0
  1551     0159  00F6               	movwf	motorB@duty
  1552     015A  00F7               	movwf	motorB@duty+1
  1553     015B  3185  2557  3180   	fcall	_motorB
  1554                           
  1555                           ;main.c: 209:                 motorC(0);
  1556     015E  3000               	movlw	0
  1557     015F  00F6               	movwf	motorC@duty
  1558     0160  00F7               	movwf	motorC@duty+1
  1559     0161  3184  24E4  3180   	fcall	_motorC
  1560                           
  1561                           ;main.c: 210:                 motorD(0);
  1562     0164  3000               	movlw	0
  1563     0165  00F6               	movwf	motorD@duty
  1564     0166  00F7               	movwf	motorD@duty+1
  1565     0167  3184  2471  3180   	fcall	_motorD
  1566                           
  1567                           ;main.c: 211:                 motorE(-600);
  1568     016A  30A8               	movlw	168
  1569     016B  00F6               	movwf	motorE@duty
  1570     016C  30FD               	movlw	253
  1571     016D  00F7               	movwf	motorE@duty+1
  1572     016E  3183  23FE  3180   	fcall	_motorE
  1573                           
  1574                           ;main.c: 212:                 motorF(0);
  1575     0171  3000               	movlw	0
  1576     0172  00F6               	movwf	motorF@duty
  1577     0173  00F7               	movwf	motorF@duty+1
  1578     0174  3183  238B  3180   	fcall	_motorF
  1579                           
  1580                           ;main.c: 213:                 break;
  1581     0177  28D3               	goto	l1751
  1582     0178                     l1775:
  1583                           
  1584                           ;main.c: 215:                 motorA(0);
  1585     0178  3000               	movlw	0
  1586     0179  00F6               	movwf	motorA@duty
  1587     017A  00F7               	movwf	motorA@duty+1
  1588     017B  3185  25CA  3180   	fcall	_motorA
  1589                           
  1590                           ;main.c: 216:                 motorB(0);
  1591     017E  3000               	movlw	0
  1592     017F  00F6               	movwf	motorB@duty
  1593     0180  00F7               	movwf	motorB@duty+1
  1594     0181  3185  2557  3180   	fcall	_motorB
  1595                           
  1596                           ;main.c: 217:                 motorC(0);
  1597     0184  3000               	movlw	0
  1598     0185  00F6               	movwf	motorC@duty
  1599     0186  00F7               	movwf	motorC@duty+1
  1600     0187  3184  24E4  3180   	fcall	_motorC
  1601                           
  1602                           ;main.c: 218:                 motorD(0);
  1603     018A  3000               	movlw	0
  1604     018B  00F6               	movwf	motorD@duty
  1605     018C  00F7               	movwf	motorD@duty+1
  1606     018D  3184  2471  3180   	fcall	_motorD
  1607                           
  1608                           ;main.c: 219:                 motorE(0);
  1609     0190  3000               	movlw	0
  1610     0191  00F6               	movwf	motorE@duty
  1611     0192  00F7               	movwf	motorE@duty+1
  1612     0193  3183  23FE  3180   	fcall	_motorE
  1613                           
  1614                           ;main.c: 220:                 motorF(-600);
  1615     0196  30A8               	movlw	168
  1616     0197  00F6               	movwf	motorF@duty
  1617     0198  30FD               	movlw	253
  1618     0199  00F7               	movwf	motorF@duty+1
  1619     019A  3183  238B  3180   	fcall	_motorF
  1620                           
  1621                           ;main.c: 221:                 break;
  1622     019D  28D3               	goto	l1751
  1623     019E                     l1777:
  1624                           
  1625                           ;main.c: 223:                 motorA(-600);
  1626     019E  30A8               	movlw	168
  1627     019F  00F6               	movwf	motorA@duty
  1628     01A0  30FD               	movlw	253
  1629     01A1  00F7               	movwf	motorA@duty+1
  1630     01A2  3185  25CA  3180   	fcall	_motorA
  1631                           
  1632                           ;main.c: 224:                 motorB(0);
  1633     01A5  3000               	movlw	0
  1634     01A6  00F6               	movwf	motorB@duty
  1635     01A7  00F7               	movwf	motorB@duty+1
  1636     01A8  3185  2557  3180   	fcall	_motorB
  1637                           
  1638                           ;main.c: 225:                 motorC(0);
  1639     01AB  3000               	movlw	0
  1640     01AC  00F6               	movwf	motorC@duty
  1641     01AD  00F7               	movwf	motorC@duty+1
  1642     01AE  3184  24E4  3180   	fcall	_motorC
  1643                           
  1644                           ;main.c: 226:                 motorD(600);
  1645     01B1  3058               	movlw	88
  1646     01B2  00F6               	movwf	motorD@duty
  1647     01B3  3002               	movlw	2
  1648     01B4  00F7               	movwf	motorD@duty+1
  1649     01B5  3184  2471  3180   	fcall	_motorD
  1650                           
  1651                           ;main.c: 227:                 motorE(0);
  1652     01B8  3000               	movlw	0
  1653     01B9  00F6               	movwf	motorE@duty
  1654     01BA  00F7               	movwf	motorE@duty+1
  1655     01BB  3183  23FE  3180   	fcall	_motorE
  1656                           
  1657                           ;main.c: 228:                 motorF(0);
  1658     01BE  3000               	movlw	0
  1659     01BF  00F6               	movwf	motorF@duty
  1660     01C0  00F7               	movwf	motorF@duty+1
  1661     01C1  3183  238B  3180   	fcall	_motorF
  1662                           
  1663                           ;main.c: 229:                 break;
  1664     01C4  28D3               	goto	l1751
  1665     01C5                     l1779:
  1666                           
  1667                           ;main.c: 231:                 motorA(0);
  1668     01C5  3000               	movlw	0
  1669     01C6  00F6               	movwf	motorA@duty
  1670     01C7  00F7               	movwf	motorA@duty+1
  1671     01C8  3185  25CA  3180   	fcall	_motorA
  1672                           
  1673                           ;main.c: 232:                 motorB(600);
  1674     01CB  3058               	movlw	88
  1675     01CC  00F6               	movwf	motorB@duty
  1676     01CD  3002               	movlw	2
  1677     01CE  00F7               	movwf	motorB@duty+1
  1678     01CF  3185  2557  3180   	fcall	_motorB
  1679                           
  1680                           ;main.c: 233:                 motorC(-600);
  1681     01D2  30A8               	movlw	168
  1682     01D3  00F6               	movwf	motorC@duty
  1683     01D4  30FD               	movlw	253
  1684     01D5  00F7               	movwf	motorC@duty+1
  1685     01D6  3184  24E4  3180   	fcall	_motorC
  1686                           
  1687                           ;main.c: 234:                 motorD(0);
  1688     01D9  3000               	movlw	0
  1689     01DA  00F6               	movwf	motorD@duty
  1690     01DB  00F7               	movwf	motorD@duty+1
  1691     01DC  3184  2471  3180   	fcall	_motorD
  1692                           
  1693                           ;main.c: 235:                 motorE(0);
  1694     01DF  3000               	movlw	0
  1695     01E0  00F6               	movwf	motorE@duty
  1696     01E1  00F7               	movwf	motorE@duty+1
  1697     01E2  3183  23FE  3180   	fcall	_motorE
  1698                           
  1699                           ;main.c: 236:                 motorF(0);
  1700     01E5  3000               	movlw	0
  1701     01E6  00F6               	movwf	motorF@duty
  1702     01E7  00F7               	movwf	motorF@duty+1
  1703     01E8  3183  238B  3180   	fcall	_motorF
  1704                           
  1705                           ;main.c: 237:                 break;
  1706     01EB  28D3               	goto	l1751
  1707     01EC                     l1781:
  1708                           
  1709                           ;main.c: 239:                 motorA(0);
  1710     01EC  3000               	movlw	0
  1711     01ED  00F6               	movwf	motorA@duty
  1712     01EE  00F7               	movwf	motorA@duty+1
  1713     01EF  3185  25CA  3180   	fcall	_motorA
  1714                           
  1715                           ;main.c: 240:                 motorB(-600);
  1716     01F2  30A8               	movlw	168
  1717     01F3  00F6               	movwf	motorB@duty
  1718     01F4  30FD               	movlw	253
  1719     01F5  00F7               	movwf	motorB@duty+1
  1720     01F6  3185  2557  3180   	fcall	_motorB
  1721                           
  1722                           ;main.c: 241:                 motorC(600);
  1723     01F9  3058               	movlw	88
  1724     01FA  00F6               	movwf	motorC@duty
  1725     01FB  3002               	movlw	2
  1726     01FC  00F7               	movwf	motorC@duty+1
  1727     01FD  3184  24E4  3180   	fcall	_motorC
  1728                           
  1729                           ;main.c: 242:                 motorD(0);
  1730     0200  3000               	movlw	0
  1731     0201  00F6               	movwf	motorD@duty
  1732     0202  00F7               	movwf	motorD@duty+1
  1733     0203  3184  2471  3180   	fcall	_motorD
  1734                           
  1735                           ;main.c: 243:                 motorE(0);
  1736     0206  3000               	movlw	0
  1737     0207  00F6               	movwf	motorE@duty
  1738     0208  00F7               	movwf	motorE@duty+1
  1739     0209  3183  23FE  3180   	fcall	_motorE
  1740                           
  1741                           ;main.c: 244:                 motorF(0);
  1742     020C  3000               	movlw	0
  1743     020D  00F6               	movwf	motorF@duty
  1744     020E  00F7               	movwf	motorF@duty+1
  1745     020F  3183  238B  3180   	fcall	_motorF
  1746                           
  1747                           ;main.c: 245:                 break;
  1748     0212  28D3               	goto	l1751
  1749     0213                     l1783:
  1750                           
  1751                           ;main.c: 247:                 motorA(600);
  1752     0213  3058               	movlw	88
  1753     0214  00F6               	movwf	motorA@duty
  1754     0215  3002               	movlw	2
  1755     0216  00F7               	movwf	motorA@duty+1
  1756     0217  3185  25CA  3180   	fcall	_motorA
  1757                           
  1758                           ;main.c: 248:                 motorB(0);
  1759     021A  3000               	movlw	0
  1760     021B  00F6               	movwf	motorB@duty
  1761     021C  00F7               	movwf	motorB@duty+1
  1762     021D  3185  2557  3180   	fcall	_motorB
  1763                           
  1764                           ;main.c: 249:                 motorC(0);
  1765     0220  3000               	movlw	0
  1766     0221  00F6               	movwf	motorC@duty
  1767     0222  00F7               	movwf	motorC@duty+1
  1768     0223  3184  24E4  3180   	fcall	_motorC
  1769                           
  1770                           ;main.c: 250:                 motorD(-600);
  1771     0226  30A8               	movlw	168
  1772     0227  00F6               	movwf	motorD@duty
  1773     0228  30FD               	movlw	253
  1774     0229  00F7               	movwf	motorD@duty+1
  1775     022A  3184  2471  3180   	fcall	_motorD
  1776                           
  1777                           ;main.c: 251:                 motorE(0);
  1778     022D  3000               	movlw	0
  1779     022E  00F6               	movwf	motorE@duty
  1780     022F  00F7               	movwf	motorE@duty+1
  1781     0230  3183  23FE  3180   	fcall	_motorE
  1782                           
  1783                           ;main.c: 252:                 motorF(0);
  1784     0233  3000               	movlw	0
  1785     0234  00F6               	movwf	motorF@duty
  1786     0235  00F7               	movwf	motorF@duty+1
  1787     0236  3183  238B  3180   	fcall	_motorF
  1788                           
  1789                           ;main.c: 253:                 break;
  1790     0239  28D3               	goto	l1751
  1791     023A                     l1785:
  1792                           
  1793                           ;main.c: 255:                 motorA(-600);
  1794     023A  30A8               	movlw	168
  1795     023B  00F6               	movwf	motorA@duty
  1796     023C  30FD               	movlw	253
  1797     023D  00F7               	movwf	motorA@duty+1
  1798     023E  3185  25CA  3180   	fcall	_motorA
  1799                           
  1800                           ;main.c: 256:                 motorB(600);
  1801     0241  3058               	movlw	88
  1802     0242  00F6               	movwf	motorB@duty
  1803     0243  3002               	movlw	2
  1804     0244  00F7               	movwf	motorB@duty+1
  1805     0245  3185  2557  3180   	fcall	_motorB
  1806                           
  1807                           ;main.c: 257:                 motorC(-600);
  1808     0248  30A8               	movlw	168
  1809     0249  00F6               	movwf	motorC@duty
  1810     024A  30FD               	movlw	253
  1811     024B  00F7               	movwf	motorC@duty+1
  1812     024C  3184  24E4  3180   	fcall	_motorC
  1813                           
  1814                           ;main.c: 258:                 motorD(600);
  1815     024F  3058               	movlw	88
  1816     0250  00F6               	movwf	motorD@duty
  1817     0251  3002               	movlw	2
  1818     0252  00F7               	movwf	motorD@duty+1
  1819     0253  3184  2471  3180   	fcall	_motorD
  1820                           
  1821                           ;main.c: 259:                 motorE(0);
  1822     0256  3000               	movlw	0
  1823     0257  00F6               	movwf	motorE@duty
  1824     0258  00F7               	movwf	motorE@duty+1
  1825     0259  3183  23FE  3180   	fcall	_motorE
  1826                           
  1827                           ;main.c: 260:                 motorF(0);
  1828     025C  3000               	movlw	0
  1829     025D  00F6               	movwf	motorF@duty
  1830     025E  00F7               	movwf	motorF@duty+1
  1831     025F  3183  238B  3180   	fcall	_motorF
  1832                           
  1833                           ;main.c: 261:                 break;
  1834     0262  28D3               	goto	l1751
  1835     0263                     l1787:
  1836                           
  1837                           ;main.c: 263:                 motorA(600);
  1838     0263  3058               	movlw	88
  1839     0264  00F6               	movwf	motorA@duty
  1840     0265  3002               	movlw	2
  1841     0266  00F7               	movwf	motorA@duty+1
  1842     0267  3185  25CA  3180   	fcall	_motorA
  1843                           
  1844                           ;main.c: 264:                 motorB(600);
  1845     026A  3058               	movlw	88
  1846     026B  00F6               	movwf	motorB@duty
  1847     026C  3002               	movlw	2
  1848     026D  00F7               	movwf	motorB@duty+1
  1849     026E  3185  2557  3180   	fcall	_motorB
  1850                           
  1851                           ;main.c: 265:                 motorC(-600);
  1852     0271  30A8               	movlw	168
  1853     0272  00F6               	movwf	motorC@duty
  1854     0273  30FD               	movlw	253
  1855     0274  00F7               	movwf	motorC@duty+1
  1856     0275  3184  24E4  3180   	fcall	_motorC
  1857                           
  1858                           ;main.c: 266:                 motorD(-600);
  1859     0278  30A8               	movlw	168
  1860     0279  00F6               	movwf	motorD@duty
  1861     027A  30FD               	movlw	253
  1862     027B  00F7               	movwf	motorD@duty+1
  1863     027C  3184  2471  3180   	fcall	_motorD
  1864                           
  1865                           ;main.c: 267:                 motorE(0);
  1866     027F  3000               	movlw	0
  1867     0280  00F6               	movwf	motorE@duty
  1868     0281  00F7               	movwf	motorE@duty+1
  1869     0282  3183  23FE  3180   	fcall	_motorE
  1870                           
  1871                           ;main.c: 268:                 motorF(0);
  1872     0285  3000               	movlw	0
  1873     0286  00F6               	movwf	motorF@duty
  1874     0287  00F7               	movwf	motorF@duty+1
  1875     0288  3183  238B  3180   	fcall	_motorF
  1876                           
  1877                           ;main.c: 269:                 break;
  1878     028B  28D3               	goto	l1751
  1879     028C                     l1789:
  1880                           
  1881                           ;main.c: 271:                 motorA(-600);
  1882     028C  30A8               	movlw	168
  1883     028D  00F6               	movwf	motorA@duty
  1884     028E  30FD               	movlw	253
  1885     028F  00F7               	movwf	motorA@duty+1
  1886     0290  3185  25CA  3180   	fcall	_motorA
  1887                           
  1888                           ;main.c: 272:                 motorB(-600);
  1889     0293  30A8               	movlw	168
  1890     0294  00F6               	movwf	motorB@duty
  1891     0295  30FD               	movlw	253
  1892     0296  00F7               	movwf	motorB@duty+1
  1893     0297  3185  2557  3180   	fcall	_motorB
  1894                           
  1895                           ;main.c: 273:                 motorC(600);
  1896     029A  3058               	movlw	88
  1897     029B  00F6               	movwf	motorC@duty
  1898     029C  3002               	movlw	2
  1899     029D  00F7               	movwf	motorC@duty+1
  1900     029E  3184  24E4  3180   	fcall	_motorC
  1901                           
  1902                           ;main.c: 274:                 motorD(600);
  1903     02A1  3058               	movlw	88
  1904     02A2  00F6               	movwf	motorD@duty
  1905     02A3  3002               	movlw	2
  1906     02A4  00F7               	movwf	motorD@duty+1
  1907     02A5  3184  2471  3180   	fcall	_motorD
  1908                           
  1909                           ;main.c: 275:                 motorE(0);
  1910     02A8  3000               	movlw	0
  1911     02A9  00F6               	movwf	motorE@duty
  1912     02AA  00F7               	movwf	motorE@duty+1
  1913     02AB  3183  23FE  3180   	fcall	_motorE
  1914                           
  1915                           ;main.c: 276:                 motorF(0);
  1916     02AE  3000               	movlw	0
  1917     02AF  00F6               	movwf	motorF@duty
  1918     02B0  00F7               	movwf	motorF@duty+1
  1919     02B1  3183  238B  3180   	fcall	_motorF
  1920                           
  1921                           ;main.c: 277:                 break;
  1922     02B4  28D3               	goto	l1751
  1923     02B5                     l1791:
  1924                           
  1925                           ;main.c: 279:                 motorA(600);
  1926     02B5  3058               	movlw	88
  1927     02B6  00F6               	movwf	motorA@duty
  1928     02B7  3002               	movlw	2
  1929     02B8  00F7               	movwf	motorA@duty+1
  1930     02B9  3185  25CA  3180   	fcall	_motorA
  1931                           
  1932                           ;main.c: 280:                 motorB(-600);
  1933     02BC  30A8               	movlw	168
  1934     02BD  00F6               	movwf	motorB@duty
  1935     02BE  30FD               	movlw	253
  1936     02BF  00F7               	movwf	motorB@duty+1
  1937     02C0  3185  2557  3180   	fcall	_motorB
  1938                           
  1939                           ;main.c: 281:                 motorC(600);
  1940     02C3  3058               	movlw	88
  1941     02C4  00F6               	movwf	motorC@duty
  1942     02C5  3002               	movlw	2
  1943     02C6  00F7               	movwf	motorC@duty+1
  1944     02C7  3184  24E4  3180   	fcall	_motorC
  1945                           
  1946                           ;main.c: 282:                 motorD(-600);
  1947     02CA  30A8               	movlw	168
  1948     02CB  00F6               	movwf	motorD@duty
  1949     02CC  30FD               	movlw	253
  1950     02CD  00F7               	movwf	motorD@duty+1
  1951     02CE  3184  2471  3180   	fcall	_motorD
  1952                           
  1953                           ;main.c: 283:                 motorE(0);
  1954     02D1  3000               	movlw	0
  1955     02D2  00F6               	movwf	motorE@duty
  1956     02D3  00F7               	movwf	motorE@duty+1
  1957     02D4  3183  23FE  3180   	fcall	_motorE
  1958                           
  1959                           ;main.c: 284:                 motorF(0);
  1960     02D7  3000               	movlw	0
  1961     02D8  00F6               	movwf	motorF@duty
  1962     02D9  00F7               	movwf	motorF@duty+1
  1963     02DA  3183  238B  3180   	fcall	_motorF
  1964                           
  1965                           ;main.c: 285:                 break;
  1966     02DD  28D3               	goto	l1751
  1967     02DE                     l1793:
  1968                           
  1969                           ;main.c: 287:                 motorA(-600);
  1970     02DE  30A8               	movlw	168
  1971     02DF  00F6               	movwf	motorA@duty
  1972     02E0  30FD               	movlw	253
  1973     02E1  00F7               	movwf	motorA@duty+1
  1974     02E2  3185  25CA  3180   	fcall	_motorA
  1975                           
  1976                           ;main.c: 288:                 motorB(-600);
  1977     02E5  30A8               	movlw	168
  1978     02E6  00F6               	movwf	motorB@duty
  1979     02E7  30FD               	movlw	253
  1980     02E8  00F7               	movwf	motorB@duty+1
  1981     02E9  3185  2557  3180   	fcall	_motorB
  1982                           
  1983                           ;main.c: 289:                 motorC(-600);
  1984     02EC  30A8               	movlw	168
  1985     02ED  00F6               	movwf	motorC@duty
  1986     02EE  30FD               	movlw	253
  1987     02EF  00F7               	movwf	motorC@duty+1
  1988     02F0  3184  24E4  3180   	fcall	_motorC
  1989                           
  1990                           ;main.c: 290:                 motorD(-600);
  1991     02F3  30A8               	movlw	168
  1992     02F4  00F6               	movwf	motorD@duty
  1993     02F5  30FD               	movlw	253
  1994     02F6  00F7               	movwf	motorD@duty+1
  1995     02F7  3184  2471  3180   	fcall	_motorD
  1996                           
  1997                           ;main.c: 291:                 motorE(0);
  1998     02FA  3000               	movlw	0
  1999     02FB  00F6               	movwf	motorE@duty
  2000     02FC  00F7               	movwf	motorE@duty+1
  2001     02FD  3183  23FE  3180   	fcall	_motorE
  2002                           
  2003                           ;main.c: 292:                 motorF(0);
  2004     0300  3000               	movlw	0
  2005     0301  00F6               	movwf	motorF@duty
  2006     0302  00F7               	movwf	motorF@duty+1
  2007     0303  3183  238B  3180   	fcall	_motorF
  2008                           
  2009                           ;main.c: 293:                 break;
  2010     0306  28D3               	goto	l1751
  2011     0307                     l1795:
  2012                           
  2013                           ;main.c: 295:                 motorA(600);
  2014     0307  3058               	movlw	88
  2015     0308  00F6               	movwf	motorA@duty
  2016     0309  3002               	movlw	2
  2017     030A  00F7               	movwf	motorA@duty+1
  2018     030B  3185  25CA  3180   	fcall	_motorA
  2019                           
  2020                           ;main.c: 296:                 motorB(600);
  2021     030E  3058               	movlw	88
  2022     030F  00F6               	movwf	motorB@duty
  2023     0310  3002               	movlw	2
  2024     0311  00F7               	movwf	motorB@duty+1
  2025     0312  3185  2557  3180   	fcall	_motorB
  2026                           
  2027                           ;main.c: 297:                 motorC(600);
  2028     0315  3058               	movlw	88
  2029     0316  00F6               	movwf	motorC@duty
  2030     0317  3002               	movlw	2
  2031     0318  00F7               	movwf	motorC@duty+1
  2032     0319  3184  24E4  3180   	fcall	_motorC
  2033                           
  2034                           ;main.c: 298:                 motorD(600);
  2035     031C  3058               	movlw	88
  2036     031D  00F6               	movwf	motorD@duty
  2037     031E  3002               	movlw	2
  2038     031F  00F7               	movwf	motorD@duty+1
  2039     0320  3184  2471  3180   	fcall	_motorD
  2040                           
  2041                           ;main.c: 299:                 motorE(0);
  2042     0323  3000               	movlw	0
  2043     0324  00F6               	movwf	motorE@duty
  2044     0325  00F7               	movwf	motorE@duty+1
  2045     0326  3183  23FE  3180   	fcall	_motorE
  2046                           
  2047                           ;main.c: 300:                 motorF(0);
  2048     0329  3000               	movlw	0
  2049     032A  00F6               	movwf	motorF@duty
  2050     032B  00F7               	movwf	motorF@duty+1
  2051     032C  3183  238B  3180   	fcall	_motorF
  2052                           
  2053                           ;main.c: 301:                 break;
  2054     032F  28D3               	goto	l1751
  2055     0330                     l1797:
  2056                           
  2057                           ;main.c: 303:                 motorA(0);
  2058     0330  3000               	movlw	0
  2059     0331  00F6               	movwf	motorA@duty
  2060     0332  00F7               	movwf	motorA@duty+1
  2061     0333  3185  25CA  3180   	fcall	_motorA
  2062                           
  2063                           ;main.c: 304:                 motorB(0);
  2064     0336  3000               	movlw	0
  2065     0337  00F6               	movwf	motorB@duty
  2066     0338  00F7               	movwf	motorB@duty+1
  2067     0339  3185  2557  3180   	fcall	_motorB
  2068                           
  2069                           ;main.c: 305:                 motorC(0);
  2070     033C  3000               	movlw	0
  2071     033D  00F6               	movwf	motorC@duty
  2072     033E  00F7               	movwf	motorC@duty+1
  2073     033F  3184  24E4  3180   	fcall	_motorC
  2074                           
  2075                           ;main.c: 306:                 motorD(0);
  2076     0342  3000               	movlw	0
  2077     0343  00F6               	movwf	motorD@duty
  2078     0344  00F7               	movwf	motorD@duty+1
  2079     0345  3184  2471  3180   	fcall	_motorD
  2080                           
  2081                           ;main.c: 307:                 motorE(0);
  2082     0348  3000               	movlw	0
  2083     0349  00F6               	movwf	motorE@duty
  2084     034A  00F7               	movwf	motorE@duty+1
  2085     034B  3183  23FE  3180   	fcall	_motorE
  2086                           
  2087                           ;main.c: 308:                 motorF(0);
  2088     034E  3000               	movlw	0
  2089     034F  00F6               	movwf	motorF@duty
  2090     0350  00F7               	movwf	motorF@duty+1
  2091     0351  3183  238B  3180   	fcall	_motorF
  2092                           
  2093                           ;main.c: 309:                 break;
  2094     0354  28D3               	goto	l1751
  2095     0355                     l1803:
  2096                           
  2097                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2098                           ; Switch size 1, requested type "simple"
  2099                           ; Number of cases is 1, Range of values is 0 to 0
  2100                           ; switch strategies available:
  2101                           ; Name         Instructions Cycles
  2102                           ; simple_byte            4     3 (average)
  2103                           ; direct_byte            8     6 (fixed)
  2104                           ; jumptable            260     6 (fixed)
  2105                           ;	Chosen strategy is simple_byte
  2106     0355  087B               	movf	main@sum+1,w
  2107     0356  3A00               	xorlw	0	; case 0
  2108     0357  1903               	skipnz
  2109     0358  2B5A               	goto	l1841
  2110     0359  2B30               	goto	l1797
  2111     035A                     l1841:
  2112                           
  2113                           ; Switch size 1, requested type "simple"
  2114                           ; Number of cases is 15, Range of values is 0 to 14
  2115                           ; switch strategies available:
  2116                           ; Name         Instructions Cycles
  2117                           ; direct_byte           36     6 (fixed)
  2118                           ; simple_byte           46    24 (average)
  2119                           ; jumptable            260     6 (fixed)
  2120                           ;	Chosen strategy is simple_byte
  2121     035A  087A               	movf	main@sum,w
  2122     035B  3A00               	xorlw	0	; case 0
  2123     035C  1903               	skipnz
  2124     035D  2906               	goto	l1769
  2125     035E  3A01               	xorlw	1	; case 1
  2126     035F  1903               	skipnz
  2127     0360  292C               	goto	l1771
  2128     0361  3A03               	xorlw	3	; case 2
  2129     0362  1903               	skipnz
  2130     0363  2952               	goto	l1773
  2131     0364  3A01               	xorlw	1	; case 3
  2132     0365  1903               	skipnz
  2133     0366  2978               	goto	l1775
  2134     0367  3A07               	xorlw	7	; case 4
  2135     0368  1903               	skipnz
  2136     0369  299E               	goto	l1777
  2137     036A  3A01               	xorlw	1	; case 5
  2138     036B  1903               	skipnz
  2139     036C  29C5               	goto	l1779
  2140     036D  3A03               	xorlw	3	; case 6
  2141     036E  1903               	skipnz
  2142     036F  29EC               	goto	l1781
  2143     0370  3A01               	xorlw	1	; case 7
  2144     0371  1903               	skipnz
  2145     0372  2A13               	goto	l1783
  2146     0373  3A0F               	xorlw	15	; case 8
  2147     0374  1903               	skipnz
  2148     0375  2A3A               	goto	l1785
  2149     0376  3A01               	xorlw	1	; case 9
  2150     0377  1903               	skipnz
  2151     0378  2A63               	goto	l1787
  2152     0379  3A03               	xorlw	3	; case 10
  2153     037A  1903               	skipnz
  2154     037B  2A8C               	goto	l1789
  2155     037C  3A01               	xorlw	1	; case 11
  2156     037D  1903               	skipnz
  2157     037E  2AB5               	goto	l1791
  2158     037F  3A07               	xorlw	7	; case 12
  2159     0380  1903               	skipnz
  2160     0381  2ADE               	goto	l1793
  2161     0382  3A01               	xorlw	1	; case 13
  2162     0383  1903               	skipnz
  2163     0384  2B07               	goto	l1795
  2164     0385  3A03               	xorlw	3	; case 14
  2165     0386  1903               	skipnz
  2166     0387  2B30               	goto	l1797
  2167     0388  2B30               	goto	l1797
  2168     0389  3180  281D         	ljmp	start
  2169     038B                     __end_of_main:
  2170                           
  2171                           	psect	text1
  2172     038B                     __ptext1:	
  2173 ;; *************** function _motorF *****************
  2174 ;; Defined at:
  2175 ;;		line 524 in file "main.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  duty            2    6[COMMON] int 
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;                  1    wreg      void 
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0, pclath, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2189 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2191 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2192 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2193 ;;Total ram usage:        4 bytes
  2194 ;; Hardware stack levels used: 1
  2195 ;; Hardware stack levels required when called: 2
  2196 ;; This function calls:
  2197 ;;		___wmul
  2198 ;; This function is called by:
  2199 ;;		_main
  2200 ;; This function uses a non-reentrant model
  2201 ;;
  2202                           
  2203     038B                     _motorF:	
  2204                           ;psect for function _motorF
  2205                           
  2206     038B                     l1585:	
  2207                           ;incstack = 0
  2208                           ; Regs used in _motorF: [wreg+status,2+status,0+pclath+cstack]
  2209                           
  2210                           
  2211                           ;main.c: 526:     duty > 600 ? (duty = 600) : duty;
  2212     038B  0877               	movf	motorF@duty+1,w
  2213     038C  3A80               	xorlw	128
  2214     038D  00F8               	movwf	??_motorF
  2215     038E  3082               	movlw	130
  2216     038F  0278               	subwf	??_motorF,w
  2217     0390  1D03               	skipz
  2218     0391  2B94               	goto	u625
  2219     0392  3059               	movlw	89
  2220     0393  0276               	subwf	motorF@duty,w
  2221     0394                     u625:
  2222     0394  1C03               	skipc
  2223     0395  2B97               	goto	u621
  2224     0396  2B98               	goto	u620
  2225     0397                     u621:
  2226     0397  2B9C               	goto	l1589
  2227     0398                     u620:
  2228     0398                     l1587:
  2229     0398  3058               	movlw	88
  2230     0399  00F6               	movwf	motorF@duty
  2231     039A  3002               	movlw	2
  2232     039B  00F7               	movwf	motorF@duty+1
  2233     039C                     l1589:
  2234                           
  2235                           ;main.c: 527:     duty < -600 ? (duty = 600) : duty;
  2236     039C  0877               	movf	motorF@duty+1,w
  2237     039D  3A80               	xorlw	128
  2238     039E  00F8               	movwf	??_motorF
  2239     039F  307D               	movlw	125
  2240     03A0  0278               	subwf	??_motorF,w
  2241     03A1  1D03               	skipz
  2242     03A2  2BA5               	goto	u635
  2243     03A3  30A8               	movlw	168
  2244     03A4  0276               	subwf	motorF@duty,w
  2245     03A5                     u635:
  2246     03A5  1803               	skipnc
  2247     03A6  2BA8               	goto	u631
  2248     03A7  2BA9               	goto	u630
  2249     03A8                     u631:
  2250     03A8  2BAD               	goto	l1593
  2251     03A9                     u630:
  2252     03A9                     l1591:
  2253     03A9  3058               	movlw	88
  2254     03AA  00F6               	movwf	motorF@duty
  2255     03AB  3002               	movlw	2
  2256     03AC  00F7               	movwf	motorF@duty+1
  2257     03AD                     l1593:
  2258                           
  2259                           ;main.c: 529:     if(duty > 0){
  2260     03AD  0877               	movf	motorF@duty+1,w
  2261     03AE  3A80               	xorlw	128
  2262     03AF  00F8               	movwf	??_motorF
  2263     03B0  3080               	movlw	128
  2264     03B1  0278               	subwf	??_motorF,w
  2265     03B2  1D03               	skipz
  2266     03B3  2BB6               	goto	u645
  2267     03B4  3001               	movlw	1
  2268     03B5  0276               	subwf	motorF@duty,w
  2269     03B6                     u645:
  2270     03B6  1C03               	skipc
  2271     03B7  2BB9               	goto	u641
  2272     03B8  2BBA               	goto	u640
  2273     03B9                     u641:
  2274     03B9  2BCF               	goto	l306
  2275     03BA                     u640:
  2276     03BA                     l1595:
  2277                           
  2278                           ;main.c: 530:         CCPR8L = (duty << 8) & 0x00FF;
  2279     03BA  0026               	movlb	6	; select bank6
  2280     03BB  0191               	clrf	17	;volatile
  2281     03BC                     l1597:
  2282                           
  2283                           ;main.c: 531:         CCPR8H = (duty >> 2) & 0x00FF;
  2284     03BC  0877               	movf	motorF@duty+1,w
  2285     03BD  00F9               	movwf	??_motorF+1
  2286     03BE  0876               	movf	motorF@duty,w
  2287     03BF  00F8               	movwf	??_motorF
  2288     03C0  0D79               	rlf	??_motorF+1,w
  2289     03C1  0CF9               	rrf	??_motorF+1,f
  2290     03C2  0CF8               	rrf	??_motorF,f
  2291     03C3  0D79               	rlf	??_motorF+1,w
  2292     03C4  0CF9               	rrf	??_motorF+1,f
  2293     03C5  0CF8               	rrf	??_motorF,f
  2294     03C6  0878               	movf	??_motorF,w
  2295     03C7  0092               	movwf	18	;volatile
  2296     03C8                     l1599:
  2297                           
  2298                           ;main.c: 532:         RD4PPS = 0b011000;
  2299     03C8  3018               	movlw	24
  2300     03C9  003D               	movlb	29	; select bank29
  2301     03CA  00AC               	movwf	44	;volatile
  2302                           
  2303                           ;main.c: 533:         RD5PPS = 0x00;
  2304     03CB  01AD               	clrf	45	;volatile
  2305     03CC                     l1601:
  2306                           
  2307                           ;main.c: 534:         LATDbits.LATD5 = 0;
  2308     03CC  0022               	movlb	2	; select bank2
  2309     03CD  128F               	bcf	15,5	;volatile
  2310                           
  2311                           ;main.c: 535:     }
  2312     03CE  2BFD               	goto	l310
  2313     03CF                     l306:	
  2314                           ;main.c: 536:     else if(duty < 0){
  2315                           
  2316     03CF  1FF7               	btfss	motorF@duty+1,7
  2317     03D0  2BD2               	goto	u651
  2318     03D1  2BD3               	goto	u650
  2319     03D2                     u651:
  2320     03D2  2BF7               	goto	l1615
  2321     03D3                     u650:
  2322     03D3                     l1603:
  2323                           
  2324                           ;main.c: 537:         duty *= -1;
  2325     03D3  30FF               	movlw	255
  2326     03D4  00F0               	movwf	___wmul@multiplier
  2327     03D5  30FF               	movlw	255
  2328     03D6  00F1               	movwf	___wmul@multiplier+1
  2329     03D7  0877               	movf	motorF@duty+1,w
  2330     03D8  00F3               	movwf	___wmul@multiplicand+1
  2331     03D9  0876               	movf	motorF@duty,w
  2332     03DA  00F2               	movwf	___wmul@multiplicand
  2333     03DB  3186  263D  3183   	fcall	___wmul
  2334     03DE  0871               	movf	?___wmul+1,w
  2335     03DF  00F7               	movwf	motorF@duty+1
  2336     03E0  0870               	movf	?___wmul,w
  2337     03E1  00F6               	movwf	motorF@duty
  2338     03E2                     l1605:
  2339                           
  2340                           ;main.c: 538:         CCPR8L = (duty << 8) & 0x00FF;
  2341     03E2  0026               	movlb	6	; select bank6
  2342     03E3  0191               	clrf	17	;volatile
  2343     03E4                     l1607:
  2344                           
  2345                           ;main.c: 539:         CCPR8H = (duty >> 2) & 0x00FF;
  2346     03E4  0877               	movf	motorF@duty+1,w
  2347     03E5  00F9               	movwf	??_motorF+1
  2348     03E6  0876               	movf	motorF@duty,w
  2349     03E7  00F8               	movwf	??_motorF
  2350     03E8  0D79               	rlf	??_motorF+1,w
  2351     03E9  0CF9               	rrf	??_motorF+1,f
  2352     03EA  0CF8               	rrf	??_motorF,f
  2353     03EB  0D79               	rlf	??_motorF+1,w
  2354     03EC  0CF9               	rrf	??_motorF+1,f
  2355     03ED  0CF8               	rrf	??_motorF,f
  2356     03EE  0878               	movf	??_motorF,w
  2357     03EF  0092               	movwf	18	;volatile
  2358     03F0                     l1609:
  2359                           
  2360                           ;main.c: 540:         RD5PPS = 0b011000;
  2361     03F0  3018               	movlw	24
  2362     03F1  003D               	movlb	29	; select bank29
  2363     03F2  00AD               	movwf	45	;volatile
  2364     03F3                     l1611:
  2365                           
  2366                           ;main.c: 541:         RD4PPS = 0x00;
  2367     03F3  01AC               	clrf	44	;volatile
  2368     03F4                     l1613:
  2369                           
  2370                           ;main.c: 542:         LATDbits.LATD4 = 0;
  2371     03F4  0022               	movlb	2	; select bank2
  2372     03F5  120F               	bcf	15,4	;volatile
  2373                           
  2374                           ;main.c: 543:     }
  2375     03F6  2BFD               	goto	l310
  2376     03F7                     l1615:
  2377                           
  2378                           ;main.c: 545:         RD4PPS = 0x00;
  2379     03F7  003D               	movlb	29	; select bank29
  2380     03F8  01AC               	clrf	44	;volatile
  2381                           
  2382                           ;main.c: 546:         RD5PPS = 0x00;
  2383     03F9  01AD               	clrf	45	;volatile
  2384     03FA                     l1617:
  2385                           
  2386                           ;main.c: 547:         LATDbits.LATD4 = 0;
  2387     03FA  0022               	movlb	2	; select bank2
  2388     03FB  120F               	bcf	15,4	;volatile
  2389     03FC                     l1619:
  2390                           
  2391                           ;main.c: 548:         LATDbits.LATD5 = 0;
  2392     03FC  128F               	bcf	15,5	;volatile
  2393     03FD                     l310:
  2394     03FD  0008               	return
  2395     03FE                     __end_of_motorF:
  2396                           
  2397                           	psect	text2
  2398     03FE                     __ptext2:	
  2399 ;; *************** function _motorE *****************
  2400 ;; Defined at:
  2401 ;;		line 493 in file "main.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  duty            2    6[COMMON] int 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;		None
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2, status,0, pclath, cstack
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2417 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2418 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2419 ;;Total ram usage:        4 bytes
  2420 ;; Hardware stack levels used: 1
  2421 ;; Hardware stack levels required when called: 2
  2422 ;; This function calls:
  2423 ;;		___wmul
  2424 ;; This function is called by:
  2425 ;;		_main
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429     03FE                     _motorE:	
  2430                           ;psect for function _motorE
  2431                           
  2432     03FE                     l1547:	
  2433                           ;incstack = 0
  2434                           ; Regs used in _motorE: [wreg+status,2+status,0+pclath+cstack]
  2435                           
  2436                           
  2437                           ;main.c: 495:     duty > 600 ? (duty = 600) : duty;
  2438     03FE  0877               	movf	motorE@duty+1,w
  2439     03FF  3A80               	xorlw	128
  2440     0400  00F8               	movwf	??_motorE
  2441     0401  3082               	movlw	130
  2442     0402  0278               	subwf	??_motorE,w
  2443     0403  1D03               	skipz
  2444     0404  2C07               	goto	u585
  2445     0405  3059               	movlw	89
  2446     0406  0276               	subwf	motorE@duty,w
  2447     0407                     u585:
  2448     0407  1C03               	skipc
  2449     0408  2C0A               	goto	u581
  2450     0409  2C0B               	goto	u580
  2451     040A                     u581:
  2452     040A  2C0F               	goto	l1551
  2453     040B                     u580:
  2454     040B                     l1549:
  2455     040B  3058               	movlw	88
  2456     040C  00F6               	movwf	motorE@duty
  2457     040D  3002               	movlw	2
  2458     040E  00F7               	movwf	motorE@duty+1
  2459     040F                     l1551:
  2460                           
  2461                           ;main.c: 496:     duty < -600 ? (duty = 600) : duty;
  2462     040F  0877               	movf	motorE@duty+1,w
  2463     0410  3A80               	xorlw	128
  2464     0411  00F8               	movwf	??_motorE
  2465     0412  307D               	movlw	125
  2466     0413  0278               	subwf	??_motorE,w
  2467     0414  1D03               	skipz
  2468     0415  2C18               	goto	u595
  2469     0416  30A8               	movlw	168
  2470     0417  0276               	subwf	motorE@duty,w
  2471     0418                     u595:
  2472     0418  1803               	skipnc
  2473     0419  2C1B               	goto	u591
  2474     041A  2C1C               	goto	u590
  2475     041B                     u591:
  2476     041B  2C20               	goto	l1555
  2477     041C                     u590:
  2478     041C                     l1553:
  2479     041C  3058               	movlw	88
  2480     041D  00F6               	movwf	motorE@duty
  2481     041E  3002               	movlw	2
  2482     041F  00F7               	movwf	motorE@duty+1
  2483     0420                     l1555:
  2484                           
  2485                           ;main.c: 498:     if(duty > 0){
  2486     0420  0877               	movf	motorE@duty+1,w
  2487     0421  3A80               	xorlw	128
  2488     0422  00F8               	movwf	??_motorE
  2489     0423  3080               	movlw	128
  2490     0424  0278               	subwf	??_motorE,w
  2491     0425  1D03               	skipz
  2492     0426  2C29               	goto	u605
  2493     0427  3001               	movlw	1
  2494     0428  0276               	subwf	motorE@duty,w
  2495     0429                     u605:
  2496     0429  1C03               	skipc
  2497     042A  2C2C               	goto	u601
  2498     042B  2C2D               	goto	u600
  2499     042C                     u601:
  2500     042C  2C42               	goto	l291
  2501     042D                     u600:
  2502     042D                     l1557:
  2503                           
  2504                           ;main.c: 499:         CCPR7L = (duty << 8) & 0x00FF;
  2505     042D  0025               	movlb	5	; select bank5
  2506     042E  0199               	clrf	25	;volatile
  2507     042F                     l1559:
  2508                           
  2509                           ;main.c: 500:         CCPR7H = (duty >> 2) & 0x00FF;
  2510     042F  0877               	movf	motorE@duty+1,w
  2511     0430  00F9               	movwf	??_motorE+1
  2512     0431  0876               	movf	motorE@duty,w
  2513     0432  00F8               	movwf	??_motorE
  2514     0433  0D79               	rlf	??_motorE+1,w
  2515     0434  0CF9               	rrf	??_motorE+1,f
  2516     0435  0CF8               	rrf	??_motorE,f
  2517     0436  0D79               	rlf	??_motorE+1,w
  2518     0437  0CF9               	rrf	??_motorE+1,f
  2519     0438  0CF8               	rrf	??_motorE,f
  2520     0439  0878               	movf	??_motorE,w
  2521     043A  009A               	movwf	26	;volatile
  2522     043B                     l1561:
  2523                           
  2524                           ;main.c: 501:         RD6PPS = 0b010111;
  2525     043B  3017               	movlw	23
  2526     043C  003D               	movlb	29	; select bank29
  2527     043D  00AE               	movwf	46	;volatile
  2528                           
  2529                           ;main.c: 502:         RD7PPS = 0x00;
  2530     043E  01AF               	clrf	47	;volatile
  2531     043F                     l1563:
  2532                           
  2533                           ;main.c: 503:         LATDbits.LATD7 = 0;
  2534     043F  0022               	movlb	2	; select bank2
  2535     0440  138F               	bcf	15,7	;volatile
  2536                           
  2537                           ;main.c: 504:     }
  2538     0441  2C70               	goto	l295
  2539     0442                     l291:	
  2540                           ;main.c: 505:     else if(duty < 0){
  2541                           
  2542     0442  1FF7               	btfss	motorE@duty+1,7
  2543     0443  2C45               	goto	u611
  2544     0444  2C46               	goto	u610
  2545     0445                     u611:
  2546     0445  2C6A               	goto	l1577
  2547     0446                     u610:
  2548     0446                     l1565:
  2549                           
  2550                           ;main.c: 506:         duty *= -1;
  2551     0446  30FF               	movlw	255
  2552     0447  00F0               	movwf	___wmul@multiplier
  2553     0448  30FF               	movlw	255
  2554     0449  00F1               	movwf	___wmul@multiplier+1
  2555     044A  0877               	movf	motorE@duty+1,w
  2556     044B  00F3               	movwf	___wmul@multiplicand+1
  2557     044C  0876               	movf	motorE@duty,w
  2558     044D  00F2               	movwf	___wmul@multiplicand
  2559     044E  3186  263D  3183   	fcall	___wmul
  2560     0451  0871               	movf	?___wmul+1,w
  2561     0452  00F7               	movwf	motorE@duty+1
  2562     0453  0870               	movf	?___wmul,w
  2563     0454  00F6               	movwf	motorE@duty
  2564     0455                     l1567:
  2565                           
  2566                           ;main.c: 507:         CCPR7L = (duty << 8) & 0x00FF;
  2567     0455  0025               	movlb	5	; select bank5
  2568     0456  0199               	clrf	25	;volatile
  2569     0457                     l1569:
  2570                           
  2571                           ;main.c: 508:         CCPR7H = (duty >> 2) & 0x00FF;
  2572     0457  0877               	movf	motorE@duty+1,w
  2573     0458  00F9               	movwf	??_motorE+1
  2574     0459  0876               	movf	motorE@duty,w
  2575     045A  00F8               	movwf	??_motorE
  2576     045B  0D79               	rlf	??_motorE+1,w
  2577     045C  0CF9               	rrf	??_motorE+1,f
  2578     045D  0CF8               	rrf	??_motorE,f
  2579     045E  0D79               	rlf	??_motorE+1,w
  2580     045F  0CF9               	rrf	??_motorE+1,f
  2581     0460  0CF8               	rrf	??_motorE,f
  2582     0461  0878               	movf	??_motorE,w
  2583     0462  009A               	movwf	26	;volatile
  2584     0463                     l1571:
  2585                           
  2586                           ;main.c: 509:         RD7PPS = 0b010111;
  2587     0463  3017               	movlw	23
  2588     0464  003D               	movlb	29	; select bank29
  2589     0465  00AF               	movwf	47	;volatile
  2590     0466                     l1573:
  2591                           
  2592                           ;main.c: 510:         RD6PPS = 0x00;
  2593     0466  01AE               	clrf	46	;volatile
  2594     0467                     l1575:
  2595                           
  2596                           ;main.c: 511:         LATDbits.LATD6 = 0;
  2597     0467  0022               	movlb	2	; select bank2
  2598     0468  130F               	bcf	15,6	;volatile
  2599                           
  2600                           ;main.c: 512:     }
  2601     0469  2C70               	goto	l295
  2602     046A                     l1577:
  2603                           
  2604                           ;main.c: 514:         RD6PPS = 0x00;
  2605     046A  003D               	movlb	29	; select bank29
  2606     046B  01AE               	clrf	46	;volatile
  2607                           
  2608                           ;main.c: 515:         RD7PPS = 0x00;
  2609     046C  01AF               	clrf	47	;volatile
  2610     046D                     l1579:
  2611                           
  2612                           ;main.c: 516:         LATDbits.LATD6 = 0;
  2613     046D  0022               	movlb	2	; select bank2
  2614     046E  130F               	bcf	15,6	;volatile
  2615     046F                     l1581:
  2616                           
  2617                           ;main.c: 517:         LATDbits.LATD7 = 0;
  2618     046F  138F               	bcf	15,7	;volatile
  2619     0470                     l295:
  2620     0470  0008               	return
  2621     0471                     __end_of_motorE:
  2622                           
  2623                           	psect	text3
  2624     0471                     __ptext3:	
  2625 ;; *************** function _motorD *****************
  2626 ;; Defined at:
  2627 ;;		line 462 in file "main.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;  duty            2    6[COMMON] int 
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;		None
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0, pclath, cstack
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2644 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2645 ;;Total ram usage:        4 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; Hardware stack levels required when called: 2
  2648 ;; This function calls:
  2649 ;;		___wmul
  2650 ;; This function is called by:
  2651 ;;		_main
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655     0471                     _motorD:	
  2656                           ;psect for function _motorD
  2657                           
  2658     0471                     l1509:	
  2659                           ;incstack = 0
  2660                           ; Regs used in _motorD: [wreg+status,2+status,0+pclath+cstack]
  2661                           
  2662                           
  2663                           ;main.c: 464:     duty > 600 ? (duty = 600) : duty;
  2664     0471  0877               	movf	motorD@duty+1,w
  2665     0472  3A80               	xorlw	128
  2666     0473  00F8               	movwf	??_motorD
  2667     0474  3082               	movlw	130
  2668     0475  0278               	subwf	??_motorD,w
  2669     0476  1D03               	skipz
  2670     0477  2C7A               	goto	u545
  2671     0478  3059               	movlw	89
  2672     0479  0276               	subwf	motorD@duty,w
  2673     047A                     u545:
  2674     047A  1C03               	skipc
  2675     047B  2C7D               	goto	u541
  2676     047C  2C7E               	goto	u540
  2677     047D                     u541:
  2678     047D  2C82               	goto	l1513
  2679     047E                     u540:
  2680     047E                     l1511:
  2681     047E  3058               	movlw	88
  2682     047F  00F6               	movwf	motorD@duty
  2683     0480  3002               	movlw	2
  2684     0481  00F7               	movwf	motorD@duty+1
  2685     0482                     l1513:
  2686                           
  2687                           ;main.c: 465:     duty < -600 ? (duty = 600) : duty;
  2688     0482  0877               	movf	motorD@duty+1,w
  2689     0483  3A80               	xorlw	128
  2690     0484  00F8               	movwf	??_motorD
  2691     0485  307D               	movlw	125
  2692     0486  0278               	subwf	??_motorD,w
  2693     0487  1D03               	skipz
  2694     0488  2C8B               	goto	u555
  2695     0489  30A8               	movlw	168
  2696     048A  0276               	subwf	motorD@duty,w
  2697     048B                     u555:
  2698     048B  1803               	skipnc
  2699     048C  2C8E               	goto	u551
  2700     048D  2C8F               	goto	u550
  2701     048E                     u551:
  2702     048E  2C93               	goto	l1517
  2703     048F                     u550:
  2704     048F                     l1515:
  2705     048F  3058               	movlw	88
  2706     0490  00F6               	movwf	motorD@duty
  2707     0491  3002               	movlw	2
  2708     0492  00F7               	movwf	motorD@duty+1
  2709     0493                     l1517:
  2710                           
  2711                           ;main.c: 467:     if(duty > 0){
  2712     0493  0877               	movf	motorD@duty+1,w
  2713     0494  3A80               	xorlw	128
  2714     0495  00F8               	movwf	??_motorD
  2715     0496  3080               	movlw	128
  2716     0497  0278               	subwf	??_motorD,w
  2717     0498  1D03               	skipz
  2718     0499  2C9C               	goto	u565
  2719     049A  3001               	movlw	1
  2720     049B  0276               	subwf	motorD@duty,w
  2721     049C                     u565:
  2722     049C  1C03               	skipc
  2723     049D  2C9F               	goto	u561
  2724     049E  2CA0               	goto	u560
  2725     049F                     u561:
  2726     049F  2CB5               	goto	l276
  2727     04A0                     u560:
  2728     04A0                     l1519:
  2729                           
  2730                           ;main.c: 468:         CCPR2L = (duty << 8) & 0x00FF;
  2731     04A0  0025               	movlb	5	; select bank5
  2732     04A1  0195               	clrf	21	;volatile
  2733     04A2                     l1521:
  2734                           
  2735                           ;main.c: 469:         CCPR2H = (duty >> 2) & 0x00FF;
  2736     04A2  0877               	movf	motorD@duty+1,w
  2737     04A3  00F9               	movwf	??_motorD+1
  2738     04A4  0876               	movf	motorD@duty,w
  2739     04A5  00F8               	movwf	??_motorD
  2740     04A6  0D79               	rlf	??_motorD+1,w
  2741     04A7  0CF9               	rrf	??_motorD+1,f
  2742     04A8  0CF8               	rrf	??_motorD,f
  2743     04A9  0D79               	rlf	??_motorD+1,w
  2744     04AA  0CF9               	rrf	??_motorD+1,f
  2745     04AB  0CF8               	rrf	??_motorD,f
  2746     04AC  0878               	movf	??_motorD,w
  2747     04AD  0096               	movwf	22	;volatile
  2748     04AE                     l1523:
  2749                           
  2750                           ;main.c: 470:         RB0PPS = 0b010110;
  2751     04AE  3016               	movlw	22
  2752     04AF  003D               	movlb	29	; select bank29
  2753     04B0  0098               	movwf	24	;volatile
  2754                           
  2755                           ;main.c: 471:         RB1PPS = 0x00;
  2756     04B1  0199               	clrf	25	;volatile
  2757     04B2                     l1525:
  2758                           
  2759                           ;main.c: 472:         LATBbits.LATB1 = 0;
  2760     04B2  0022               	movlb	2	; select bank2
  2761     04B3  108D               	bcf	13,1	;volatile
  2762                           
  2763                           ;main.c: 473:     }
  2764     04B4  2CE3               	goto	l280
  2765     04B5                     l276:	
  2766                           ;main.c: 474:     else if(duty < 0){
  2767                           
  2768     04B5  1FF7               	btfss	motorD@duty+1,7
  2769     04B6  2CB8               	goto	u571
  2770     04B7  2CB9               	goto	u570
  2771     04B8                     u571:
  2772     04B8  2CDD               	goto	l1539
  2773     04B9                     u570:
  2774     04B9                     l1527:
  2775                           
  2776                           ;main.c: 475:         duty *= -1;
  2777     04B9  30FF               	movlw	255
  2778     04BA  00F0               	movwf	___wmul@multiplier
  2779     04BB  30FF               	movlw	255
  2780     04BC  00F1               	movwf	___wmul@multiplier+1
  2781     04BD  0877               	movf	motorD@duty+1,w
  2782     04BE  00F3               	movwf	___wmul@multiplicand+1
  2783     04BF  0876               	movf	motorD@duty,w
  2784     04C0  00F2               	movwf	___wmul@multiplicand
  2785     04C1  3186  263D  3184   	fcall	___wmul
  2786     04C4  0871               	movf	?___wmul+1,w
  2787     04C5  00F7               	movwf	motorD@duty+1
  2788     04C6  0870               	movf	?___wmul,w
  2789     04C7  00F6               	movwf	motorD@duty
  2790     04C8                     l1529:
  2791                           
  2792                           ;main.c: 476:         CCPR2L = (duty << 8) & 0x00FF;
  2793     04C8  0025               	movlb	5	; select bank5
  2794     04C9  0195               	clrf	21	;volatile
  2795     04CA                     l1531:
  2796                           
  2797                           ;main.c: 477:         CCPR2H = (duty >> 2) & 0x00FF;
  2798     04CA  0877               	movf	motorD@duty+1,w
  2799     04CB  00F9               	movwf	??_motorD+1
  2800     04CC  0876               	movf	motorD@duty,w
  2801     04CD  00F8               	movwf	??_motorD
  2802     04CE  0D79               	rlf	??_motorD+1,w
  2803     04CF  0CF9               	rrf	??_motorD+1,f
  2804     04D0  0CF8               	rrf	??_motorD,f
  2805     04D1  0D79               	rlf	??_motorD+1,w
  2806     04D2  0CF9               	rrf	??_motorD+1,f
  2807     04D3  0CF8               	rrf	??_motorD,f
  2808     04D4  0878               	movf	??_motorD,w
  2809     04D5  0096               	movwf	22	;volatile
  2810     04D6                     l1533:
  2811                           
  2812                           ;main.c: 478:         RB1PPS = 0b010110;
  2813     04D6  3016               	movlw	22
  2814     04D7  003D               	movlb	29	; select bank29
  2815     04D8  0099               	movwf	25	;volatile
  2816     04D9                     l1535:
  2817                           
  2818                           ;main.c: 479:         RB0PPS = 0x00;
  2819     04D9  0198               	clrf	24	;volatile
  2820     04DA                     l1537:
  2821                           
  2822                           ;main.c: 480:         LATBbits.LATB0 = 0;
  2823     04DA  0022               	movlb	2	; select bank2
  2824     04DB  100D               	bcf	13,0	;volatile
  2825                           
  2826                           ;main.c: 481:     }
  2827     04DC  2CE3               	goto	l280
  2828     04DD                     l1539:
  2829                           
  2830                           ;main.c: 483:         RB0PPS = 0x00;
  2831     04DD  003D               	movlb	29	; select bank29
  2832     04DE  0198               	clrf	24	;volatile
  2833                           
  2834                           ;main.c: 484:         RB1PPS = 0x00;
  2835     04DF  0199               	clrf	25	;volatile
  2836     04E0                     l1541:
  2837                           
  2838                           ;main.c: 485:         LATBbits.LATB0 = 0;
  2839     04E0  0022               	movlb	2	; select bank2
  2840     04E1  100D               	bcf	13,0	;volatile
  2841     04E2                     l1543:
  2842                           
  2843                           ;main.c: 486:         LATBbits.LATB1 = 0;
  2844     04E2  108D               	bcf	13,1	;volatile
  2845     04E3                     l280:
  2846     04E3  0008               	return
  2847     04E4                     __end_of_motorD:
  2848                           
  2849                           	psect	text4
  2850     04E4                     __ptext4:	
  2851 ;; *************** function _motorC *****************
  2852 ;; Defined at:
  2853 ;;		line 431 in file "main.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;  duty            2    6[COMMON] int 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2, status,0, pclath, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2867 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2869 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2870 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2871 ;;Total ram usage:        4 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 2
  2874 ;; This function calls:
  2875 ;;		___wmul
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881     04E4                     _motorC:	
  2882                           ;psect for function _motorC
  2883                           
  2884     04E4                     l1471:	
  2885                           ;incstack = 0
  2886                           ; Regs used in _motorC: [wreg+status,2+status,0+pclath+cstack]
  2887                           
  2888                           
  2889                           ;main.c: 433:     duty > 600 ? (duty = 600) : duty;
  2890     04E4  0877               	movf	motorC@duty+1,w
  2891     04E5  3A80               	xorlw	128
  2892     04E6  00F8               	movwf	??_motorC
  2893     04E7  3082               	movlw	130
  2894     04E8  0278               	subwf	??_motorC,w
  2895     04E9  1D03               	skipz
  2896     04EA  2CED               	goto	u505
  2897     04EB  3059               	movlw	89
  2898     04EC  0276               	subwf	motorC@duty,w
  2899     04ED                     u505:
  2900     04ED  1C03               	skipc
  2901     04EE  2CF0               	goto	u501
  2902     04EF  2CF1               	goto	u500
  2903     04F0                     u501:
  2904     04F0  2CF5               	goto	l1475
  2905     04F1                     u500:
  2906     04F1                     l1473:
  2907     04F1  3058               	movlw	88
  2908     04F2  00F6               	movwf	motorC@duty
  2909     04F3  3002               	movlw	2
  2910     04F4  00F7               	movwf	motorC@duty+1
  2911     04F5                     l1475:
  2912                           
  2913                           ;main.c: 434:     duty < -600 ? (duty = 600) : duty;
  2914     04F5  0877               	movf	motorC@duty+1,w
  2915     04F6  3A80               	xorlw	128
  2916     04F7  00F8               	movwf	??_motorC
  2917     04F8  307D               	movlw	125
  2918     04F9  0278               	subwf	??_motorC,w
  2919     04FA  1D03               	skipz
  2920     04FB  2CFE               	goto	u515
  2921     04FC  30A8               	movlw	168
  2922     04FD  0276               	subwf	motorC@duty,w
  2923     04FE                     u515:
  2924     04FE  1803               	skipnc
  2925     04FF  2D01               	goto	u511
  2926     0500  2D02               	goto	u510
  2927     0501                     u511:
  2928     0501  2D06               	goto	l1479
  2929     0502                     u510:
  2930     0502                     l1477:
  2931     0502  3058               	movlw	88
  2932     0503  00F6               	movwf	motorC@duty
  2933     0504  3002               	movlw	2
  2934     0505  00F7               	movwf	motorC@duty+1
  2935     0506                     l1479:
  2936                           
  2937                           ;main.c: 436:     if(duty > 0){
  2938     0506  0877               	movf	motorC@duty+1,w
  2939     0507  3A80               	xorlw	128
  2940     0508  00F8               	movwf	??_motorC
  2941     0509  3080               	movlw	128
  2942     050A  0278               	subwf	??_motorC,w
  2943     050B  1D03               	skipz
  2944     050C  2D0F               	goto	u525
  2945     050D  3001               	movlw	1
  2946     050E  0276               	subwf	motorC@duty,w
  2947     050F                     u525:
  2948     050F  1C03               	skipc
  2949     0510  2D12               	goto	u521
  2950     0511  2D13               	goto	u520
  2951     0512                     u521:
  2952     0512  2D28               	goto	l261
  2953     0513                     u520:
  2954     0513                     l1481:
  2955                           
  2956                           ;main.c: 437:         CCPR1L = (duty << 8) & 0x00FF;
  2957     0513  0025               	movlb	5	; select bank5
  2958     0514  0191               	clrf	17	;volatile
  2959     0515                     l1483:
  2960                           
  2961                           ;main.c: 438:         CCPR1H = (duty >> 2) & 0x00FF;
  2962     0515  0877               	movf	motorC@duty+1,w
  2963     0516  00F9               	movwf	??_motorC+1
  2964     0517  0876               	movf	motorC@duty,w
  2965     0518  00F8               	movwf	??_motorC
  2966     0519  0D79               	rlf	??_motorC+1,w
  2967     051A  0CF9               	rrf	??_motorC+1,f
  2968     051B  0CF8               	rrf	??_motorC,f
  2969     051C  0D79               	rlf	??_motorC+1,w
  2970     051D  0CF9               	rrf	??_motorC+1,f
  2971     051E  0CF8               	rrf	??_motorC,f
  2972     051F  0878               	movf	??_motorC,w
  2973     0520  0092               	movwf	18	;volatile
  2974     0521                     l1485:
  2975                           
  2976                           ;main.c: 439:         RB2PPS = 0b010101;
  2977     0521  3015               	movlw	21
  2978     0522  003D               	movlb	29	; select bank29
  2979     0523  009A               	movwf	26	;volatile
  2980                           
  2981                           ;main.c: 440:         RB3PPS = 0x00;
  2982     0524  019B               	clrf	27	;volatile
  2983     0525                     l1487:
  2984                           
  2985                           ;main.c: 441:         LATBbits.LATB3 = 0;
  2986     0525  0022               	movlb	2	; select bank2
  2987     0526  118D               	bcf	13,3	;volatile
  2988                           
  2989                           ;main.c: 442:     }
  2990     0527  2D56               	goto	l265
  2991     0528                     l261:	
  2992                           ;main.c: 443:     else if(duty < 0){
  2993                           
  2994     0528  1FF7               	btfss	motorC@duty+1,7
  2995     0529  2D2B               	goto	u531
  2996     052A  2D2C               	goto	u530
  2997     052B                     u531:
  2998     052B  2D50               	goto	l1501
  2999     052C                     u530:
  3000     052C                     l1489:
  3001                           
  3002                           ;main.c: 444:         duty *= -1;
  3003     052C  30FF               	movlw	255
  3004     052D  00F0               	movwf	___wmul@multiplier
  3005     052E  30FF               	movlw	255
  3006     052F  00F1               	movwf	___wmul@multiplier+1
  3007     0530  0877               	movf	motorC@duty+1,w
  3008     0531  00F3               	movwf	___wmul@multiplicand+1
  3009     0532  0876               	movf	motorC@duty,w
  3010     0533  00F2               	movwf	___wmul@multiplicand
  3011     0534  3186  263D  3184   	fcall	___wmul
  3012     0537  0871               	movf	?___wmul+1,w
  3013     0538  00F7               	movwf	motorC@duty+1
  3014     0539  0870               	movf	?___wmul,w
  3015     053A  00F6               	movwf	motorC@duty
  3016     053B                     l1491:
  3017                           
  3018                           ;main.c: 445:         CCPR1L = (duty << 8) & 0x00FF;
  3019     053B  0025               	movlb	5	; select bank5
  3020     053C  0191               	clrf	17	;volatile
  3021     053D                     l1493:
  3022                           
  3023                           ;main.c: 446:         CCPR1H = (duty >> 2) & 0x00FF;
  3024     053D  0877               	movf	motorC@duty+1,w
  3025     053E  00F9               	movwf	??_motorC+1
  3026     053F  0876               	movf	motorC@duty,w
  3027     0540  00F8               	movwf	??_motorC
  3028     0541  0D79               	rlf	??_motorC+1,w
  3029     0542  0CF9               	rrf	??_motorC+1,f
  3030     0543  0CF8               	rrf	??_motorC,f
  3031     0544  0D79               	rlf	??_motorC+1,w
  3032     0545  0CF9               	rrf	??_motorC+1,f
  3033     0546  0CF8               	rrf	??_motorC,f
  3034     0547  0878               	movf	??_motorC,w
  3035     0548  0092               	movwf	18	;volatile
  3036     0549                     l1495:
  3037                           
  3038                           ;main.c: 447:         RB3PPS = 0b010101;
  3039     0549  3015               	movlw	21
  3040     054A  003D               	movlb	29	; select bank29
  3041     054B  009B               	movwf	27	;volatile
  3042     054C                     l1497:
  3043                           
  3044                           ;main.c: 448:         RB2PPS = 0x00;
  3045     054C  019A               	clrf	26	;volatile
  3046     054D                     l1499:
  3047                           
  3048                           ;main.c: 449:         LATBbits.LATB2 = 0;
  3049     054D  0022               	movlb	2	; select bank2
  3050     054E  110D               	bcf	13,2	;volatile
  3051                           
  3052                           ;main.c: 450:     }
  3053     054F  2D56               	goto	l265
  3054     0550                     l1501:
  3055                           
  3056                           ;main.c: 452:         RB2PPS = 0x00;
  3057     0550  003D               	movlb	29	; select bank29
  3058     0551  019A               	clrf	26	;volatile
  3059                           
  3060                           ;main.c: 453:         RB3PPS = 0x00;
  3061     0552  019B               	clrf	27	;volatile
  3062     0553                     l1503:
  3063                           
  3064                           ;main.c: 454:         LATBbits.LATB2 = 0;
  3065     0553  0022               	movlb	2	; select bank2
  3066     0554  110D               	bcf	13,2	;volatile
  3067     0555                     l1505:
  3068                           
  3069                           ;main.c: 455:         LATBbits.LATB3 = 0;
  3070     0555  118D               	bcf	13,3	;volatile
  3071     0556                     l265:
  3072     0556  0008               	return
  3073     0557                     __end_of_motorC:
  3074                           
  3075                           	psect	text5
  3076     0557                     __ptext5:	
  3077 ;; *************** function _motorB *****************
  3078 ;; Defined at:
  3079 ;;		line 402 in file "main.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  duty            2    6[COMMON] int 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3095 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3096 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3097 ;;Total ram usage:        4 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; Hardware stack levels required when called: 2
  3100 ;; This function calls:
  3101 ;;		___wmul
  3102 ;; This function is called by:
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107     0557                     _motorB:	
  3108                           ;psect for function _motorB
  3109                           
  3110     0557                     l1435:	
  3111                           ;incstack = 0
  3112                           ; Regs used in _motorB: [wreg+status,2+status,0+pclath+cstack]
  3113                           
  3114                           
  3115                           ;main.c: 404:     duty > 600 ? (duty = 600) : duty;
  3116     0557  0877               	movf	motorB@duty+1,w
  3117     0558  3A80               	xorlw	128
  3118     0559  00F8               	movwf	??_motorB
  3119     055A  3082               	movlw	130
  3120     055B  0278               	subwf	??_motorB,w
  3121     055C  1D03               	skipz
  3122     055D  2D60               	goto	u465
  3123     055E  3059               	movlw	89
  3124     055F  0276               	subwf	motorB@duty,w
  3125     0560                     u465:
  3126     0560  1C03               	skipc
  3127     0561  2D63               	goto	u461
  3128     0562  2D64               	goto	u460
  3129     0563                     u461:
  3130     0563  2D68               	goto	l1439
  3131     0564                     u460:
  3132     0564                     l1437:
  3133     0564  3058               	movlw	88
  3134     0565  00F6               	movwf	motorB@duty
  3135     0566  3002               	movlw	2
  3136     0567  00F7               	movwf	motorB@duty+1
  3137     0568                     l1439:
  3138                           
  3139                           ;main.c: 405:     duty < -600 ? (duty = 600) : duty;
  3140     0568  0877               	movf	motorB@duty+1,w
  3141     0569  3A80               	xorlw	128
  3142     056A  00F8               	movwf	??_motorB
  3143     056B  307D               	movlw	125
  3144     056C  0278               	subwf	??_motorB,w
  3145     056D  1D03               	skipz
  3146     056E  2D71               	goto	u475
  3147     056F  30A8               	movlw	168
  3148     0570  0276               	subwf	motorB@duty,w
  3149     0571                     u475:
  3150     0571  1803               	skipnc
  3151     0572  2D74               	goto	u471
  3152     0573  2D75               	goto	u470
  3153     0574                     u471:
  3154     0574  2D79               	goto	l1443
  3155     0575                     u470:
  3156     0575                     l1441:
  3157     0575  3058               	movlw	88
  3158     0576  00F6               	movwf	motorB@duty
  3159     0577  3002               	movlw	2
  3160     0578  00F7               	movwf	motorB@duty+1
  3161     0579                     l1443:
  3162                           
  3163                           ;main.c: 407:     if(duty > 0){
  3164     0579  0877               	movf	motorB@duty+1,w
  3165     057A  3A80               	xorlw	128
  3166     057B  00F8               	movwf	??_motorB
  3167     057C  3080               	movlw	128
  3168     057D  0278               	subwf	??_motorB,w
  3169     057E  1D03               	skipz
  3170     057F  2D82               	goto	u485
  3171     0580  3001               	movlw	1
  3172     0581  0276               	subwf	motorB@duty,w
  3173     0582                     u485:
  3174     0582  1C03               	skipc
  3175     0583  2D85               	goto	u481
  3176     0584  2D86               	goto	u480
  3177     0585                     u481:
  3178     0585  2D9B               	goto	l246
  3179     0586                     u480:
  3180     0586                     l1445:
  3181                           
  3182                           ;main.c: 408:         PWM4DCL = (duty << 8) & 0x00FF;
  3183     0586  002C               	movlb	12	; select bank12
  3184     0587  0197               	clrf	23	;volatile
  3185     0588                     l1447:
  3186                           
  3187                           ;main.c: 409:         PWM4DCH = (duty >> 2) & 0x00FF;
  3188     0588  0877               	movf	motorB@duty+1,w
  3189     0589  00F9               	movwf	??_motorB+1
  3190     058A  0876               	movf	motorB@duty,w
  3191     058B  00F8               	movwf	??_motorB
  3192     058C  0D79               	rlf	??_motorB+1,w
  3193     058D  0CF9               	rrf	??_motorB+1,f
  3194     058E  0CF8               	rrf	??_motorB,f
  3195     058F  0D79               	rlf	??_motorB+1,w
  3196     0590  0CF9               	rrf	??_motorB+1,f
  3197     0591  0CF8               	rrf	??_motorB,f
  3198     0592  0878               	movf	??_motorB,w
  3199     0593  0098               	movwf	24	;volatile
  3200     0594                     l1449:
  3201                           
  3202                           ;main.c: 410:         RA2PPS = 0b011010;
  3203     0594  301A               	movlw	26
  3204     0595  003D               	movlb	29	; select bank29
  3205     0596  0092               	movwf	18	;volatile
  3206                           
  3207                           ;main.c: 411:         RA3PPS = 0x00;
  3208     0597  0193               	clrf	19	;volatile
  3209     0598                     l1451:
  3210                           
  3211                           ;main.c: 412:         LATAbits.LATA3 = 0;
  3212     0598  0022               	movlb	2	; select bank2
  3213     0599  118C               	bcf	12,3	;volatile
  3214                           
  3215                           ;main.c: 413:     }
  3216     059A  2DC9               	goto	l250
  3217     059B                     l246:	
  3218                           ;main.c: 414:     else if(duty < 0){
  3219                           
  3220     059B  1FF7               	btfss	motorB@duty+1,7
  3221     059C  2D9E               	goto	u491
  3222     059D  2D9F               	goto	u490
  3223     059E                     u491:
  3224     059E  2DC3               	goto	l1465
  3225     059F                     u490:
  3226     059F                     l1453:
  3227                           
  3228                           ;main.c: 415:         duty *= -1;
  3229     059F  30FF               	movlw	255
  3230     05A0  00F0               	movwf	___wmul@multiplier
  3231     05A1  30FF               	movlw	255
  3232     05A2  00F1               	movwf	___wmul@multiplier+1
  3233     05A3  0877               	movf	motorB@duty+1,w
  3234     05A4  00F3               	movwf	___wmul@multiplicand+1
  3235     05A5  0876               	movf	motorB@duty,w
  3236     05A6  00F2               	movwf	___wmul@multiplicand
  3237     05A7  3186  263D  3185   	fcall	___wmul
  3238     05AA  0871               	movf	?___wmul+1,w
  3239     05AB  00F7               	movwf	motorB@duty+1
  3240     05AC  0870               	movf	?___wmul,w
  3241     05AD  00F6               	movwf	motorB@duty
  3242     05AE                     l1455:
  3243                           
  3244                           ;main.c: 416:         PWM4DCL = (duty << 8) & 0x00FF;
  3245     05AE  002C               	movlb	12	; select bank12
  3246     05AF  0197               	clrf	23	;volatile
  3247     05B0                     l1457:
  3248                           
  3249                           ;main.c: 417:         PWM4DCH = (duty >> 2) & 0x00FF;
  3250     05B0  0877               	movf	motorB@duty+1,w
  3251     05B1  00F9               	movwf	??_motorB+1
  3252     05B2  0876               	movf	motorB@duty,w
  3253     05B3  00F8               	movwf	??_motorB
  3254     05B4  0D79               	rlf	??_motorB+1,w
  3255     05B5  0CF9               	rrf	??_motorB+1,f
  3256     05B6  0CF8               	rrf	??_motorB,f
  3257     05B7  0D79               	rlf	??_motorB+1,w
  3258     05B8  0CF9               	rrf	??_motorB+1,f
  3259     05B9  0CF8               	rrf	??_motorB,f
  3260     05BA  0878               	movf	??_motorB,w
  3261     05BB  0098               	movwf	24	;volatile
  3262     05BC                     l1459:
  3263                           
  3264                           ;main.c: 418:         RA3PPS = 0b011010;
  3265     05BC  301A               	movlw	26
  3266     05BD  003D               	movlb	29	; select bank29
  3267     05BE  0093               	movwf	19	;volatile
  3268     05BF                     l1461:
  3269                           
  3270                           ;main.c: 419:         RA2PPS = 0x00;
  3271     05BF  0192               	clrf	18	;volatile
  3272     05C0                     l1463:
  3273                           
  3274                           ;main.c: 420:         LATAbits.LATA2 = 0;
  3275     05C0  0022               	movlb	2	; select bank2
  3276     05C1  110C               	bcf	12,2	;volatile
  3277                           
  3278                           ;main.c: 421:     }
  3279     05C2  2DC9               	goto	l250
  3280     05C3                     l1465:
  3281                           
  3282                           ;main.c: 423:         RA2PPS = 0x00;
  3283     05C3  003D               	movlb	29	; select bank29
  3284     05C4  0192               	clrf	18	;volatile
  3285                           
  3286                           ;main.c: 424:         RA3PPS = 0x00;
  3287     05C5  0193               	clrf	19	;volatile
  3288     05C6                     l1467:
  3289                           
  3290                           ;main.c: 425:         LATAbits.LATA2 = 0;
  3291     05C6  0022               	movlb	2	; select bank2
  3292     05C7  110C               	bcf	12,2	;volatile
  3293     05C8                     l1469:
  3294                           
  3295                           ;main.c: 426:         LATAbits.LATA3 = 0;
  3296     05C8  118C               	bcf	12,3	;volatile
  3297     05C9                     l250:
  3298     05C9  0008               	return
  3299     05CA                     __end_of_motorB:
  3300                           
  3301                           	psect	text6
  3302     05CA                     __ptext6:	
  3303 ;; *************** function _motorA *****************
  3304 ;; Defined at:
  3305 ;;		line 373 in file "main.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  duty            2    6[COMMON] int 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;		None
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  1    wreg      void 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0, pclath, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3321 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3322 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3323 ;;Total ram usage:        4 bytes
  3324 ;; Hardware stack levels used: 1
  3325 ;; Hardware stack levels required when called: 2
  3326 ;; This function calls:
  3327 ;;		___wmul
  3328 ;; This function is called by:
  3329 ;;		_main
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333     05CA                     _motorA:	
  3334                           ;psect for function _motorA
  3335                           
  3336     05CA                     l1399:	
  3337                           ;incstack = 0
  3338                           ; Regs used in _motorA: [wreg+status,2+status,0+pclath+cstack]
  3339                           
  3340                           
  3341                           ;main.c: 375:     duty > 600 ? (duty = 600) : duty;
  3342     05CA  0877               	movf	motorA@duty+1,w
  3343     05CB  3A80               	xorlw	128
  3344     05CC  00F8               	movwf	??_motorA
  3345     05CD  3082               	movlw	130
  3346     05CE  0278               	subwf	??_motorA,w
  3347     05CF  1D03               	skipz
  3348     05D0  2DD3               	goto	u425
  3349     05D1  3059               	movlw	89
  3350     05D2  0276               	subwf	motorA@duty,w
  3351     05D3                     u425:
  3352     05D3  1C03               	skipc
  3353     05D4  2DD6               	goto	u421
  3354     05D5  2DD7               	goto	u420
  3355     05D6                     u421:
  3356     05D6  2DDB               	goto	l1403
  3357     05D7                     u420:
  3358     05D7                     l1401:
  3359     05D7  3058               	movlw	88
  3360     05D8  00F6               	movwf	motorA@duty
  3361     05D9  3002               	movlw	2
  3362     05DA  00F7               	movwf	motorA@duty+1
  3363     05DB                     l1403:
  3364                           
  3365                           ;main.c: 376:     duty < -600 ? (duty = 600) : duty;
  3366     05DB  0877               	movf	motorA@duty+1,w
  3367     05DC  3A80               	xorlw	128
  3368     05DD  00F8               	movwf	??_motorA
  3369     05DE  307D               	movlw	125
  3370     05DF  0278               	subwf	??_motorA,w
  3371     05E0  1D03               	skipz
  3372     05E1  2DE4               	goto	u435
  3373     05E2  30A8               	movlw	168
  3374     05E3  0276               	subwf	motorA@duty,w
  3375     05E4                     u435:
  3376     05E4  1803               	skipnc
  3377     05E5  2DE7               	goto	u431
  3378     05E6  2DE8               	goto	u430
  3379     05E7                     u431:
  3380     05E7  2DEC               	goto	l1407
  3381     05E8                     u430:
  3382     05E8                     l1405:
  3383     05E8  3058               	movlw	88
  3384     05E9  00F6               	movwf	motorA@duty
  3385     05EA  3002               	movlw	2
  3386     05EB  00F7               	movwf	motorA@duty+1
  3387     05EC                     l1407:
  3388                           
  3389                           ;main.c: 378:     if(duty > 0){
  3390     05EC  0877               	movf	motorA@duty+1,w
  3391     05ED  3A80               	xorlw	128
  3392     05EE  00F8               	movwf	??_motorA
  3393     05EF  3080               	movlw	128
  3394     05F0  0278               	subwf	??_motorA,w
  3395     05F1  1D03               	skipz
  3396     05F2  2DF5               	goto	u445
  3397     05F3  3001               	movlw	1
  3398     05F4  0276               	subwf	motorA@duty,w
  3399     05F5                     u445:
  3400     05F5  1C03               	skipc
  3401     05F6  2DF8               	goto	u441
  3402     05F7  2DF9               	goto	u440
  3403     05F8                     u441:
  3404     05F8  2E0E               	goto	l231
  3405     05F9                     u440:
  3406     05F9                     l1409:
  3407                           
  3408                           ;main.c: 379:         PWM3DCL = (duty << 8) & 0x00FF;
  3409     05F9  002C               	movlb	12	; select bank12
  3410     05FA  0194               	clrf	20	;volatile
  3411     05FB                     l1411:
  3412                           
  3413                           ;main.c: 380:         PWM3DCH = (duty >> 2) & 0x00FF;
  3414     05FB  0877               	movf	motorA@duty+1,w
  3415     05FC  00F9               	movwf	??_motorA+1
  3416     05FD  0876               	movf	motorA@duty,w
  3417     05FE  00F8               	movwf	??_motorA
  3418     05FF  0D79               	rlf	??_motorA+1,w
  3419     0600  0CF9               	rrf	??_motorA+1,f
  3420     0601  0CF8               	rrf	??_motorA,f
  3421     0602  0D79               	rlf	??_motorA+1,w
  3422     0603  0CF9               	rrf	??_motorA+1,f
  3423     0604  0CF8               	rrf	??_motorA,f
  3424     0605  0878               	movf	??_motorA,w
  3425     0606  0095               	movwf	21	;volatile
  3426     0607                     l1413:
  3427                           
  3428                           ;main.c: 381:         RA0PPS = 0b011001;
  3429     0607  3019               	movlw	25
  3430     0608  003D               	movlb	29	; select bank29
  3431     0609  0090               	movwf	16	;volatile
  3432                           
  3433                           ;main.c: 382:         RA1PPS = 0x00;
  3434     060A  0191               	clrf	17	;volatile
  3435     060B                     l1415:
  3436                           
  3437                           ;main.c: 383:         LATAbits.LATA1 = 0;
  3438     060B  0022               	movlb	2	; select bank2
  3439     060C  108C               	bcf	12,1	;volatile
  3440                           
  3441                           ;main.c: 384:     }
  3442     060D  2E3C               	goto	l235
  3443     060E                     l231:	
  3444                           ;main.c: 385:     else if(duty < 0){
  3445                           
  3446     060E  1FF7               	btfss	motorA@duty+1,7
  3447     060F  2E11               	goto	u451
  3448     0610  2E12               	goto	u450
  3449     0611                     u451:
  3450     0611  2E36               	goto	l1429
  3451     0612                     u450:
  3452     0612                     l1417:
  3453                           
  3454                           ;main.c: 386:         duty *= -1;
  3455     0612  30FF               	movlw	255
  3456     0613  00F0               	movwf	___wmul@multiplier
  3457     0614  30FF               	movlw	255
  3458     0615  00F1               	movwf	___wmul@multiplier+1
  3459     0616  0877               	movf	motorA@duty+1,w
  3460     0617  00F3               	movwf	___wmul@multiplicand+1
  3461     0618  0876               	movf	motorA@duty,w
  3462     0619  00F2               	movwf	___wmul@multiplicand
  3463     061A  3186  263D  3185   	fcall	___wmul
  3464     061D  0871               	movf	?___wmul+1,w
  3465     061E  00F7               	movwf	motorA@duty+1
  3466     061F  0870               	movf	?___wmul,w
  3467     0620  00F6               	movwf	motorA@duty
  3468     0621                     l1419:
  3469                           
  3470                           ;main.c: 387:         PWM3DCL = (duty << 8) & 0x00FF;
  3471     0621  002C               	movlb	12	; select bank12
  3472     0622  0194               	clrf	20	;volatile
  3473     0623                     l1421:
  3474                           
  3475                           ;main.c: 388:         PWM3DCH = (duty >> 2) & 0x00FF;
  3476     0623  0877               	movf	motorA@duty+1,w
  3477     0624  00F9               	movwf	??_motorA+1
  3478     0625  0876               	movf	motorA@duty,w
  3479     0626  00F8               	movwf	??_motorA
  3480     0627  0D79               	rlf	??_motorA+1,w
  3481     0628  0CF9               	rrf	??_motorA+1,f
  3482     0629  0CF8               	rrf	??_motorA,f
  3483     062A  0D79               	rlf	??_motorA+1,w
  3484     062B  0CF9               	rrf	??_motorA+1,f
  3485     062C  0CF8               	rrf	??_motorA,f
  3486     062D  0878               	movf	??_motorA,w
  3487     062E  0095               	movwf	21	;volatile
  3488     062F                     l1423:
  3489                           
  3490                           ;main.c: 389:         RA1PPS = 0b011001;
  3491     062F  3019               	movlw	25
  3492     0630  003D               	movlb	29	; select bank29
  3493     0631  0091               	movwf	17	;volatile
  3494     0632                     l1425:
  3495                           
  3496                           ;main.c: 390:         RA0PPS = 0x00;
  3497     0632  0190               	clrf	16	;volatile
  3498     0633                     l1427:
  3499                           
  3500                           ;main.c: 391:         LATAbits.LATA0 = 0;
  3501     0633  0022               	movlb	2	; select bank2
  3502     0634  100C               	bcf	12,0	;volatile
  3503                           
  3504                           ;main.c: 392:     }
  3505     0635  2E3C               	goto	l235
  3506     0636                     l1429:
  3507                           
  3508                           ;main.c: 394:         RA0PPS = 0x00;
  3509     0636  003D               	movlb	29	; select bank29
  3510     0637  0190               	clrf	16	;volatile
  3511                           
  3512                           ;main.c: 395:         RA1PPS = 0x00;
  3513     0638  0191               	clrf	17	;volatile
  3514     0639                     l1431:
  3515                           
  3516                           ;main.c: 396:         LATAbits.LATA0 = 0;
  3517     0639  0022               	movlb	2	; select bank2
  3518     063A  100C               	bcf	12,0	;volatile
  3519     063B                     l1433:
  3520                           
  3521                           ;main.c: 397:         LATAbits.LATA1 = 0;
  3522     063B  108C               	bcf	12,1	;volatile
  3523     063C                     l235:
  3524     063C  0008               	return
  3525     063D                     __end_of_motorA:
  3526                           
  3527                           	psect	text7
  3528     063D                     __ptext7:	
  3529 ;; *************** function ___wmul *****************
  3530 ;; Defined at:
  3531 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  multiplier      2    0[COMMON] unsigned int 
  3534 ;;  multiplicand    2    2[COMMON] unsigned int 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  product         2    4[COMMON] unsigned int 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;                  2    0[COMMON] unsigned int 
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3546 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3549 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3550 ;;Total ram usage:        6 bytes
  3551 ;; Hardware stack levels used: 1
  3552 ;; Hardware stack levels required when called: 1
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_motorA
  3557 ;;		_motorB
  3558 ;;		_motorC
  3559 ;;		_motorD
  3560 ;;		_motorE
  3561 ;;		_motorF
  3562 ;; This function uses a non-reentrant model
  3563 ;;
  3564                           
  3565     063D                     ___wmul:	
  3566                           ;psect for function ___wmul
  3567                           
  3568     063D                     l1385:	
  3569                           ;incstack = 0
  3570                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3571                           
  3572     063D  01F4               	clrf	___wmul@product
  3573     063E  01F5               	clrf	___wmul@product+1
  3574     063F                     l1387:
  3575     063F  1C70               	btfss	___wmul@multiplier,0
  3576     0640  2E42               	goto	u381
  3577     0641  2E43               	goto	u380
  3578     0642                     u381:
  3579     0642  2E47               	goto	l417
  3580     0643                     u380:
  3581     0643                     l1389:
  3582     0643  0872               	movf	___wmul@multiplicand,w
  3583     0644  07F4               	addwf	___wmul@product,f
  3584     0645  0873               	movf	___wmul@multiplicand+1,w
  3585     0646  3DF5               	addwfc	___wmul@product+1,f
  3586     0647                     l417:
  3587     0647  3001               	movlw	1
  3588     0648                     u395:
  3589     0648  35F2               	lslf	___wmul@multiplicand,f
  3590     0649  0DF3               	rlf	___wmul@multiplicand+1,f
  3591     064A  0B89               	decfsz	9,f
  3592     064B  2E48               	goto	u395
  3593     064C                     l1391:
  3594     064C  3001               	movlw	1
  3595     064D                     u405:
  3596     064D  36F1               	lsrf	___wmul@multiplier+1,f
  3597     064E  0CF0               	rrf	___wmul@multiplier,f
  3598     064F  0B89               	decfsz	9,f
  3599     0650  2E4D               	goto	u405
  3600     0651                     l1393:
  3601     0651  0870               	movf	___wmul@multiplier,w
  3602     0652  0471               	iorwf	___wmul@multiplier+1,w
  3603     0653  1D03               	btfss	3,2
  3604     0654  2E56               	goto	u411
  3605     0655  2E57               	goto	u410
  3606     0656                     u411:
  3607     0656  2E3F               	goto	l1387
  3608     0657                     u410:
  3609     0657                     l1395:
  3610     0657  0875               	movf	___wmul@product+1,w
  3611     0658  00F1               	movwf	?___wmul+1
  3612     0659  0874               	movf	___wmul@product,w
  3613     065A  00F0               	movwf	?___wmul
  3614     065B                     l419:
  3615     065B  0008               	return
  3616     065C                     __end_of___wmul:
  3617                           
  3618                           	psect	text8
  3619     0662                     __ptext8:	
  3620 ;; *************** function _SwitchA_Read *****************
  3621 ;; Defined at:
  3622 ;;		line 555 in file "main.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      _Bool 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; Hardware stack levels required when called: 1
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_main
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650     0662                     _SwitchA_Read:	
  3651                           ;psect for function _SwitchA_Read
  3652                           
  3653     0662                     l1113:	
  3654                           ;incstack = 0
  3655                           ; Regs used in _SwitchA_Read: [wreg+status,2+status,0]
  3656                           
  3657                           
  3658                           ;main.c: 556:     return PORTCbits.RC2;
  3659     0662  0020               	movlb	0	; select bank0
  3660     0663  0C0E               	rrf	14,w	;volatile
  3661     0664  0C89               	rrf	9,f
  3662     0665  3901               	andlw	1
  3663     0666                     l313:
  3664     0666  0008               	return
  3665     0667                     __end_of_SwitchA_Read:
  3666                           
  3667                           	psect	text9
  3668     066C                     __ptext9:	
  3669 ;; *************** function _Signal4_Read *****************
  3670 ;; Defined at:
  3671 ;;		line 583 in file "main.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      _Bool 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699     066C                     _Signal4_Read:	
  3700                           ;psect for function _Signal4_Read
  3701                           
  3702     066C                     l1129:	
  3703                           ;incstack = 0
  3704                           ; Regs used in _Signal4_Read: [wreg+status,2+status,0]
  3705                           
  3706                           
  3707                           ;main.c: 584:     return PORTCbits.RC1;
  3708     066C  0020               	movlb	0	; select bank0
  3709     066D  0C0E               	rrf	14,w	;volatile
  3710     066E  3901               	andlw	1
  3711     066F                     l334:
  3712     066F  0008               	return
  3713     0670                     __end_of_Signal4_Read:
  3714                           
  3715                           	psect	text10
  3716     0670                     __ptext10:	
  3717 ;; *************** function _Signal3_Read *****************
  3718 ;; Defined at:
  3719 ;;		line 579 in file "main.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;		None
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;		None
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      _Bool 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3737 ;;Total ram usage:        0 bytes
  3738 ;; Hardware stack levels used: 1
  3739 ;; Hardware stack levels required when called: 1
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_main
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747     0670                     _Signal3_Read:	
  3748                           ;psect for function _Signal3_Read
  3749                           
  3750     0670                     l1125:	
  3751                           ;incstack = 0
  3752                           ; Regs used in _Signal3_Read: [wreg+status,2+status,0]
  3753                           
  3754                           
  3755                           ;main.c: 580:     return PORTCbits.RC0;
  3756     0670  0020               	movlb	0	; select bank0
  3757     0671  080E               	movf	14,w	;volatile
  3758     0672  3901               	andlw	1
  3759     0673                     l331:
  3760     0673  0008               	return
  3761     0674                     __end_of_Signal3_Read:
  3762                           
  3763                           	psect	text11
  3764     065C                     __ptext11:	
  3765 ;; *************** function _Signal2_Read *****************
  3766 ;; Defined at:
  3767 ;;		line 575 in file "main.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      _Bool 
  3774 ;; Registers used:
  3775 ;;		wreg, status,2, status,0
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3785 ;;Total ram usage:        0 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 1
  3788 ;; This function calls:
  3789 ;;		Nothing
  3790 ;; This function is called by:
  3791 ;;		_main
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795     065C                     _Signal2_Read:	
  3796                           ;psect for function _Signal2_Read
  3797                           
  3798     065C                     l1121:	
  3799                           ;incstack = 0
  3800                           ; Regs used in _Signal2_Read: [wreg+status,2+status,0]
  3801                           
  3802                           
  3803                           ;main.c: 576:     return PORTAbits.RA6;
  3804     065C  0020               	movlb	0	; select bank0
  3805     065D  0E0C               	swapf	12,w	;volatile
  3806     065E  0C89               	rrf	9,f
  3807     065F  0C89               	rrf	9,f
  3808     0660  3901               	andlw	1
  3809     0661                     l328:
  3810     0661  0008               	return
  3811     0662                     __end_of_Signal2_Read:
  3812                           
  3813                           	psect	text12
  3814     0667                     __ptext12:	
  3815 ;; *************** function _Signal1_Read *****************
  3816 ;; Defined at:
  3817 ;;		line 571 in file "main.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;		None
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      _Bool 
  3824 ;; Registers used:
  3825 ;;		wreg, status,2, status,0
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3835 ;;Total ram usage:        0 bytes
  3836 ;; Hardware stack levels used: 1
  3837 ;; Hardware stack levels required when called: 1
  3838 ;; This function calls:
  3839 ;;		Nothing
  3840 ;; This function is called by:
  3841 ;;		_main
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           
  3845     0667                     _Signal1_Read:	
  3846                           ;psect for function _Signal1_Read
  3847                           
  3848     0667                     l1117:	
  3849                           ;incstack = 0
  3850                           ; Regs used in _Signal1_Read: [wreg+status,2+status,0]
  3851                           
  3852                           
  3853                           ;main.c: 572:     return PORTAbits.RA7;
  3854     0667  0020               	movlb	0	; select bank0
  3855     0668  0D0C               	rlf	12,w	;volatile
  3856     0669  0D0C               	rlf	12,w	;volatile
  3857     066A  3901               	andlw	1
  3858     066B                     l325:
  3859     066B  0008               	return
  3860     066C                     __end_of_Signal1_Read:
  3861                           
  3862                           	psect	intentry
  3863     0004                     __pintentry:	
  3864 ;; *************** function _ISR *****************
  3865 ;; Defined at:
  3866 ;;		line 359 in file "main.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;		None
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;		None
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3884 ;;Total ram usage:        0 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		Interrupt level 1
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893     0004                     _ISR:
  3894                           
  3895                           ;incstack = 0
  3896     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3897                           
  3898                           ; Regs used in _ISR: [wreg+status,2]
  3899     0005  3180               	pagesel	$
  3900     0006                     i1l1325:
  3901                           
  3902                           ;main.c: 360:     if(PIR1bits.RCIF){
  3903     0006  0020               	movlb	0	; select bank0
  3904     0007  1E91               	btfss	17,5	;volatile
  3905     0008  280A               	goto	u35_21
  3906     0009  280B               	goto	u35_20
  3907     000A                     u35_21:
  3908     000A  281B               	goto	i1l220
  3909     000B                     u35_20:
  3910     000B                     i1l1327:
  3911                           
  3912                           ;main.c: 361:         PIR1bits.RCIF = 0;
  3913     000B  1291               	bcf	17,5	;volatile
  3914                           
  3915                           ;main.c: 362:         if(RC1STAbits.FERR || RC1STAbits.OERR){
  3916     000C  0023               	movlb	3	; select bank3
  3917     000D  191D               	btfsc	29,2	;volatile
  3918     000E  2810               	goto	u36_21
  3919     000F  2811               	goto	u36_20
  3920     0010                     u36_21:
  3921     0010  2815               	goto	i1l1331
  3922     0011                     u36_20:
  3923     0011                     i1l1329:
  3924     0011  1C9D               	btfss	29,1	;volatile
  3925     0012  2814               	goto	u37_21
  3926     0013  2815               	goto	u37_20
  3927     0014                     u37_21:
  3928     0014  2819               	goto	i1l1335
  3929     0015                     u37_20:
  3930     0015                     i1l1331:
  3931                           
  3932                           ;main.c: 363:             RC1STA = 0x00;
  3933     0015  019D               	clrf	29	;volatile
  3934     0016                     i1l1333:
  3935                           
  3936                           ;main.c: 364:             RC1STA = 0x90;
  3937     0016  3090               	movlw	144
  3938     0017  009D               	movwf	29	;volatile
  3939                           
  3940                           ;main.c: 365:         }
  3941     0018  281B               	goto	i1l220
  3942     0019                     i1l1335:
  3943                           
  3944                           ;main.c: 367:             g_ReadData = RC1REG;
  3945     0019  0819               	movf	25,w	;volatile
  3946     001A  00FC               	movwf	_g_ReadData
  3947     001B                     i1l220:
  3948     001B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3949     001C  0009               	retfie
  3950     001D                     __end_of_ISR:
  3951     007E                     btemp	set	126	;btemp
  3952     007E                     int$flags	set	126
  3953     007E                     wtemp0	set	126
  3954                           
  3955                           	psect	idloc
  3956                           
  3957                           ;Config register IDLOC0 @ 0x8000
  3958                           ;	unspecified, using default values
  3959     8000                     	org	32768
  3960     8000  3FFF               	dw	16383
  3961                           
  3962                           ;Config register IDLOC1 @ 0x8001
  3963                           ;	unspecified, using default values
  3964     8001                     	org	32769
  3965     8001  3FFF               	dw	16383
  3966                           
  3967                           ;Config register IDLOC2 @ 0x8002
  3968                           ;	unspecified, using default values
  3969     8002                     	org	32770
  3970     8002  3FFF               	dw	16383
  3971                           
  3972                           ;Config register IDLOC3 @ 0x8003
  3973                           ;	unspecified, using default values
  3974     8003                     	org	32771
  3975     8003  3FFF               	dw	16383
  3976                           
  3977                           	psect	config
  3978                           
  3979                           ;Config register CONFIG1 @ 0x8007
  3980                           ;	Oscillator Selection Bits
  3981                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3982                           ;	Watchdog Timer Enable
  3983                           ;	WDTE = OFF, WDT disabled
  3984                           ;	Power-up Timer Enable
  3985                           ;	PWRTE = ON, PWRT enabled
  3986                           ;	MCLR Pin Function Select
  3987                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3988                           ;	Flash Program Memory Code Protection
  3989                           ;	CP = OFF, Program memory code protection is disabled
  3990                           ;	Brown-out Reset Enable
  3991                           ;	BOREN = ON, Brown-out Reset enabled
  3992                           ;	Clock Out Enable
  3993                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3994                           ;	Internal/External Switchover Mode
  3995                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  3996                           ;	Fail-Safe Clock Monitor Enable
  3997                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3998     8007                     	org	32775
  3999     8007  0FC4               	dw	4036
  4000                           
  4001                           ;Config register CONFIG2 @ 0x8008
  4002                           ;	Flash Memory Self-Write Protection
  4003                           ;	WRT = OFF, Write protection off
  4004                           ;	Peripheral Pin Select one-way control
  4005                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  4006                           ;	Zero-cross detect disable
  4007                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
  4008                           ;	Phase Lock Loop enable
  4009                           ;	PLLEN = ON, 4x PLL is always enabled
  4010                           ;	Stack Overflow/Underflow Reset Enable
  4011                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4012                           ;	Brown-out Reset Voltage Selection
  4013                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  4014                           ;	Low-Power Brown Out Reset
  4015                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4016                           ;	Low-Voltage Programming Enable
  4017                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4018     8008                     	org	32776
  4019     8008  1BFF               	dw	7167

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_motorA
    _main->_motorB
    _main->_motorC
    _main->_motorD
    _main->_motorE
    _main->_motorF
    _motorF->___wmul
    _motorE->___wmul
    _motorD->___wmul
    _motorC->___wmul
    _motorB->___wmul
    _motorA->___wmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14746
                                             10 COMMON     2     2      0
                       _Signal1_Read
                       _Signal2_Read
                       _Signal3_Read
                       _Signal4_Read
                       _SwitchA_Read
                             _motorA
                             _motorB
                             _motorC
                             _motorD
                             _motorE
                             _motorF
 ---------------------------------------------------------------------------------
 (1) _motorF                                               4     2      2    2453
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorE                                               4     2      2    2453
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorD                                               4     2      2    2453
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorC                                               4     2      2    2453
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorB                                               4     2      2    2453
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorA                                               4     2      2    2453
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SwitchA_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Signal4_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Signal3_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Signal2_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Signal1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Signal1_Read
   _Signal2_Read
   _Signal3_Read
   _Signal4_Read
   _SwitchA_Read
   _motorA
     ___wmul
   _motorB
     ___wmul
   _motorC
     ___wmul
   _motorD
     ___wmul
   _motorE
     ___wmul
   _motorF
     ___wmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0       D      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0       D      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Aug 28 16:16:09 2023

    ___wmul@multiplicand 0072                      l310 03FD                      l231 060E  
                    l313 0666                      l250 05C9                      l306 03CF  
                    l331 0673                      l235 063C                      l325 066B  
                    l261 0528                      l334 066F                      l246 059B  
                    l328 0661                      l280 04E3                      l417 0647  
                    l265 0556                      l419 065B                      l291 0442  
                    l276 04B5                      l295 0470                      u410 0657  
                    u411 0656                      u420 05D7                      u500 04F1  
                    u405 064D                      u421 05D6                      u501 04F0  
                    u430 05E8                      u510 0502                      u431 05E7  
                    u511 0501                      u440 05F9                      u520 0513  
                    u600 042D                      u441 05F8                      u425 05D3  
                    u521 0512                      u505 04ED                      u601 042C  
                    u450 0612                      u530 052C                      u610 0446  
                    u451 0611                      u435 05E4                      u531 052B  
                    u515 04FE                      u611 0445                      u380 0643  
                    u460 0564                      u540 047E                      u620 0398  
                    u700 0101                      _ISR 0004                      u381 0642  
                    u445 05F5                      u461 0563                      u525 050F  
                    u541 047D                      u605 0429                      u621 0397  
                    u701 0100                      u470 0575                      u550 048F  
                    u630 03A9                      u471 0574                      u551 048E  
                    u631 03A8                      u480 0586                      u560 04A0  
                    u640 03BA                      u481 0585                      u465 0560  
                    u561 049F                      u545 047A                      u641 03B9  
                    u625 0394                      u490 059F                      u570 04B9  
                    u650 03D3                      u395 0648                      u491 059E  
                    u475 0571                      u571 04B8                      u555 048B  
                    u651 03D2                      u635 03A5                      u580 040B  
                    u660 00D3                      u485 0582                      u565 049C  
                    u581 040A                      u645 03B6                      u661 00D2  
                    u590 041C                      u670 00DD                      u591 041B  
                    u671 00DC                      u680 00E9                      u585 0407  
                    u681 00E8                      u690 00F5                      u595 0418  
                    u691 00F4                      wreg 0009             _SwitchA_Read 0662  
                   ?_ISR 0070                     l1121 065C                     l1113 0662  
                   l1117 0667                     l1125 0670                     l1129 066C  
                   l1401 05D7                     l1411 05FB                     l1403 05DB  
                   l1421 0623                     l1413 0607                     l1405 05E8  
                   l1501 0550                     l1431 0639                     l1423 062F  
                   l1415 060B                     l1407 05EC                     l1503 0553  
                   l1511 047E                     l1433 063B                     l1425 0632  
                   l1417 0612                     l1409 05F9                     l1441 0575  
                   l1505 0555                     l1521 04A2                     l1513 0482  
                   l1601 03CC                     l1427 0633                     l1419 0621  
                   l1451 0598                     l1443 0579                     l1435 0557  
                   l1531 04CA                     l1523 04AE                     l1515 048F  
                   l1611 03F3                     l1603 03D3                     l1429 0636  
                   l1461 05BF                     l1453 059F                     l1445 0586  
                   l1437 0564                     l1541 04E0                     l1533 04D6  
                   l1525 04B2                     l1517 0493                     l1509 0471  
                   l1613 03F4                     l1605 03E2                     l1701 0080  
                   l1391 064C                     l1463 05C0                     l1455 05AE  
                   l1447 0588                     l1439 0568                     l1471 04E4  
                   l1543 04E2                     l1535 04D9                     l1527 04B9  
                   l1519 04A0                     l1551 040F                     l1607 03E4  
                   l1615 03F7                     l1711 008F                     l1703 0082  
                   l1631 002B                     l1623 0024                     l1393 0651  
                   l1385 063D                     l1457 05B0                     l1465 05C3  
                   l1449 0594                     l1481 0513                     l1473 04F1  
                   l1537 04DA                     l1529 04C8                     l1561 043B  
                   l1553 041C                     l1617 03FA                     l1609 03F0  
                   l1721 009B                     l1713 0090                     l1705 0083  
                   l1641 0034                     l1633 002C                     l1625 0027  
                   l1395 0657                     l1387 063F                     l1467 05C6  
                   l1459 05BC                     l1491 053B                     l1483 0515  
                   l1475 04F5                     l1539 04DD                     l1571 0463  
                   l1563 043F                     l1555 0420                     l1547 03FE  
                   l1619 03FC                     l1803 0355                     l1731 00A5  
                   l1723 009D                     l1715 0093                     l1707 008A  
                   l1651 003B                     l1643 0036                     l1635 002D  
                   l1627 0029                     l1389 0643                     l1469 05C8  
                   l1493 053D                     l1485 0521                     l1477 0502  
                   l1581 046F                     l1573 0466                     l1565 0446  
                   l1557 042D                     l1549 040B                     l1741 00B3  
                   l1733 00A6                     l1725 009F                     l1717 0096  
                   l1709 008D                     l1661 004A                     l1653 003C  
                   l1645 0038                     l1637 0030                     l1629 002A  
                   l1399 05CA                     l1495 0549                     l1487 0525  
                   l1479 0506                     l1575 0467                     l1567 0455  
                   l1559 042F                     l1591 03A9                     l1751 00D3  
                   l1743 00B9                     l1735 00A7                     l1727 00A1  
                   l1719 0099                     l1671 0057                     l1663 004C  
                   l1655 003E                     l1647 0039                     l1639 0032  
                   l1497 054C                     l1489 052C                     l1569 0457  
                   l1577 046A                     l1593 03AD                     l1585 038B  
                   l1841 035A                     l1761 00ED                     l1753 00D5  
                   l1745 00BF                     l1737 00A7                     l1729 00A3  
                   l1681 0066                     l1673 0059                     l1665 004E  
                   l1657 0043                     l1649 003A                     l1499 054D  
                   l1579 046D                     l1595 03BA                     l1587 0398  
                   l1771 012C                     l1763 00F5                     l1755 00DD  
                   l1747 00C5                     l1739 00AD                     l1691 0076  
                   l1683 0069                     l1675 0060                     l1667 0051  
                   l1659 0045                     l1597 03BC                     l1589 039C  
                   l1781 01EC                     l1773 0152                     l1765 00F9  
                   l1757 00E1                     l1749 00CB                     l1693 0078  
                   l1685 006C                     l1677 0063                     l1669 0054  
                   l1599 03C8                     l1791 02B5                     l1783 0213  
                   l1775 0178                     l1767 0101                     l1759 00E9  
                   l1695 0079                     l1687 006E                     l1679 0065  
                   l1793 02DE                     l1785 023A                     l1777 019E  
                   l1769 0106                     l1697 007A                     l1689 006F  
                   l1795 0307                     l1787 0263                     l1779 01C5  
                   l1699 007D                     l1797 0330                     l1789 028C  
                   _LATA 010C                     _LATB 010D                     _LATC 010E  
                   _LATD 010F                     _LATE 0110                     _T2PR 0494  
                   _WPUA 020C                     _WPUB 020D                     _WPUC 020E  
                   _WPUD 020F                     _main 0024                     btemp 007E  
                   start 001D                    ??_ISR 0070                    ?_main 0070  
                  _T2CON 0495                    i1l220 001B                    u35_20 000B  
                  u35_21 000A                    u36_20 0011                    u36_21 0010  
                  u37_20 0015                    u37_21 0014                    _TRISA 008C  
                  _TRISB 008D                    _TRISC 008E                    _TRISD 008F  
                  _RXPPS 0E3D                    status 0003                    wtemp0 007E  
        __initialization 001F             __end_of_main 038B                   ??_main 007A  
                 _CCPR1H 0292                   _CCPR2H 0296                   _CCPR1L 0291  
                 _CCPR2L 0295                   _CCPR7H 029A                   _CCPR8H 0312  
                 _CCPR7L 0299                   _CCPR8L 0311                   _ANSELA 018C  
                 _ANSELB 018D                   _ANSELC 018E                   _ANSELD 018F  
                 _ANSELE 0190                   _RA0PPS 0E90                   _RA1PPS 0E91  
                 _RC1REG 0199                   _RA2PPS 0E92                   _RB0PPS 0E98  
                 _RA3PPS 0E93                   _RB1PPS 0E99                   _RB2PPS 0E9A  
                 _RB3PPS 0E9B                   _RC1STA 019D                   _RB4PPS 0E9C  
                 i1l1331 0015                   i1l1333 0016                   i1l1325 0006  
                 i1l1335 0019                   i1l1327 000B                   i1l1329 0011  
                 _RD4PPS 0EAC                   _RD5PPS 0EAD                   _RD6PPS 0EAE  
                 _RD7PPS 0EAF                   _OSCCON 009B                   _TX1REG 019A  
                 _TX1STA 019E             _CCPTMRS1bits 029E             _CCPTMRS2bits 029F  
                 ___wmul 063D                   _motorA 05CA                   _motorB 0557  
                 _motorC 04E4                   _motorD 0471                   _motorE 03FE  
                 _motorF 038B  __end_of__initialization 0020               _g_ReadData 007C  
         __pcstackCOMMON 0070            ?_Signal1_Read 0070            ?_Signal2_Read 0070  
          ?_Signal3_Read 0070            ?_Signal4_Read 0070           _OPTION_REGbits 0097  
           _T2CLKCONbits 0497               __pmaintext 0024                  ?___wmul 0070  
             __pintentry 0004                  _CCP1CON 0293                  _CCP2CON 0297  
                _CCP7CON 029B                  _CCP8CON 0313           ??_Signal1_Read 0070  
         ??_Signal2_Read 0070           ??_Signal3_Read 0070           ??_Signal4_Read 0070  
                ?_motorA 0076                  ?_motorB 0076                  ?_motorC 0076  
                ?_motorD 0076                  ?_motorE 0076                  ?_motorF 0076  
                _SP1BRGH 019C                  _SP1BRGL 019B                  _PWM3DCH 0615  
                _PWM3DCL 0614                  _PWM4DCH 0618                  _PWM4DCL 0617  
                _PWM3CON 0616                  _PWM4CON 0619                  __ptext1 038B  
                __ptext2 03FE                  __ptext3 0471                  __ptext4 04E4  
                __ptext5 0557                  __ptext6 05CA                  __ptext7 063D  
                __ptext8 0662                  __ptext9 066C                  main@sum 007A  
   end_of_initialization 0020                _PORTAbits 000C                _PORTCbits 000E  
              _PORTDbits 000F     __end_of_Signal1_Read 066C     __end_of_Signal2_Read 0662  
   __end_of_Signal3_Read 0674     __end_of_Signal4_Read 0670           __end_of___wmul 065C  
         __end_of_motorA 063D           __end_of_motorB 05CA           __end_of_motorC 0557  
         __end_of_motorD 04E4           __end_of_motorE 0471           __end_of_motorF 03FE  
    start_initialization 001F              __end_of_ISR 001D            ?_SwitchA_Read 0070  
               ??___wmul 0074                 ??_motorA 0078                 ??_motorB 0078  
               ??_motorC 0078                 ??_motorD 0078                 ??_motorE 0078  
               ??_motorF 0078              __pbssCOMMON 007C                ___latbits 0003  
         ??_SwitchA_Read 0070                 _BAUD1CON 019F               motorA@duty 0076  
             motorB@duty 0076               motorC@duty 0076               motorD@duty 0076  
             motorE@duty 0076               motorF@duty 0076           ___wmul@product 0074  
               _LATAbits 010C                 _LATBbits 010D                 _LATDbits 010F  
               _PIE1bits 0091                 _PIR1bits 0011             _Signal1_Read 0667  
           _Signal2_Read 065C             _Signal3_Read 0670             _Signal4_Read 066C  
      ___wmul@multiplier 0070     __end_of_SwitchA_Read 0667                 __ptext10 0670  
               __ptext11 065C                 __ptext12 0667               _RC1STAbits 019D  
               int$flags 007E               _INTCONbits 000B                 intlevel1 0000  
