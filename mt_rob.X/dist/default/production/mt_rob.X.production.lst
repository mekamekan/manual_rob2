

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Aug 27 15:11:27 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1779
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17     0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F1779 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53     0000                     	;# 
    54     0001                     	;# 
    55     0002                     	;# 
    56     0003                     	;# 
    57     0004                     	;# 
    58     0005                     	;# 
    59     0006                     	;# 
    60     0007                     	;# 
    61     0008                     	;# 
    62     0009                     	;# 
    63     000A                     	;# 
    64     000B                     	;# 
    65     000C                     	;# 
    66     000D                     	;# 
    67     000E                     	;# 
    68     000F                     	;# 
    69     0010                     	;# 
    70     0011                     	;# 
    71     0012                     	;# 
    72     0013                     	;# 
    73     0014                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0018                     	;# 
    79     0019                     	;# 
    80     001A                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001C                     	;# 
    84     001D                     	;# 
    85     001E                     	;# 
    86     001F                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     008F                     	;# 
    91     0090                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0095                     	;# 
    97     0096                     	;# 
    98     0097                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009A                     	;# 
   102     009B                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     0110                     	;# 
   112     0111                     	;# 
   113     0112                     	;# 
   114     0113                     	;# 
   115     0114                     	;# 
   116     0115                     	;# 
   117     0116                     	;# 
   118     0117                     	;# 
   119     0118                     	;# 
   120     0119                     	;# 
   121     011A                     	;# 
   122     011B                     	;# 
   123     011C                     	;# 
   124     011D                     	;# 
   125     018C                     	;# 
   126     018D                     	;# 
   127     018E                     	;# 
   128     018F                     	;# 
   129     0190                     	;# 
   130     0191                     	;# 
   131     0191                     	;# 
   132     0192                     	;# 
   133     0193                     	;# 
   134     0193                     	;# 
   135     0194                     	;# 
   136     0195                     	;# 
   137     0196                     	;# 
   138     0197                     	;# 
   139     0199                     	;# 
   140     0199                     	;# 
   141     0199                     	;# 
   142     019A                     	;# 
   143     019A                     	;# 
   144     019A                     	;# 
   145     019B                     	;# 
   146     019B                     	;# 
   147     019B                     	;# 
   148     019B                     	;# 
   149     019B                     	;# 
   150     019C                     	;# 
   151     019C                     	;# 
   152     019C                     	;# 
   153     019D                     	;# 
   154     019D                     	;# 
   155     019D                     	;# 
   156     019E                     	;# 
   157     019E                     	;# 
   158     019E                     	;# 
   159     019F                     	;# 
   160     019F                     	;# 
   161     019F                     	;# 
   162     019F                     	;# 
   163     019F                     	;# 
   164     020C                     	;# 
   165     020D                     	;# 
   166     020E                     	;# 
   167     020F                     	;# 
   168     0210                     	;# 
   169     0211                     	;# 
   170     0211                     	;# 
   171     0212                     	;# 
   172     0212                     	;# 
   173     0213                     	;# 
   174     0213                     	;# 
   175     0214                     	;# 
   176     0214                     	;# 
   177     0215                     	;# 
   178     0215                     	;# 
   179     0215                     	;# 
   180     0215                     	;# 
   181     0216                     	;# 
   182     0216                     	;# 
   183     0217                     	;# 
   184     0217                     	;# 
   185     021B                     	;# 
   186     021C                     	;# 
   187     021D                     	;# 
   188     021E                     	;# 
   189     021F                     	;# 
   190     028C                     	;# 
   191     028D                     	;# 
   192     028E                     	;# 
   193     028F                     	;# 
   194     0290                     	;# 
   195     0291                     	;# 
   196     0291                     	;# 
   197     0292                     	;# 
   198     0293                     	;# 
   199     0294                     	;# 
   200     0295                     	;# 
   201     0295                     	;# 
   202     0296                     	;# 
   203     0297                     	;# 
   204     0298                     	;# 
   205     0299                     	;# 
   206     0299                     	;# 
   207     029A                     	;# 
   208     029B                     	;# 
   209     029C                     	;# 
   210     029E                     	;# 
   211     029F                     	;# 
   212     030C                     	;# 
   213     030D                     	;# 
   214     030E                     	;# 
   215     030F                     	;# 
   216     0310                     	;# 
   217     0311                     	;# 
   218     0311                     	;# 
   219     0312                     	;# 
   220     0313                     	;# 
   221     0314                     	;# 
   222     0315                     	;# 
   223     0316                     	;# 
   224     0317                     	;# 
   225     0318                     	;# 
   226     0319                     	;# 
   227     031B                     	;# 
   228     031C                     	;# 
   229     031D                     	;# 
   230     031E                     	;# 
   231     031F                     	;# 
   232     038C                     	;# 
   233     038D                     	;# 
   234     038E                     	;# 
   235     038F                     	;# 
   236     0390                     	;# 
   237     0391                     	;# 
   238     0392                     	;# 
   239     0393                     	;# 
   240     0394                     	;# 
   241     0395                     	;# 
   242     0396                     	;# 
   243     0397                     	;# 
   244     0398                     	;# 
   245     0399                     	;# 
   246     039D                     	;# 
   247     039E                     	;# 
   248     039F                     	;# 
   249     040D                     	;# 
   250     040F                     	;# 
   251     040F                     	;# 
   252     0410                     	;# 
   253     0411                     	;# 
   254     0412                     	;# 
   255     0413                     	;# 
   256     0413                     	;# 
   257     0414                     	;# 
   258     0414                     	;# 
   259     0415                     	;# 
   260     0416                     	;# 
   261     0417                     	;# 
   262     0418                     	;# 
   263     041A                     	;# 
   264     041A                     	;# 
   265     041B                     	;# 
   266     041B                     	;# 
   267     041C                     	;# 
   268     041D                     	;# 
   269     041E                     	;# 
   270     041F                     	;# 
   271     048E                     	;# 
   272     048E                     	;# 
   273     048F                     	;# 
   274     0490                     	;# 
   275     0491                     	;# 
   276     0492                     	;# 
   277     0493                     	;# 
   278     0493                     	;# 
   279     0494                     	;# 
   280     0494                     	;# 
   281     0495                     	;# 
   282     0496                     	;# 
   283     0497                     	;# 
   284     0498                     	;# 
   285     049A                     	;# 
   286     049A                     	;# 
   287     049B                     	;# 
   288     049B                     	;# 
   289     049C                     	;# 
   290     049D                     	;# 
   291     049E                     	;# 
   292     049F                     	;# 
   293     050F                     	;# 
   294     0510                     	;# 
   295     0511                     	;# 
   296     0512                     	;# 
   297     0513                     	;# 
   298     0514                     	;# 
   299     0515                     	;# 
   300     0516                     	;# 
   301     0517                     	;# 
   302     0518                     	;# 
   303     0519                     	;# 
   304     051A                     	;# 
   305     051B                     	;# 
   306     051C                     	;# 
   307     051D                     	;# 
   308     051E                     	;# 
   309     058D                     	;# 
   310     058E                     	;# 
   311     058F                     	;# 
   312     058F                     	;# 
   313     058F                     	;# 
   314     0590                     	;# 
   315     0590                     	;# 
   316     0591                     	;# 
   317     0592                     	;# 
   318     0592                     	;# 
   319     0592                     	;# 
   320     0593                     	;# 
   321     0593                     	;# 
   322     0594                     	;# 
   323     0595                     	;# 
   324     0595                     	;# 
   325     0596                     	;# 
   326     0597                     	;# 
   327     0597                     	;# 
   328     0598                     	;# 
   329     0599                     	;# 
   330     0599                     	;# 
   331     0599                     	;# 
   332     059A                     	;# 
   333     059A                     	;# 
   334     059B                     	;# 
   335     059C                     	;# 
   336     059C                     	;# 
   337     059C                     	;# 
   338     059D                     	;# 
   339     059D                     	;# 
   340     059E                     	;# 
   341     059F                     	;# 
   342     059F                     	;# 
   343     060C                     	;# 
   344     060D                     	;# 
   345     060D                     	;# 
   346     060E                     	;# 
   347     060F                     	;# 
   348     0610                     	;# 
   349     0611                     	;# 
   350     0612                     	;# 
   351     0613                     	;# 
   352     0614                     	;# 
   353     0614                     	;# 
   354     0615                     	;# 
   355     0616                     	;# 
   356     0617                     	;# 
   357     0617                     	;# 
   358     0618                     	;# 
   359     0619                     	;# 
   360     061A                     	;# 
   361     061A                     	;# 
   362     061B                     	;# 
   363     061C                     	;# 
   364     061D                     	;# 
   365     061D                     	;# 
   366     061E                     	;# 
   367     061F                     	;# 
   368     068D                     	;# 
   369     068E                     	;# 
   370     068F                     	;# 
   371     0690                     	;# 
   372     0691                     	;# 
   373     0692                     	;# 
   374     0693                     	;# 
   375     0694                     	;# 
   376     0695                     	;# 
   377     0696                     	;# 
   378     0697                     	;# 
   379     0698                     	;# 
   380     0699                     	;# 
   381     069A                     	;# 
   382     069B                     	;# 
   383     069C                     	;# 
   384     069D                     	;# 
   385     069E                     	;# 
   386     069F                     	;# 
   387     070D                     	;# 
   388     070E                     	;# 
   389     070F                     	;# 
   390     0710                     	;# 
   391     0711                     	;# 
   392     0712                     	;# 
   393     0713                     	;# 
   394     0714                     	;# 
   395     0715                     	;# 
   396     0716                     	;# 
   397     0717                     	;# 
   398     0718                     	;# 
   399     0719                     	;# 
   400     071A                     	;# 
   401     071B                     	;# 
   402     071C                     	;# 
   403     071D                     	;# 
   404     071E                     	;# 
   405     071F                     	;# 
   406     078E                     	;# 
   407     078F                     	;# 
   408     0790                     	;# 
   409     0791                     	;# 
   410     0792                     	;# 
   411     0793                     	;# 
   412     0794                     	;# 
   413     0795                     	;# 
   414     0796                     	;# 
   415     0797                     	;# 
   416     0798                     	;# 
   417     0799                     	;# 
   418     079A                     	;# 
   419     079B                     	;# 
   420     079C                     	;# 
   421     079D                     	;# 
   422     079E                     	;# 
   423     079F                     	;# 
   424     080D                     	;# 
   425     080E                     	;# 
   426     080F                     	;# 
   427     0810                     	;# 
   428     0811                     	;# 
   429     0812                     	;# 
   430     0813                     	;# 
   431     0814                     	;# 
   432     0815                     	;# 
   433     0816                     	;# 
   434     0817                     	;# 
   435     0818                     	;# 
   436     0819                     	;# 
   437     081A                     	;# 
   438     081B                     	;# 
   439     081C                     	;# 
   440     081D                     	;# 
   441     081E                     	;# 
   442     081F                     	;# 
   443     088D                     	;# 
   444     088E                     	;# 
   445     088F                     	;# 
   446     0890                     	;# 
   447     0891                     	;# 
   448     0892                     	;# 
   449     0893                     	;# 
   450     0894                     	;# 
   451     0895                     	;# 
   452     0896                     	;# 
   453     0897                     	;# 
   454     0898                     	;# 
   455     0899                     	;# 
   456     089A                     	;# 
   457     089B                     	;# 
   458     089C                     	;# 
   459     089D                     	;# 
   460     089E                     	;# 
   461     089F                     	;# 
   462     090C                     	;# 
   463     090D                     	;# 
   464     090E                     	;# 
   465     090F                     	;# 
   466     0910                     	;# 
   467     0911                     	;# 
   468     0912                     	;# 
   469     0913                     	;# 
   470     0914                     	;# 
   471     0915                     	;# 
   472     0916                     	;# 
   473     0917                     	;# 
   474     0918                     	;# 
   475     0919                     	;# 
   476     091A                     	;# 
   477     091B                     	;# 
   478     091C                     	;# 
   479     091D                     	;# 
   480     091E                     	;# 
   481     091F                     	;# 
   482     0D1B                     	;# 
   483     0D1C                     	;# 
   484     0D1D                     	;# 
   485     0D1E                     	;# 
   486     0D1F                     	;# 
   487     0D8E                     	;# 
   488     0D8F                     	;# 
   489     0D90                     	;# 
   490     0D91                     	;# 
   491     0D91                     	;# 
   492     0D92                     	;# 
   493     0D93                     	;# 
   494     0D93                     	;# 
   495     0D94                     	;# 
   496     0D95                     	;# 
   497     0D95                     	;# 
   498     0D96                     	;# 
   499     0D97                     	;# 
   500     0D97                     	;# 
   501     0D98                     	;# 
   502     0D99                     	;# 
   503     0D99                     	;# 
   504     0D9A                     	;# 
   505     0D9B                     	;# 
   506     0D9C                     	;# 
   507     0D9C                     	;# 
   508     0D9D                     	;# 
   509     0D9D                     	;# 
   510     0D9E                     	;# 
   511     0D9F                     	;# 
   512     0DA0                     	;# 
   513     0DA1                     	;# 
   514     0DA1                     	;# 
   515     0DA2                     	;# 
   516     0DA3                     	;# 
   517     0DA3                     	;# 
   518     0DA4                     	;# 
   519     0DA5                     	;# 
   520     0DA5                     	;# 
   521     0DA6                     	;# 
   522     0DA7                     	;# 
   523     0DA7                     	;# 
   524     0DA8                     	;# 
   525     0DA9                     	;# 
   526     0DA9                     	;# 
   527     0DAA                     	;# 
   528     0DAB                     	;# 
   529     0DAC                     	;# 
   530     0DAC                     	;# 
   531     0DAD                     	;# 
   532     0DAD                     	;# 
   533     0DAE                     	;# 
   534     0DAF                     	;# 
   535     0DB0                     	;# 
   536     0DB1                     	;# 
   537     0DB1                     	;# 
   538     0DB2                     	;# 
   539     0DB3                     	;# 
   540     0DB3                     	;# 
   541     0DB4                     	;# 
   542     0DB5                     	;# 
   543     0DB5                     	;# 
   544     0DB6                     	;# 
   545     0DB7                     	;# 
   546     0DB7                     	;# 
   547     0DB8                     	;# 
   548     0DB9                     	;# 
   549     0DB9                     	;# 
   550     0DBA                     	;# 
   551     0DBB                     	;# 
   552     0DBC                     	;# 
   553     0DBC                     	;# 
   554     0DBD                     	;# 
   555     0DBD                     	;# 
   556     0DBE                     	;# 
   557     0DBF                     	;# 
   558     0DC0                     	;# 
   559     0DC1                     	;# 
   560     0DC1                     	;# 
   561     0DC2                     	;# 
   562     0DC3                     	;# 
   563     0DC3                     	;# 
   564     0DC4                     	;# 
   565     0DC5                     	;# 
   566     0DC5                     	;# 
   567     0DC6                     	;# 
   568     0DC7                     	;# 
   569     0DC7                     	;# 
   570     0DC8                     	;# 
   571     0DC9                     	;# 
   572     0DC9                     	;# 
   573     0DCA                     	;# 
   574     0DCB                     	;# 
   575     0DCC                     	;# 
   576     0DCC                     	;# 
   577     0DCD                     	;# 
   578     0DCD                     	;# 
   579     0DCE                     	;# 
   580     0DCF                     	;# 
   581     0DD0                     	;# 
   582     0E0C                     	;# 
   583     0E0D                     	;# 
   584     0E0E                     	;# 
   585     0E0F                     	;# 
   586     0E10                     	;# 
   587     0E11                     	;# 
   588     0E12                     	;# 
   589     0E13                     	;# 
   590     0E14                     	;# 
   591     0E15                     	;# 
   592     0E15                     	;# 
   593     0E15                     	;# 
   594     0E16                     	;# 
   595     0E16                     	;# 
   596     0E16                     	;# 
   597     0E17                     	;# 
   598     0E17                     	;# 
   599     0E17                     	;# 
   600     0E18                     	;# 
   601     0E18                     	;# 
   602     0E18                     	;# 
   603     0E19                     	;# 
   604     0E1A                     	;# 
   605     0E1B                     	;# 
   606     0E1C                     	;# 
   607     0E1D                     	;# 
   608     0E1E                     	;# 
   609     0E1F                     	;# 
   610     0E20                     	;# 
   611     0E21                     	;# 
   612     0E22                     	;# 
   613     0E23                     	;# 
   614     0E24                     	;# 
   615     0E25                     	;# 
   616     0E26                     	;# 
   617     0E27                     	;# 
   618     0E28                     	;# 
   619     0E29                     	;# 
   620     0E2A                     	;# 
   621     0E2B                     	;# 
   622     0E2C                     	;# 
   623     0E2D                     	;# 
   624     0E2E                     	;# 
   625     0E2F                     	;# 
   626     0E30                     	;# 
   627     0E31                     	;# 
   628     0E32                     	;# 
   629     0E33                     	;# 
   630     0E34                     	;# 
   631     0E35                     	;# 
   632     0E36                     	;# 
   633     0E37                     	;# 
   634     0E38                     	;# 
   635     0E39                     	;# 
   636     0E3A                     	;# 
   637     0E3B                     	;# 
   638     0E3C                     	;# 
   639     0E3D                     	;# 
   640     0E3E                     	;# 
   641     0E90                     	;# 
   642     0E91                     	;# 
   643     0E92                     	;# 
   644     0E93                     	;# 
   645     0E94                     	;# 
   646     0E95                     	;# 
   647     0E96                     	;# 
   648     0E97                     	;# 
   649     0E98                     	;# 
   650     0E99                     	;# 
   651     0E9A                     	;# 
   652     0E9B                     	;# 
   653     0E9C                     	;# 
   654     0E9D                     	;# 
   655     0E9E                     	;# 
   656     0E9F                     	;# 
   657     0EA0                     	;# 
   658     0EA1                     	;# 
   659     0EA2                     	;# 
   660     0EA3                     	;# 
   661     0EA4                     	;# 
   662     0EA5                     	;# 
   663     0EA6                     	;# 
   664     0EA7                     	;# 
   665     0EA8                     	;# 
   666     0EA9                     	;# 
   667     0EAA                     	;# 
   668     0EAB                     	;# 
   669     0EAC                     	;# 
   670     0EAD                     	;# 
   671     0EAE                     	;# 
   672     0EAF                     	;# 
   673     0EB0                     	;# 
   674     0EB1                     	;# 
   675     0EB2                     	;# 
   676     0F0F                     	;# 
   677     0F10                     	;# 
   678     0F11                     	;# 
   679     0F12                     	;# 
   680     0F13                     	;# 
   681     0F14                     	;# 
   682     0F15                     	;# 
   683     0F16                     	;# 
   684     0F17                     	;# 
   685     0F18                     	;# 
   686     0F19                     	;# 
   687     0F1A                     	;# 
   688     0F1B                     	;# 
   689     0F1C                     	;# 
   690     0F1D                     	;# 
   691     0F1E                     	;# 
   692     0F1F                     	;# 
   693     0F20                     	;# 
   694     0F21                     	;# 
   695     0F22                     	;# 
   696     0F23                     	;# 
   697     0F24                     	;# 
   698     0F25                     	;# 
   699     0F26                     	;# 
   700     0F27                     	;# 
   701     0F28                     	;# 
   702     0F29                     	;# 
   703     0F2A                     	;# 
   704     0F2B                     	;# 
   705     0F2C                     	;# 
   706     0F2D                     	;# 
   707     0F2E                     	;# 
   708     0F2F                     	;# 
   709     0F30                     	;# 
   710     0F31                     	;# 
   711     0F32                     	;# 
   712     0F33                     	;# 
   713     0F34                     	;# 
   714     0F35                     	;# 
   715     0F36                     	;# 
   716     0F37                     	;# 
   717     0FE4                     	;# 
   718     0FE5                     	;# 
   719     0FE6                     	;# 
   720     0FE7                     	;# 
   721     0FE8                     	;# 
   722     0FE9                     	;# 
   723     0FEA                     	;# 
   724     0FEB                     	;# 
   725     0FED                     	;# 
   726     0FEE                     	;# 
   727     0FEF                     	;# 
   728     000C                     _PORTAbits	set	12
   729     000F                     _PORTDbits	set	15
   730     000E                     _PORTCbits	set	14
   731     000B                     _INTCONbits	set	11
   732     0011                     _PIR1bits	set	17
   733     0091                     _PIE1bits	set	145
   734     0097                     _OPTION_REGbits	set	151
   735     008F                     _TRISD	set	143
   736     008E                     _TRISC	set	142
   737     008D                     _TRISB	set	141
   738     008C                     _TRISA	set	140
   739     009B                     _OSCCON	set	155
   740     010F                     _LATDbits	set	271
   741     010D                     _LATBbits	set	269
   742     010C                     _LATAbits	set	268
   743     0110                     _LATE	set	272
   744     010F                     _LATD	set	271
   745     010E                     _LATC	set	270
   746     010D                     _LATB	set	269
   747     010C                     _LATA	set	268
   748     019A                     _TX1REG	set	410
   749     0199                     _RC1REG	set	409
   750     019D                     _RC1STAbits	set	413
   751     019C                     _SP1BRGH	set	412
   752     019B                     _SP1BRGL	set	411
   753     019F                     _BAUD1CON	set	415
   754     019D                     _RC1STA	set	413
   755     019E                     _TX1STA	set	414
   756     0190                     _ANSELE	set	400
   757     018F                     _ANSELD	set	399
   758     018E                     _ANSELC	set	398
   759     018D                     _ANSELB	set	397
   760     018C                     _ANSELA	set	396
   761     020F                     _WPUD	set	527
   762     020E                     _WPUC	set	526
   763     020D                     _WPUB	set	525
   764     020C                     _WPUA	set	524
   765     0299                     _CCPR7L	set	665
   766     029A                     _CCPR7H	set	666
   767     029B                     _CCP7CON	set	667
   768     0295                     _CCPR2L	set	661
   769     0296                     _CCPR2H	set	662
   770     0297                     _CCP2CON	set	663
   771     0291                     _CCPR1L	set	657
   772     0292                     _CCPR1H	set	658
   773     029E                     _CCPTMRS1bits	set	670
   774     0293                     _CCP1CON	set	659
   775     029F                     _CCPTMRS2bits	set	671
   776     0311                     _CCPR8L	set	785
   777     0312                     _CCPR8H	set	786
   778     0313                     _CCP8CON	set	787
   779     0494                     _T2PR	set	1172
   780     0495                     _T2CON	set	1173
   781     0497                     _T2CLKCONbits	set	1175
   782     0617                     _PWM4DCL	set	1559
   783     0618                     _PWM4DCH	set	1560
   784     0619                     _PWM4CON	set	1561
   785     0614                     _PWM3DCL	set	1556
   786     0615                     _PWM3DCH	set	1557
   787     0616                     _PWM3CON	set	1558
   788     0E3D                     _RXPPS	set	3645
   789     0EAD                     _RD5PPS	set	3757
   790     0EAF                     _RD7PPS	set	3759
   791     0E99                     _RB1PPS	set	3737
   792     0E9B                     _RB3PPS	set	3739
   793     0E93                     _RA3PPS	set	3731
   794     0E91                     _RA1PPS	set	3729
   795     0E9C                     _RB4PPS	set	3740
   796     0EAC                     _RD4PPS	set	3756
   797     0EAE                     _RD6PPS	set	3758
   798     0E98                     _RB0PPS	set	3736
   799     0E9A                     _RB2PPS	set	3738
   800     0E92                     _RA2PPS	set	3730
   801     0E90                     _RA0PPS	set	3728
   802                           
   803                           	psect	cinit
   804     001F                     start_initialization:	
   805                           ; #config settings
   806                           
   807     001F                     __initialization:
   808                           
   809                           ; Clear objects allocated to COMMON
   810     001F  01FB               	clrf	__pbssCOMMON& (0+127)
   811     0020                     end_of_initialization:	
   812                           ;End of C runtime variable initialization code
   813                           
   814     0020                     __end_of__initialization:
   815     0020  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   816     0021  0020               	movlb	0
   817     0022  3180  2824         	ljmp	_main	;jump to C main() function
   818                           
   819                           	psect	bssCOMMON
   820     007B                     __pbssCOMMON:
   821     007B                     _g_ReadData:
   822     007B                     	ds	1
   823                           
   824                           	psect	cstackCOMMON
   825     0070                     __pcstackCOMMON:
   826     0070                     ?_LEDON:
   827     0070                     ??_LEDON:	
   828                           ; 1 bytes @ 0x0
   829                           
   830     0070                     ?_LEDOFF:	
   831                           ; 1 bytes @ 0x0
   832                           
   833     0070                     ??_LEDOFF:	
   834                           ; 1 bytes @ 0x0
   835                           
   836     0070                     ?_main:	
   837                           ; 1 bytes @ 0x0
   838                           
   839     0070                     ?_ISR:	
   840                           ; 1 bytes @ 0x0
   841                           
   842     0070                     ??_ISR:	
   843                           ; 1 bytes @ 0x0
   844                           
   845     0070                     ?___wmul:	
   846                           ; 1 bytes @ 0x0
   847                           
   848     0070                     ___wmul@multiplier:	
   849                           ; 2 bytes @ 0x0
   850                           
   851                           
   852                           ; 2 bytes @ 0x0
   853     0070                     	ds	2
   854     0072                     ___wmul@multiplicand:
   855                           
   856                           ; 2 bytes @ 0x2
   857     0072                     	ds	2
   858     0074                     ??___wmul:
   859     0074                     ___wmul@product:	
   860                           ; 1 bytes @ 0x4
   861                           
   862                           
   863                           ; 2 bytes @ 0x4
   864     0074                     	ds	2
   865     0076                     ?_motorC:
   866     0076                     motorC@duty:	
   867                           ; 1 bytes @ 0x6
   868                           
   869                           
   870                           ; 2 bytes @ 0x6
   871     0076                     	ds	2
   872     0078                     ??_motorC:
   873                           
   874                           ; 1 bytes @ 0x8
   875     0078                     	ds	2
   876     007A                     ??_main:
   877                           
   878                           ; 1 bytes @ 0xA
   879     007A                     	ds	1
   880                           
   881                           	psect	cstackBANK0
   882     0020                     __pcstackBANK0:
   883     0020                     main@i:
   884                           
   885                           ; 2 bytes @ 0x0
   886     0020                     	ds	2
   887     0022                     main@i_504:
   888                           
   889                           ; 2 bytes @ 0x2
   890     0022                     	ds	2
   891                           
   892                           	psect	maintext
   893     0024                     __pmaintext:	
   894 ;;
   895 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   896 ;;
   897 ;; *************** function _main *****************
   898 ;; Defined at:
   899 ;;		line 64 in file "main.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;		None
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  i               2    2[BANK0 ] int 
   904 ;;  i               2    0[BANK0 ] int 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0, pclath, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : B1F/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   915 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   916 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   917 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   918 ;;Total ram usage:        5 bytes
   919 ;; Hardware stack levels required when called: 3
   920 ;; This function calls:
   921 ;;		_LEDOFF
   922 ;;		_LEDON
   923 ;;		_motorC
   924 ;; This function is called by:
   925 ;;		Startup code after reset
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929     0024                     _main:	
   930                           ;psect for function _main
   931                           
   932     0024                     l1314:	
   933                           ;incstack = 0
   934                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   935                           
   936                           
   937                           ;main.c: 65:     OSCCON = 0b11110000;
   938     0024  30F0               	movlw	240
   939     0025  0021               	movlb	1	; select bank1
   940     0026  009B               	movwf	27	;volatile
   941     0027                     l1316:
   942                           
   943                           ;main.c: 66:     ANSELA = 0x00;
   944     0027  0023               	movlb	3	; select bank3
   945     0028  018C               	clrf	12	;volatile
   946     0029                     l1318:
   947                           
   948                           ;main.c: 67:     ANSELB = 0x00;
   949     0029  018D               	clrf	13	;volatile
   950     002A                     l1320:
   951                           
   952                           ;main.c: 68:     ANSELC = 0x00;
   953     002A  018E               	clrf	14	;volatile
   954     002B                     l1322:
   955                           
   956                           ;main.c: 69:     ANSELD = 0x00;
   957     002B  018F               	clrf	15	;volatile
   958     002C                     l1324:
   959                           
   960                           ;main.c: 70:     ANSELE = 0x00;
   961     002C  0190               	clrf	16	;volatile
   962     002D                     l1326:
   963                           
   964                           ;main.c: 71:     TRISA = 0b11000000;
   965     002D  30C0               	movlw	192
   966     002E  0021               	movlb	1	; select bank1
   967     002F  008C               	movwf	12	;volatile
   968     0030                     l1328:
   969                           
   970                           ;main.c: 72:     TRISB = 0b00100000;
   971     0030  3020               	movlw	32
   972     0031  008D               	movwf	13	;volatile
   973     0032                     l1330:
   974                           
   975                           ;main.c: 73:     TRISC = 0b00001111;
   976     0032  300F               	movlw	15
   977     0033  008E               	movwf	14	;volatile
   978     0034                     l1332:
   979                           
   980                           ;main.c: 74:     TRISD = 0b00000011;
   981     0034  3003               	movlw	3
   982     0035  008F               	movwf	15	;volatile
   983     0036                     l1334:
   984                           
   985                           ;main.c: 75:     LATA = 0x00;
   986     0036  0022               	movlb	2	; select bank2
   987     0037  018C               	clrf	12	;volatile
   988     0038                     l1336:
   989                           
   990                           ;main.c: 76:     LATB = 0x00;
   991     0038  018D               	clrf	13	;volatile
   992     0039                     l1338:
   993                           
   994                           ;main.c: 77:     LATC = 0x00;
   995     0039  018E               	clrf	14	;volatile
   996     003A                     l1340:
   997                           
   998                           ;main.c: 78:     LATD = 0x00;
   999     003A  018F               	clrf	15	;volatile
  1000     003B                     l1342:
  1001                           
  1002                           ;main.c: 79:     LATE = 0x00;
  1003     003B  0190               	clrf	16	;volatile
  1004     003C                     l1344:
  1005                           
  1006                           ;main.c: 81:     WPUA = 0x00;
  1007     003C  0024               	movlb	4	; select bank4
  1008     003D  018C               	clrf	12	;volatile
  1009     003E                     l1346:
  1010                           
  1011                           ;main.c: 82:     WPUB = 0x00;
  1012     003E  018D               	clrf	13	;volatile
  1013                           
  1014                           ;main.c: 83:     WPUC = 0b00001100;
  1015     003F  300C               	movlw	12
  1016     0040  008E               	movwf	14	;volatile
  1017                           
  1018                           ;main.c: 84:     WPUD = 0b00000011;
  1019     0041  3003               	movlw	3
  1020     0042  008F               	movwf	15	;volatile
  1021     0043                     l1348:
  1022                           
  1023                           ;main.c: 85:     OPTION_REGbits.nWPUEN = 0;
  1024     0043  0021               	movlb	1	; select bank1
  1025     0044  1397               	bcf	23,7	;volatile
  1026     0045                     l1350:
  1027                           
  1028                           ;main.c: 90:     T2CLKCONbits.CS = 0b0001;
  1029     0045  0029               	movlb	9	; select bank9
  1030     0046  0817               	movf	23,w	;volatile
  1031     0047  39F0               	andlw	-16
  1032     0048  3801               	iorlw	1
  1033     0049  0097               	movwf	23	;volatile
  1034     004A                     l1352:
  1035                           
  1036                           ;main.c: 91:     T2CON = 0b10000000;
  1037     004A  3080               	movlw	128
  1038     004B  0095               	movwf	21	;volatile
  1039     004C                     l1354:
  1040                           
  1041                           ;main.c: 92:     T2PR = 0xFF;
  1042     004C  30FF               	movlw	255
  1043     004D  0094               	movwf	20	;volatile
  1044     004E                     l1356:
  1045                           
  1046                           ;main.c: 95:     RA0PPS = 0b011001;
  1047     004E  3019               	movlw	25
  1048     004F  003D               	movlb	29	; select bank29
  1049     0050  0090               	movwf	16	;volatile
  1050     0051                     l1358:
  1051                           
  1052                           ;main.c: 97:     PWM3CON = 0b10000000;
  1053     0051  3080               	movlw	128
  1054     0052  002C               	movlb	12	; select bank12
  1055     0053  0096               	movwf	22	;volatile
  1056     0054                     l1360:
  1057                           
  1058                           ;main.c: 98:     CCPTMRS2bits.P3TSEL = 0b00;
  1059     0054  30FC               	movlw	-4
  1060     0055  0025               	movlb	5	; select bank5
  1061     0056  059F               	andwf	31,f	;volatile
  1062     0057                     l1362:
  1063                           
  1064                           ;main.c: 99:     PWM3DCH = 0x00;
  1065     0057  002C               	movlb	12	; select bank12
  1066     0058  0195               	clrf	21	;volatile
  1067     0059                     l1364:
  1068                           
  1069                           ;main.c: 100:     PWM3DCL = 0x00;
  1070     0059  0194               	clrf	20	;volatile
  1071                           
  1072                           ;main.c: 103:     RA2PPS = 0b011010;
  1073     005A  301A               	movlw	26
  1074     005B  003D               	movlb	29	; select bank29
  1075     005C  0092               	movwf	18	;volatile
  1076                           
  1077                           ;main.c: 105:     PWM4CON = 0b10000000;
  1078     005D  3080               	movlw	128
  1079     005E  002C               	movlb	12	; select bank12
  1080     005F  0099               	movwf	25	;volatile
  1081     0060                     l1366:
  1082                           
  1083                           ;main.c: 106:     CCPTMRS2bits.P4TSEL = 0b00;
  1084     0060  30F3               	movlw	-13
  1085     0061  0025               	movlb	5	; select bank5
  1086     0062  059F               	andwf	31,f	;volatile
  1087     0063                     l1368:
  1088                           
  1089                           ;main.c: 107:     PWM4DCH = 0x00;
  1090     0063  002C               	movlb	12	; select bank12
  1091     0064  0198               	clrf	24	;volatile
  1092     0065                     l1370:
  1093                           
  1094                           ;main.c: 108:     PWM4DCL = 0x00;
  1095     0065  0197               	clrf	23	;volatile
  1096     0066                     l1372:
  1097                           
  1098                           ;main.c: 112:     RB2PPS = 0b010101;
  1099     0066  3015               	movlw	21
  1100     0067  003D               	movlb	29	; select bank29
  1101     0068  009A               	movwf	26	;volatile
  1102     0069                     l1374:
  1103                           
  1104                           ;main.c: 113:     CCP1CON = 0b10011100;
  1105     0069  309C               	movlw	156
  1106     006A  0025               	movlb	5	; select bank5
  1107     006B  0093               	movwf	19	;volatile
  1108     006C                     l1376:
  1109                           
  1110                           ;main.c: 114:     CCPTMRS1bits.C1TSEL = 0b00;
  1111     006C  30FC               	movlw	-4
  1112     006D  059E               	andwf	30,f	;volatile
  1113     006E                     l1378:
  1114                           
  1115                           ;main.c: 115:     CCPR1H = 0x00;
  1116     006E  0192               	clrf	18	;volatile
  1117     006F                     l1380:
  1118                           
  1119                           ;main.c: 116:     CCPR1L = 0x00;
  1120     006F  0191               	clrf	17	;volatile
  1121                           
  1122                           ;main.c: 120:     RB0PPS = 0b010110;
  1123     0070  3016               	movlw	22
  1124     0071  003D               	movlb	29	; select bank29
  1125     0072  0098               	movwf	24	;volatile
  1126                           
  1127                           ;main.c: 121:     CCP2CON = 0b10011100;
  1128     0073  309C               	movlw	156
  1129     0074  0025               	movlb	5	; select bank5
  1130     0075  0097               	movwf	23	;volatile
  1131     0076                     l1382:
  1132                           
  1133                           ;main.c: 122:     CCPTMRS1bits.C2TSEL = 0b00;
  1134     0076  30F3               	movlw	-13
  1135     0077  059E               	andwf	30,f	;volatile
  1136     0078                     l1384:
  1137                           
  1138                           ;main.c: 123:     CCPR2H = 0x00;
  1139     0078  0196               	clrf	22	;volatile
  1140     0079                     l1386:
  1141                           
  1142                           ;main.c: 124:     CCPR2L = 0x00;
  1143     0079  0195               	clrf	21	;volatile
  1144     007A                     l1388:
  1145                           
  1146                           ;main.c: 128:     RD6PPS = 0b010111;
  1147     007A  3017               	movlw	23
  1148     007B  003D               	movlb	29	; select bank29
  1149     007C  00AE               	movwf	46	;volatile
  1150     007D                     l1390:
  1151                           
  1152                           ;main.c: 129:     CCP7CON = 0b10011100;
  1153     007D  309C               	movlw	156
  1154     007E  0025               	movlb	5	; select bank5
  1155     007F  009B               	movwf	27	;volatile
  1156     0080                     l1392:
  1157                           
  1158                           ;main.c: 130:     CCPTMRS1bits.C7TSEL = 0b00;
  1159     0080  30CF               	movlw	-49
  1160     0081  059E               	andwf	30,f	;volatile
  1161     0082                     l1394:
  1162                           
  1163                           ;main.c: 131:     CCPR7H = 0x00;
  1164     0082  019A               	clrf	26	;volatile
  1165     0083                     l1396:
  1166                           
  1167                           ;main.c: 132:     CCPR7L = 0x00;
  1168     0083  0199               	clrf	25	;volatile
  1169                           
  1170                           ;main.c: 136:     RD4PPS = 0b011000;
  1171     0084  3018               	movlw	24
  1172     0085  003D               	movlb	29	; select bank29
  1173     0086  00AC               	movwf	44	;volatile
  1174                           
  1175                           ;main.c: 137:     CCP8CON = 0b10011100;
  1176     0087  309C               	movlw	156
  1177     0088  0026               	movlb	6	; select bank6
  1178     0089  0093               	movwf	19	;volatile
  1179     008A                     l1398:
  1180                           
  1181                           ;main.c: 138:     CCPTMRS1bits.C8TSEL = 0b00;
  1182     008A  303F               	movlw	-193
  1183     008B  0025               	movlb	5	; select bank5
  1184     008C  059E               	andwf	30,f	;volatile
  1185     008D                     l1400:
  1186                           
  1187                           ;main.c: 139:     CCPR8H = 0x00;
  1188     008D  0026               	movlb	6	; select bank6
  1189     008E  0192               	clrf	18	;volatile
  1190     008F                     l1402:
  1191                           
  1192                           ;main.c: 140:     CCPR8L = 0x00;
  1193     008F  0191               	clrf	17	;volatile
  1194     0090                     l1404:
  1195                           
  1196                           ;main.c: 143:     RXPPS = 0b001101;
  1197     0090  300D               	movlw	13
  1198     0091  003C               	movlb	28	; select bank28
  1199     0092  00BD               	movwf	61	;volatile
  1200     0093                     l1406:
  1201                           
  1202                           ;main.c: 144:     RB4PPS = 0b100100;
  1203     0093  3024               	movlw	36
  1204     0094  003D               	movlb	29	; select bank29
  1205     0095  009C               	movwf	28	;volatile
  1206     0096                     l1408:
  1207                           
  1208                           ;main.c: 145:     TX1STA = 0b00100100;
  1209     0096  3024               	movlw	36
  1210     0097  0023               	movlb	3	; select bank3
  1211     0098  009E               	movwf	30	;volatile
  1212     0099                     l1410:
  1213                           
  1214                           ;main.c: 146:     RC1STA = 0b10010000;
  1215     0099  3090               	movlw	144
  1216     009A  009D               	movwf	29	;volatile
  1217     009B                     l1412:
  1218                           
  1219                           ;main.c: 147:     BAUD1CON = 0b00001000;
  1220     009B  3008               	movlw	8
  1221     009C  009F               	movwf	31	;volatile
  1222     009D                     l1414:
  1223                           
  1224                           ;main.c: 148:     SP1BRGL = 416 & 0x00FF;
  1225     009D  30A0               	movlw	160
  1226     009E  009B               	movwf	27	;volatile
  1227     009F                     l1416:
  1228                           
  1229                           ;main.c: 149:     SP1BRGH = (416 >> 8) & 0x00FF;
  1230     009F  3001               	movlw	1
  1231     00A0  009C               	movwf	28	;volatile
  1232     00A1                     l1418:
  1233                           
  1234                           ;main.c: 151:     PIR1bits.RCIF = 0;
  1235     00A1  0020               	movlb	0	; select bank0
  1236     00A2  1291               	bcf	17,5	;volatile
  1237     00A3                     l1420:
  1238                           
  1239                           ;main.c: 152:     PIE1bits.RCIE = 1;
  1240     00A3  0021               	movlb	1	; select bank1
  1241     00A4  1691               	bsf	17,5	;volatile
  1242     00A5                     l1422:
  1243                           
  1244                           ;main.c: 153:     INTCONbits.PEIE = 1;
  1245     00A5  170B               	bsf	11,6	;volatile
  1246     00A6                     l1424:
  1247                           
  1248                           ;main.c: 154:     INTCONbits.GIE = 1;
  1249     00A6  178B               	bsf	11,7	;volatile
  1250     00A7                     l1426:
  1251                           
  1252                           ;main.c: 158:         for(int i = -600; i < 600; i++){
  1253     00A7  30A8               	movlw	168
  1254     00A8  0020               	movlb	0	; select bank0
  1255     00A9  00A0               	movwf	main@i
  1256     00AA  30FD               	movlw	253
  1257     00AB  00A1               	movwf	main@i+1
  1258     00AC                     l1432:
  1259                           
  1260                           ;main.c: 161:             motorC(i);
  1261     00AC  0020               	movlb	0	; select bank0
  1262     00AD  0821               	movf	main@i+1,w
  1263     00AE  00F7               	movwf	motorC@duty+1
  1264     00AF  0820               	movf	main@i,w
  1265     00B0  00F6               	movwf	motorC@duty
  1266     00B1  3180  20FE  3180   	fcall	_motorC
  1267     00B4                     l1434:
  1268                           
  1269                           ;main.c: 166:             LEDON();
  1270     00B4  3181  2190  3180   	fcall	_LEDON
  1271                           
  1272                           ;main.c: 167:             _delay((unsigned long)((10)*(32000000/4000.0)));
  1273     00B7  3068               	movlw	104
  1274     00B8  00FA               	movwf	??_main
  1275     00B9  30E4               	movlw	228
  1276     00BA                     u657:
  1277     00BA  0B89               	decfsz	9,f
  1278     00BB  28BA               	goto	u657
  1279     00BC  0BFA               	decfsz	??_main,f
  1280     00BD  28BA               	goto	u657
  1281     00BE  3200               	nop2
  1282                           
  1283                           ;main.c: 168:         }
  1284     00BF  3001               	movlw	1
  1285     00C0  0020               	movlb	0	; select bank0
  1286     00C1  07A0               	addwf	main@i,f
  1287     00C2  3000               	movlw	0
  1288     00C3  3DA1               	addwfc	main@i+1,f
  1289     00C4  0821               	movf	main@i+1,w
  1290     00C5  3A80               	xorlw	128
  1291     00C6  00FA               	movwf	??_main
  1292     00C7  3082               	movlw	130
  1293     00C8  027A               	subwf	??_main,w
  1294     00C9  1D03               	skipz
  1295     00CA  28CD               	goto	u435
  1296     00CB  3058               	movlw	88
  1297     00CC  0220               	subwf	main@i,w
  1298     00CD                     u435:
  1299     00CD  1C03               	skipc
  1300     00CE  28D0               	goto	u431
  1301     00CF  28D1               	goto	u430
  1302     00D0                     u431:
  1303     00D0  28AC               	goto	l1432
  1304     00D1                     u430:
  1305     00D1                     l1436:
  1306                           
  1307                           ;main.c: 169:         for(int i = 600; i > -600; i--){
  1308     00D1  3058               	movlw	88
  1309     00D2  0020               	movlb	0	; select bank0
  1310     00D3  00A2               	movwf	main@i_504
  1311     00D4  3002               	movlw	2
  1312     00D5  00A3               	movwf	main@i_504+1
  1313     00D6                     l1440:
  1314                           
  1315                           ;main.c: 172:             motorC(i);
  1316     00D6  0020               	movlb	0	; select bank0
  1317     00D7  0823               	movf	main@i_504+1,w
  1318     00D8  00F7               	movwf	motorC@duty+1
  1319     00D9  0822               	movf	main@i_504,w
  1320     00DA  00F6               	movwf	motorC@duty
  1321     00DB  3180  20FE  3180   	fcall	_motorC
  1322     00DE                     l1442:
  1323                           
  1324                           ;main.c: 177:             LEDOFF();
  1325     00DE  3181  2193  3180   	fcall	_LEDOFF
  1326                           
  1327                           ;main.c: 178:             _delay((unsigned long)((10)*(32000000/4000.0)));
  1328     00E1  3068               	movlw	104
  1329     00E2  00FA               	movwf	??_main
  1330     00E3  30E4               	movlw	228
  1331     00E4                     u667:
  1332     00E4  0B89               	decfsz	9,f
  1333     00E5  28E4               	goto	u667
  1334     00E6  0BFA               	decfsz	??_main,f
  1335     00E7  28E4               	goto	u667
  1336     00E8  3200               	nop2
  1337                           
  1338                           ;main.c: 179:         }
  1339     00E9  30FF               	movlw	255
  1340     00EA  0020               	movlb	0	; select bank0
  1341     00EB  07A2               	addwf	main@i_504,f
  1342     00EC  30FF               	movlw	255
  1343     00ED  3DA3               	addwfc	main@i_504+1,f
  1344     00EE  0823               	movf	main@i_504+1,w
  1345     00EF  3A80               	xorlw	128
  1346     00F0  00FA               	movwf	??_main
  1347     00F1  307D               	movlw	125
  1348     00F2  027A               	subwf	??_main,w
  1349     00F3  1D03               	skipz
  1350     00F4  28F7               	goto	u445
  1351     00F5  30A9               	movlw	169
  1352     00F6  0222               	subwf	main@i_504,w
  1353     00F7                     u445:
  1354     00F7  1803               	skipnc
  1355     00F8  28FA               	goto	u441
  1356     00F9  28FB               	goto	u440
  1357     00FA                     u441:
  1358     00FA  28D6               	goto	l1440
  1359     00FB                     u440:
  1360     00FB  28A7               	goto	l1426
  1361     00FC  3180  281D         	ljmp	start
  1362     00FE                     __end_of_main:
  1363                           
  1364                           	psect	text1
  1365     00FE                     __ptext1:	
  1366 ;; *************** function _motorC *****************
  1367 ;; Defined at:
  1368 ;;		line 270 in file "main.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  duty            2    6[COMMON] int 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;		None
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0, pclath, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1384 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1385 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1386 ;;Total ram usage:        4 bytes
  1387 ;; Hardware stack levels used: 1
  1388 ;; Hardware stack levels required when called: 2
  1389 ;; This function calls:
  1390 ;;		___wmul
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396     00FE                     _motorC:	
  1397                           ;psect for function _motorC
  1398                           
  1399     00FE                     l1272:	
  1400                           ;incstack = 0
  1401                           ; Regs used in _motorC: [wreg+status,2+status,0+pclath+cstack]
  1402                           
  1403                           
  1404                           ;main.c: 272:     duty > 600 ? (duty = 600) : duty;
  1405     00FE  0877               	movf	motorC@duty+1,w
  1406     00FF  3A80               	xorlw	128
  1407     0100  00F8               	movwf	??_motorC
  1408     0101  3082               	movlw	130
  1409     0102  0278               	subwf	??_motorC,w
  1410     0103  1D03               	skipz
  1411     0104  2907               	goto	u395
  1412     0105  3059               	movlw	89
  1413     0106  0276               	subwf	motorC@duty,w
  1414     0107                     u395:
  1415     0107  1C03               	skipc
  1416     0108  290A               	goto	u391
  1417     0109  290B               	goto	u390
  1418     010A                     u391:
  1419     010A  290F               	goto	l1276
  1420     010B                     u390:
  1421     010B                     l1274:
  1422     010B  3058               	movlw	88
  1423     010C  00F6               	movwf	motorC@duty
  1424     010D  3002               	movlw	2
  1425     010E  00F7               	movwf	motorC@duty+1
  1426     010F                     l1276:
  1427                           
  1428                           ;main.c: 273:     duty < -600 ? (duty = 600) : duty;
  1429     010F  0877               	movf	motorC@duty+1,w
  1430     0110  3A80               	xorlw	128
  1431     0111  00F8               	movwf	??_motorC
  1432     0112  307D               	movlw	125
  1433     0113  0278               	subwf	??_motorC,w
  1434     0114  1D03               	skipz
  1435     0115  2918               	goto	u405
  1436     0116  30A8               	movlw	168
  1437     0117  0276               	subwf	motorC@duty,w
  1438     0118                     u405:
  1439     0118  1803               	skipnc
  1440     0119  291B               	goto	u401
  1441     011A  291C               	goto	u400
  1442     011B                     u401:
  1443     011B  2920               	goto	l1280
  1444     011C                     u400:
  1445     011C                     l1278:
  1446     011C  3058               	movlw	88
  1447     011D  00F6               	movwf	motorC@duty
  1448     011E  3002               	movlw	2
  1449     011F  00F7               	movwf	motorC@duty+1
  1450     0120                     l1280:
  1451                           
  1452                           ;main.c: 275:     if(duty > 0){
  1453     0120  0877               	movf	motorC@duty+1,w
  1454     0121  3A80               	xorlw	128
  1455     0122  00F8               	movwf	??_motorC
  1456     0123  3080               	movlw	128
  1457     0124  0278               	subwf	??_motorC,w
  1458     0125  1D03               	skipz
  1459     0126  2929               	goto	u415
  1460     0127  3001               	movlw	1
  1461     0128  0276               	subwf	motorC@duty,w
  1462     0129                     u415:
  1463     0129  1C03               	skipc
  1464     012A  292C               	goto	u411
  1465     012B  292D               	goto	u410
  1466     012C                     u411:
  1467     012C  2942               	goto	l222
  1468     012D                     u410:
  1469     012D                     l1282:
  1470                           
  1471                           ;main.c: 276:         CCPR1L = (duty << 8) & 0x00FF;
  1472     012D  0025               	movlb	5	; select bank5
  1473     012E  0191               	clrf	17	;volatile
  1474     012F                     l1284:
  1475                           
  1476                           ;main.c: 277:         CCPR1H = (duty >> 2) & 0x00FF;
  1477     012F  0877               	movf	motorC@duty+1,w
  1478     0130  00F9               	movwf	??_motorC+1
  1479     0131  0876               	movf	motorC@duty,w
  1480     0132  00F8               	movwf	??_motorC
  1481     0133  0D79               	rlf	??_motorC+1,w
  1482     0134  0CF9               	rrf	??_motorC+1,f
  1483     0135  0CF8               	rrf	??_motorC,f
  1484     0136  0D79               	rlf	??_motorC+1,w
  1485     0137  0CF9               	rrf	??_motorC+1,f
  1486     0138  0CF8               	rrf	??_motorC,f
  1487     0139  0878               	movf	??_motorC,w
  1488     013A  0092               	movwf	18	;volatile
  1489     013B                     l1286:
  1490                           
  1491                           ;main.c: 278:         RB2PPS = 0b010101;
  1492     013B  3015               	movlw	21
  1493     013C  003D               	movlb	29	; select bank29
  1494     013D  009A               	movwf	26	;volatile
  1495                           
  1496                           ;main.c: 279:         RB3PPS = 0x00;
  1497     013E  019B               	clrf	27	;volatile
  1498     013F                     l1288:
  1499                           
  1500                           ;main.c: 280:         LATBbits.LATB3 = 0;
  1501     013F  0022               	movlb	2	; select bank2
  1502     0140  118D               	bcf	13,3	;volatile
  1503                           
  1504                           ;main.c: 281:     }
  1505     0141  2970               	goto	l226
  1506     0142                     l222:	
  1507                           ;main.c: 282:     else if(duty < 0){
  1508                           
  1509     0142  1FF7               	btfss	motorC@duty+1,7
  1510     0143  2945               	goto	u421
  1511     0144  2946               	goto	u420
  1512     0145                     u421:
  1513     0145  296A               	goto	l1302
  1514     0146                     u420:
  1515     0146                     l1290:
  1516                           
  1517                           ;main.c: 283:         duty *= -1;
  1518     0146  30FF               	movlw	255
  1519     0147  00F0               	movwf	___wmul@multiplier
  1520     0148  30FF               	movlw	255
  1521     0149  00F1               	movwf	___wmul@multiplier+1
  1522     014A  0877               	movf	motorC@duty+1,w
  1523     014B  00F3               	movwf	___wmul@multiplicand+1
  1524     014C  0876               	movf	motorC@duty,w
  1525     014D  00F2               	movwf	___wmul@multiplicand
  1526     014E  3181  2171  3180   	fcall	___wmul
  1527     0151  0871               	movf	?___wmul+1,w
  1528     0152  00F7               	movwf	motorC@duty+1
  1529     0153  0870               	movf	?___wmul,w
  1530     0154  00F6               	movwf	motorC@duty
  1531     0155                     l1292:
  1532                           
  1533                           ;main.c: 284:         CCPR1L = (duty << 8) & 0x00FF;
  1534     0155  0025               	movlb	5	; select bank5
  1535     0156  0191               	clrf	17	;volatile
  1536     0157                     l1294:
  1537                           
  1538                           ;main.c: 285:         CCPR1H = (duty >> 2) & 0x00FF;
  1539     0157  0877               	movf	motorC@duty+1,w
  1540     0158  00F9               	movwf	??_motorC+1
  1541     0159  0876               	movf	motorC@duty,w
  1542     015A  00F8               	movwf	??_motorC
  1543     015B  0D79               	rlf	??_motorC+1,w
  1544     015C  0CF9               	rrf	??_motorC+1,f
  1545     015D  0CF8               	rrf	??_motorC,f
  1546     015E  0D79               	rlf	??_motorC+1,w
  1547     015F  0CF9               	rrf	??_motorC+1,f
  1548     0160  0CF8               	rrf	??_motorC,f
  1549     0161  0878               	movf	??_motorC,w
  1550     0162  0092               	movwf	18	;volatile
  1551     0163                     l1296:
  1552                           
  1553                           ;main.c: 286:         RB3PPS = 0b010101;
  1554     0163  3015               	movlw	21
  1555     0164  003D               	movlb	29	; select bank29
  1556     0165  009B               	movwf	27	;volatile
  1557     0166                     l1298:
  1558                           
  1559                           ;main.c: 287:         RB2PPS = 0x00;
  1560     0166  019A               	clrf	26	;volatile
  1561     0167                     l1300:
  1562                           
  1563                           ;main.c: 288:         LATBbits.LATB2 = 0;
  1564     0167  0022               	movlb	2	; select bank2
  1565     0168  110D               	bcf	13,2	;volatile
  1566                           
  1567                           ;main.c: 289:     }
  1568     0169  2970               	goto	l226
  1569     016A                     l1302:
  1570                           
  1571                           ;main.c: 291:         RB2PPS = 0x00;
  1572     016A  003D               	movlb	29	; select bank29
  1573     016B  019A               	clrf	26	;volatile
  1574                           
  1575                           ;main.c: 292:         RB3PPS = 0x00;
  1576     016C  019B               	clrf	27	;volatile
  1577     016D                     l1304:
  1578                           
  1579                           ;main.c: 293:         LATBbits.LATB2 = 0;
  1580     016D  0022               	movlb	2	; select bank2
  1581     016E  110D               	bcf	13,2	;volatile
  1582     016F                     l1306:
  1583                           
  1584                           ;main.c: 294:         LATBbits.LATB3 = 0;
  1585     016F  118D               	bcf	13,3	;volatile
  1586     0170                     l226:
  1587     0170  0008               	return
  1588     0171                     __end_of_motorC:
  1589                           
  1590                           	psect	text2
  1591     0171                     __ptext2:	
  1592 ;; *************** function ___wmul *****************
  1593 ;; Defined at:
  1594 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  multiplier      2    0[COMMON] unsigned int 
  1597 ;;  multiplicand    2    2[COMMON] unsigned int 
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;  product         2    4[COMMON] unsigned int 
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  2    0[COMMON] unsigned int 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1610 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1612 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1613 ;;Total ram usage:        6 bytes
  1614 ;; Hardware stack levels used: 1
  1615 ;; Hardware stack levels required when called: 1
  1616 ;; This function calls:
  1617 ;;		Nothing
  1618 ;; This function is called by:
  1619 ;;		_motorC
  1620 ;;		_motorA
  1621 ;;		_motorB
  1622 ;;		_motorD
  1623 ;;		_motorE
  1624 ;;		_motorF
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628     0171                     ___wmul:	
  1629                           ;psect for function ___wmul
  1630                           
  1631     0171                     l1258:	
  1632                           ;incstack = 0
  1633                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1634                           
  1635     0171  01F4               	clrf	___wmul@product
  1636     0172  01F5               	clrf	___wmul@product+1
  1637     0173                     l1260:
  1638     0173  1C70               	btfss	___wmul@multiplier,0
  1639     0174  2976               	goto	u351
  1640     0175  2977               	goto	u350
  1641     0176                     u351:
  1642     0176  297B               	goto	l378
  1643     0177                     u350:
  1644     0177                     l1262:
  1645     0177  0872               	movf	___wmul@multiplicand,w
  1646     0178  07F4               	addwf	___wmul@product,f
  1647     0179  0873               	movf	___wmul@multiplicand+1,w
  1648     017A  3DF5               	addwfc	___wmul@product+1,f
  1649     017B                     l378:
  1650     017B  3001               	movlw	1
  1651     017C                     u365:
  1652     017C  35F2               	lslf	___wmul@multiplicand,f
  1653     017D  0DF3               	rlf	___wmul@multiplicand+1,f
  1654     017E  0B89               	decfsz	9,f
  1655     017F  297C               	goto	u365
  1656     0180                     l1264:
  1657     0180  3001               	movlw	1
  1658     0181                     u375:
  1659     0181  36F1               	lsrf	___wmul@multiplier+1,f
  1660     0182  0CF0               	rrf	___wmul@multiplier,f
  1661     0183  0B89               	decfsz	9,f
  1662     0184  2981               	goto	u375
  1663     0185                     l1266:
  1664     0185  0870               	movf	___wmul@multiplier,w
  1665     0186  0471               	iorwf	___wmul@multiplier+1,w
  1666     0187  1D03               	btfss	3,2
  1667     0188  298A               	goto	u381
  1668     0189  298B               	goto	u380
  1669     018A                     u381:
  1670     018A  2973               	goto	l1260
  1671     018B                     u380:
  1672     018B                     l1268:
  1673     018B  0875               	movf	___wmul@product+1,w
  1674     018C  00F1               	movwf	?___wmul+1
  1675     018D  0874               	movf	___wmul@product,w
  1676     018E  00F0               	movwf	?___wmul
  1677     018F                     l380:
  1678     018F  0008               	return
  1679     0190                     __end_of___wmul:
  1680                           
  1681                           	psect	text3
  1682     0190                     __ptext3:	
  1683 ;; *************** function _LEDON *****************
  1684 ;; Defined at:
  1685 ;;		line 436 in file "main.c"
  1686 ;; Parameters:    Size  Location     Type
  1687 ;;		None
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;		None
  1690 ;; Return value:  Size  Location     Type
  1691 ;;                  1    wreg      void 
  1692 ;; Registers used:
  1693 ;;		None
  1694 ;; Tracked objects:
  1695 ;;		On entry : 0/0
  1696 ;;		On exit  : 0/0
  1697 ;;		Unchanged: 0/0
  1698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1703 ;;Total ram usage:        0 bytes
  1704 ;; Hardware stack levels used: 1
  1705 ;; Hardware stack levels required when called: 1
  1706 ;; This function calls:
  1707 ;;		Nothing
  1708 ;; This function is called by:
  1709 ;;		_main
  1710 ;; This function uses a non-reentrant model
  1711 ;;
  1712                           
  1713     0190                     _LEDON:	
  1714                           ;psect for function _LEDON
  1715                           
  1716     0190                     l1310:	
  1717                           ;incstack = 0
  1718                           ; Regs used in _LEDON: []
  1719                           
  1720                           
  1721                           ;main.c: 437:     LATDbits.LATD2 = 1;
  1722     0190  0022               	movlb	2	; select bank2
  1723     0191  150F               	bsf	15,2	;volatile
  1724     0192                     l307:
  1725     0192  0008               	return
  1726     0193                     __end_of_LEDON:
  1727                           
  1728                           	psect	text4
  1729     0193                     __ptext4:	
  1730 ;; *************** function _LEDOFF *****************
  1731 ;; Defined at:
  1732 ;;		line 440 in file "main.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;		None
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		None
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1750 ;;Total ram usage:        0 bytes
  1751 ;; Hardware stack levels used: 1
  1752 ;; Hardware stack levels required when called: 1
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_main
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760     0193                     _LEDOFF:	
  1761                           ;psect for function _LEDOFF
  1762                           
  1763     0193                     l1312:	
  1764                           ;incstack = 0
  1765                           ; Regs used in _LEDOFF: []
  1766                           
  1767                           
  1768                           ;main.c: 441:     LATDbits.LATD2 = 0;
  1769     0193  0022               	movlb	2	; select bank2
  1770     0194  110F               	bcf	15,2	;volatile
  1771     0195                     l310:
  1772     0195  0008               	return
  1773     0196                     __end_of_LEDOFF:
  1774                           
  1775                           	psect	intentry
  1776     0004                     __pintentry:	
  1777 ;; *************** function _ISR *****************
  1778 ;; Defined at:
  1779 ;;		line 198 in file "main.c"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;		None
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;		None
  1784 ;; Return value:  Size  Location     Type
  1785 ;;                  1    wreg      void 
  1786 ;; Registers used:
  1787 ;;		wreg, status,2
  1788 ;; Tracked objects:
  1789 ;;		On entry : 0/0
  1790 ;;		On exit  : 0/0
  1791 ;;		Unchanged: 0/0
  1792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1797 ;;Total ram usage:        0 bytes
  1798 ;; Hardware stack levels used: 1
  1799 ;; This function calls:
  1800 ;;		Nothing
  1801 ;; This function is called by:
  1802 ;;		Interrupt level 1
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806     0004                     _ISR:
  1807                           
  1808                           ;incstack = 0
  1809     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  1810                           
  1811                           ; Regs used in _ISR: [wreg+status,2]
  1812     0005  3180               	pagesel	$
  1813     0006                     i1l1026:
  1814                           
  1815                           ;main.c: 199:     if(PIR1bits.RCIF){
  1816     0006  0020               	movlb	0	; select bank0
  1817     0007  1E91               	btfss	17,5	;volatile
  1818     0008  280A               	goto	u12_21
  1819     0009  280B               	goto	u12_20
  1820     000A                     u12_21:
  1821     000A  281B               	goto	i1l181
  1822     000B                     u12_20:
  1823     000B                     i1l1028:
  1824                           
  1825                           ;main.c: 200:         PIR1bits.RCIF = 0;
  1826     000B  1291               	bcf	17,5	;volatile
  1827                           
  1828                           ;main.c: 201:         if(RC1STAbits.FERR || RC1STAbits.OERR){
  1829     000C  0023               	movlb	3	; select bank3
  1830     000D  191D               	btfsc	29,2	;volatile
  1831     000E  2810               	goto	u13_21
  1832     000F  2811               	goto	u13_20
  1833     0010                     u13_21:
  1834     0010  2815               	goto	i1l1032
  1835     0011                     u13_20:
  1836     0011                     i1l1030:
  1837     0011  1C9D               	btfss	29,1	;volatile
  1838     0012  2814               	goto	u14_21
  1839     0013  2815               	goto	u14_20
  1840     0014                     u14_21:
  1841     0014  2819               	goto	i1l1036
  1842     0015                     u14_20:
  1843     0015                     i1l1032:
  1844                           
  1845                           ;main.c: 202:             RC1STA = 0x00;
  1846     0015  019D               	clrf	29	;volatile
  1847     0016                     i1l1034:
  1848                           
  1849                           ;main.c: 203:             RC1STA = 0x90;
  1850     0016  3090               	movlw	144
  1851     0017  009D               	movwf	29	;volatile
  1852                           
  1853                           ;main.c: 204:         }
  1854     0018  281B               	goto	i1l181
  1855     0019                     i1l1036:
  1856                           
  1857                           ;main.c: 206:             g_ReadData = RC1REG;
  1858     0019  0819               	movf	25,w	;volatile
  1859     001A  00FB               	movwf	_g_ReadData
  1860     001B                     i1l181:
  1861     001B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1862     001C  0009               	retfie
  1863     001D                     __end_of_ISR:
  1864     007E                     btemp	set	126	;btemp
  1865     007E                     int$flags	set	126
  1866     007E                     wtemp0	set	126
  1867                           
  1868                           	psect	idloc
  1869                           
  1870                           ;Config register IDLOC0 @ 0x8000
  1871                           ;	unspecified, using default values
  1872     8000                     	org	32768
  1873     8000  3FFF               	dw	16383
  1874                           
  1875                           ;Config register IDLOC1 @ 0x8001
  1876                           ;	unspecified, using default values
  1877     8001                     	org	32769
  1878     8001  3FFF               	dw	16383
  1879                           
  1880                           ;Config register IDLOC2 @ 0x8002
  1881                           ;	unspecified, using default values
  1882     8002                     	org	32770
  1883     8002  3FFF               	dw	16383
  1884                           
  1885                           ;Config register IDLOC3 @ 0x8003
  1886                           ;	unspecified, using default values
  1887     8003                     	org	32771
  1888     8003  3FFF               	dw	16383
  1889                           
  1890                           	psect	config
  1891                           
  1892                           ;Config register CONFIG1 @ 0x8007
  1893                           ;	Oscillator Selection Bits
  1894                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  1895                           ;	Watchdog Timer Enable
  1896                           ;	WDTE = OFF, WDT disabled
  1897                           ;	Power-up Timer Enable
  1898                           ;	PWRTE = ON, PWRT enabled
  1899                           ;	MCLR Pin Function Select
  1900                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  1901                           ;	Flash Program Memory Code Protection
  1902                           ;	CP = OFF, Program memory code protection is disabled
  1903                           ;	Brown-out Reset Enable
  1904                           ;	BOREN = ON, Brown-out Reset enabled
  1905                           ;	Clock Out Enable
  1906                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  1907                           ;	Internal/External Switchover Mode
  1908                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  1909                           ;	Fail-Safe Clock Monitor Enable
  1910                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1911     8007                     	org	32775
  1912     8007  0FC4               	dw	4036
  1913                           
  1914                           ;Config register CONFIG2 @ 0x8008
  1915                           ;	Flash Memory Self-Write Protection
  1916                           ;	WRT = OFF, Write protection off
  1917                           ;	Peripheral Pin Select one-way control
  1918                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  1919                           ;	Zero-cross detect disable
  1920                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
  1921                           ;	Phase Lock Loop enable
  1922                           ;	PLLEN = ON, 4x PLL is always enabled
  1923                           ;	Stack Overflow/Underflow Reset Enable
  1924                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  1925                           ;	Brown-out Reset Voltage Selection
  1926                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  1927                           ;	Low-Power Brown Out Reset
  1928                           ;	LPBOR = OFF, Low-Power BOR is disabled
  1929                           ;	Low-Voltage Programming Enable
  1930                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  1931     8008                     	org	32776
  1932     8008  1BFF               	dw	7167

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      12
    BANK0            80      4       4
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_motorC
    _motorC->___wmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1449
                                             10 COMMON     1     1      0
                                              0 BANK0      4     4      0
                             _LEDOFF
                              _LEDON
                             _motorC
 ---------------------------------------------------------------------------------
 (1) _motorC                                               4     2      2    1313
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _LEDON                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDOFF                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDOFF
   _LEDON
   _motorC
     ___wmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      B       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0      10      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0      10      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Aug 27 15:11:27 2023

    ___wmul@multiplicand 0072                      l310 0195                      l222 0142  
                    l226 0170                      l307 0192                      l380 018F  
                    l378 017B                      u400 011C                      u401 011B  
                    u410 012D                      u411 012C                      u420 0146  
                    u421 0145                      u405 0118                      u350 0177  
                    u430 00D1                      u351 0176                      u415 0129  
                    u431 00D0                      u440 00FB                      u441 00FA  
                    u435 00CD                      u380 018B                      _ISR 0004  
                    u381 018A                      u365 017C                      u445 00F7  
                    u390 010B                      u375 0181                      u391 010A  
                    u395 0107                      u657 00BA                      u667 00E4  
                    wreg 0009                     ?_ISR 0070                     l1300 0167  
                   l1310 0190                     l1302 016A                     l1312 0193  
                   l1304 016D                     l1400 008D                     l1320 002A  
                   l1306 016F                     l1410 0099                     l1402 008F  
                   l1330 0032                     l1322 002B                     l1314 0024  
                   l1260 0173                     l1420 00A3                     l1412 009B  
                   l1404 0090                     l1340 003A                     l1332 0034  
                   l1324 002C                     l1316 0027                     l1262 0177  
                   l1422 00A5                     l1414 009D                     l1406 0093  
                   l1350 0045                     l1342 003B                     l1334 0036  
                   l1326 002D                     l1318 0029                     l1264 0180  
                   l1280 0120                     l1272 00FE                     l1440 00D6  
                   l1432 00AC                     l1424 00A6                     l1416 009F  
                   l1408 0096                     l1360 0054                     l1352 004A  
                   l1344 003C                     l1336 0038                     l1328 0030  
                   l1266 0185                     l1258 0171                     l1290 0146  
                   l1282 012D                     l1274 010B                     l1442 00DE  
                   l1434 00B4                     l1426 00A7                     l1418 00A1  
                   l1370 0065                     l1362 0057                     l1354 004C  
                   l1346 003E                     l1338 0039                     l1268 018B  
                   l1292 0155                     l1284 012F                     l1276 010F  
                   l1436 00D1                     l1380 006F                     l1372 0066  
                   l1364 0059                     l1356 004E                     l1348 0043  
                   l1294 0157                     l1286 013B                     l1278 011C  
                   l1390 007D                     l1382 0076                     l1374 0069  
                   l1366 0060                     l1358 0051                     l1296 0163  
                   l1288 013F                     l1392 0080                     l1384 0078  
                   l1376 006C                     l1368 0063                     l1298 0166  
                   l1394 0082                     l1386 0079                     l1378 006E  
                   l1396 0083                     l1388 007A                     l1398 008A  
                   _LATA 010C                     _LATB 010D                     _LATC 010E  
                   _LATD 010F                     _LATE 0110                     _T2PR 0494  
                   _WPUA 020C                     _WPUB 020D                     _WPUC 020E  
                   _WPUD 020F                     _main 0024                     btemp 007E  
                   start 001D                    ??_ISR 0070                    ?_main 0070  
                  _T2CON 0495                    _LEDON 0190                    i1l181 001B  
                  u12_20 000B                    u12_21 000A                    u13_20 0011  
                  u13_21 0010                    u14_20 0015                    u14_21 0014  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _TRISD 008F                    _RXPPS 0E3D                    main@i 0020  
                  status 0003                    wtemp0 007E          __initialization 001F  
           __end_of_main 00FE                   ??_main 007A                   ?_LEDON 0070  
                 _CCPR1H 0292                   _CCPR2H 0296                   _CCPR1L 0291  
                 _CCPR2L 0295                   _CCPR7H 029A                   _CCPR8H 0312  
                 _CCPR7L 0299                   _CCPR8L 0311                   _ANSELA 018C  
                 _ANSELB 018D                   _ANSELC 018E                   _ANSELD 018F  
                 _ANSELE 0190                   _LEDOFF 0193                   _RA0PPS 0E90  
                 _RA1PPS 0E91                   _RC1REG 0199                   _RA2PPS 0E92  
                 _RB0PPS 0E98                   _RA3PPS 0E93                   _RB1PPS 0E99  
                 _RB2PPS 0E9A                   _RB3PPS 0E9B                   _RC1STA 019D  
                 _RB4PPS 0E9C                   i1l1030 0011                   i1l1032 0015  
                 i1l1034 0016                   i1l1026 0006                   i1l1036 0019  
                 i1l1028 000B                   _RD4PPS 0EAC                   _RD5PPS 0EAD  
                 _RD6PPS 0EAE                   _RD7PPS 0EAF                   _OSCCON 009B  
                 _TX1REG 019A                   _TX1STA 019E             _CCPTMRS1bits 029E  
           _CCPTMRS2bits 029F                   ___wmul 0171                   _motorC 00FE  
__end_of__initialization 0020            __end_of_LEDON 0193               _g_ReadData 007B  
         __pcstackCOMMON 0070                  ??_LEDON 0070           _OPTION_REGbits 0097  
                ?_LEDOFF 0070             _T2CLKCONbits 0497               __pmaintext 0024  
                ?___wmul 0070               __pintentry 0004                  _CCP1CON 0293  
                _CCP2CON 0297                  _CCP7CON 029B                  _CCP8CON 0313  
                ?_motorC 0076                  _SP1BRGH 019C                  _SP1BRGL 019B  
                _PWM3DCH 0615                  _PWM3DCL 0614                  _PWM4DCH 0618  
                _PWM4DCL 0617                  _PWM3CON 0616                  _PWM4CON 0619  
                __ptext1 00FE                  __ptext2 0171                  __ptext3 0190  
                __ptext4 0193     end_of_initialization 0020                _PORTAbits 000C  
              _PORTCbits 000E                _PORTDbits 000F           __end_of_LEDOFF 0196  
         __end_of___wmul 0190           __end_of_motorC 0171      start_initialization 001F  
            __end_of_ISR 001D                 ??_LEDOFF 0070                 ??___wmul 0074  
               ??_motorC 0078              __pbssCOMMON 007B                ___latbits 0003  
          __pcstackBANK0 0020                 _BAUD1CON 019F               motorC@duty 0076  
         ___wmul@product 0074                 _LATAbits 010C                 _LATBbits 010D  
               _LATDbits 010F                 _PIE1bits 0091                 _PIR1bits 0011  
              main@i_504 0022        ___wmul@multiplier 0070               _RC1STAbits 019D  
               int$flags 007E               _INTCONbits 000B                 intlevel1 0000  
