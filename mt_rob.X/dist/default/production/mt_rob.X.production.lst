

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Sep 01 16:02:57 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F1779
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2
    14                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	psect	text9,local,class=CODE,merge=1,delta=2
    17                           	psect	text10,local,class=CODE,merge=1,delta=2
    18                           	psect	text11,local,class=CODE,merge=1,delta=2
    19                           	psect	text12,local,class=CODE,merge=1,delta=2
    20                           	psect	text13,local,class=CODE,merge=1,delta=2
    21                           	psect	text14,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26     0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F1779 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000F                     	;# 
    78     0010                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001C                     	;# 
    93     001D                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     008C                     	;# 
    97     008D                     	;# 
    98     008E                     	;# 
    99     008F                     	;# 
   100     0090                     	;# 
   101     0091                     	;# 
   102     0092                     	;# 
   103     0093                     	;# 
   104     0094                     	;# 
   105     0095                     	;# 
   106     0096                     	;# 
   107     0097                     	;# 
   108     0098                     	;# 
   109     0099                     	;# 
   110     009A                     	;# 
   111     009B                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     010C                     	;# 
   117     010D                     	;# 
   118     010E                     	;# 
   119     010F                     	;# 
   120     0110                     	;# 
   121     0111                     	;# 
   122     0112                     	;# 
   123     0113                     	;# 
   124     0114                     	;# 
   125     0115                     	;# 
   126     0116                     	;# 
   127     0117                     	;# 
   128     0118                     	;# 
   129     0119                     	;# 
   130     011A                     	;# 
   131     011B                     	;# 
   132     011C                     	;# 
   133     011D                     	;# 
   134     018C                     	;# 
   135     018D                     	;# 
   136     018E                     	;# 
   137     018F                     	;# 
   138     0190                     	;# 
   139     0191                     	;# 
   140     0191                     	;# 
   141     0192                     	;# 
   142     0193                     	;# 
   143     0193                     	;# 
   144     0194                     	;# 
   145     0195                     	;# 
   146     0196                     	;# 
   147     0197                     	;# 
   148     0199                     	;# 
   149     0199                     	;# 
   150     0199                     	;# 
   151     019A                     	;# 
   152     019A                     	;# 
   153     019A                     	;# 
   154     019B                     	;# 
   155     019B                     	;# 
   156     019B                     	;# 
   157     019B                     	;# 
   158     019B                     	;# 
   159     019C                     	;# 
   160     019C                     	;# 
   161     019C                     	;# 
   162     019D                     	;# 
   163     019D                     	;# 
   164     019D                     	;# 
   165     019E                     	;# 
   166     019E                     	;# 
   167     019E                     	;# 
   168     019F                     	;# 
   169     019F                     	;# 
   170     019F                     	;# 
   171     019F                     	;# 
   172     019F                     	;# 
   173     020C                     	;# 
   174     020D                     	;# 
   175     020E                     	;# 
   176     020F                     	;# 
   177     0210                     	;# 
   178     0211                     	;# 
   179     0211                     	;# 
   180     0212                     	;# 
   181     0212                     	;# 
   182     0213                     	;# 
   183     0213                     	;# 
   184     0214                     	;# 
   185     0214                     	;# 
   186     0215                     	;# 
   187     0215                     	;# 
   188     0215                     	;# 
   189     0215                     	;# 
   190     0216                     	;# 
   191     0216                     	;# 
   192     0217                     	;# 
   193     0217                     	;# 
   194     021B                     	;# 
   195     021C                     	;# 
   196     021D                     	;# 
   197     021E                     	;# 
   198     021F                     	;# 
   199     028C                     	;# 
   200     028D                     	;# 
   201     028E                     	;# 
   202     028F                     	;# 
   203     0290                     	;# 
   204     0291                     	;# 
   205     0291                     	;# 
   206     0292                     	;# 
   207     0293                     	;# 
   208     0294                     	;# 
   209     0295                     	;# 
   210     0295                     	;# 
   211     0296                     	;# 
   212     0297                     	;# 
   213     0298                     	;# 
   214     0299                     	;# 
   215     0299                     	;# 
   216     029A                     	;# 
   217     029B                     	;# 
   218     029C                     	;# 
   219     029E                     	;# 
   220     029F                     	;# 
   221     030C                     	;# 
   222     030D                     	;# 
   223     030E                     	;# 
   224     030F                     	;# 
   225     0310                     	;# 
   226     0311                     	;# 
   227     0311                     	;# 
   228     0312                     	;# 
   229     0313                     	;# 
   230     0314                     	;# 
   231     0315                     	;# 
   232     0316                     	;# 
   233     0317                     	;# 
   234     0318                     	;# 
   235     0319                     	;# 
   236     031B                     	;# 
   237     031C                     	;# 
   238     031D                     	;# 
   239     031E                     	;# 
   240     031F                     	;# 
   241     038C                     	;# 
   242     038D                     	;# 
   243     038E                     	;# 
   244     038F                     	;# 
   245     0390                     	;# 
   246     0391                     	;# 
   247     0392                     	;# 
   248     0393                     	;# 
   249     0394                     	;# 
   250     0395                     	;# 
   251     0396                     	;# 
   252     0397                     	;# 
   253     0398                     	;# 
   254     0399                     	;# 
   255     039D                     	;# 
   256     039E                     	;# 
   257     039F                     	;# 
   258     040D                     	;# 
   259     040F                     	;# 
   260     040F                     	;# 
   261     0410                     	;# 
   262     0411                     	;# 
   263     0412                     	;# 
   264     0413                     	;# 
   265     0413                     	;# 
   266     0414                     	;# 
   267     0414                     	;# 
   268     0415                     	;# 
   269     0416                     	;# 
   270     0417                     	;# 
   271     0418                     	;# 
   272     041A                     	;# 
   273     041A                     	;# 
   274     041B                     	;# 
   275     041B                     	;# 
   276     041C                     	;# 
   277     041D                     	;# 
   278     041E                     	;# 
   279     041F                     	;# 
   280     048E                     	;# 
   281     048E                     	;# 
   282     048F                     	;# 
   283     0490                     	;# 
   284     0491                     	;# 
   285     0492                     	;# 
   286     0493                     	;# 
   287     0493                     	;# 
   288     0494                     	;# 
   289     0494                     	;# 
   290     0495                     	;# 
   291     0496                     	;# 
   292     0497                     	;# 
   293     0498                     	;# 
   294     049A                     	;# 
   295     049A                     	;# 
   296     049B                     	;# 
   297     049B                     	;# 
   298     049C                     	;# 
   299     049D                     	;# 
   300     049E                     	;# 
   301     049F                     	;# 
   302     050F                     	;# 
   303     0510                     	;# 
   304     0511                     	;# 
   305     0512                     	;# 
   306     0513                     	;# 
   307     0514                     	;# 
   308     0515                     	;# 
   309     0516                     	;# 
   310     0517                     	;# 
   311     0518                     	;# 
   312     0519                     	;# 
   313     051A                     	;# 
   314     051B                     	;# 
   315     051C                     	;# 
   316     051D                     	;# 
   317     051E                     	;# 
   318     058D                     	;# 
   319     058E                     	;# 
   320     058F                     	;# 
   321     058F                     	;# 
   322     058F                     	;# 
   323     0590                     	;# 
   324     0590                     	;# 
   325     0591                     	;# 
   326     0592                     	;# 
   327     0592                     	;# 
   328     0592                     	;# 
   329     0593                     	;# 
   330     0593                     	;# 
   331     0594                     	;# 
   332     0595                     	;# 
   333     0595                     	;# 
   334     0596                     	;# 
   335     0597                     	;# 
   336     0597                     	;# 
   337     0598                     	;# 
   338     0599                     	;# 
   339     0599                     	;# 
   340     0599                     	;# 
   341     059A                     	;# 
   342     059A                     	;# 
   343     059B                     	;# 
   344     059C                     	;# 
   345     059C                     	;# 
   346     059C                     	;# 
   347     059D                     	;# 
   348     059D                     	;# 
   349     059E                     	;# 
   350     059F                     	;# 
   351     059F                     	;# 
   352     060C                     	;# 
   353     060D                     	;# 
   354     060D                     	;# 
   355     060E                     	;# 
   356     060F                     	;# 
   357     0610                     	;# 
   358     0611                     	;# 
   359     0612                     	;# 
   360     0613                     	;# 
   361     0614                     	;# 
   362     0614                     	;# 
   363     0615                     	;# 
   364     0616                     	;# 
   365     0617                     	;# 
   366     0617                     	;# 
   367     0618                     	;# 
   368     0619                     	;# 
   369     061A                     	;# 
   370     061A                     	;# 
   371     061B                     	;# 
   372     061C                     	;# 
   373     061D                     	;# 
   374     061D                     	;# 
   375     061E                     	;# 
   376     061F                     	;# 
   377     068D                     	;# 
   378     068E                     	;# 
   379     068F                     	;# 
   380     0690                     	;# 
   381     0691                     	;# 
   382     0692                     	;# 
   383     0693                     	;# 
   384     0694                     	;# 
   385     0695                     	;# 
   386     0696                     	;# 
   387     0697                     	;# 
   388     0698                     	;# 
   389     0699                     	;# 
   390     069A                     	;# 
   391     069B                     	;# 
   392     069C                     	;# 
   393     069D                     	;# 
   394     069E                     	;# 
   395     069F                     	;# 
   396     070D                     	;# 
   397     070E                     	;# 
   398     070F                     	;# 
   399     0710                     	;# 
   400     0711                     	;# 
   401     0712                     	;# 
   402     0713                     	;# 
   403     0714                     	;# 
   404     0715                     	;# 
   405     0716                     	;# 
   406     0717                     	;# 
   407     0718                     	;# 
   408     0719                     	;# 
   409     071A                     	;# 
   410     071B                     	;# 
   411     071C                     	;# 
   412     071D                     	;# 
   413     071E                     	;# 
   414     071F                     	;# 
   415     078E                     	;# 
   416     078F                     	;# 
   417     0790                     	;# 
   418     0791                     	;# 
   419     0792                     	;# 
   420     0793                     	;# 
   421     0794                     	;# 
   422     0795                     	;# 
   423     0796                     	;# 
   424     0797                     	;# 
   425     0798                     	;# 
   426     0799                     	;# 
   427     079A                     	;# 
   428     079B                     	;# 
   429     079C                     	;# 
   430     079D                     	;# 
   431     079E                     	;# 
   432     079F                     	;# 
   433     080D                     	;# 
   434     080E                     	;# 
   435     080F                     	;# 
   436     0810                     	;# 
   437     0811                     	;# 
   438     0812                     	;# 
   439     0813                     	;# 
   440     0814                     	;# 
   441     0815                     	;# 
   442     0816                     	;# 
   443     0817                     	;# 
   444     0818                     	;# 
   445     0819                     	;# 
   446     081A                     	;# 
   447     081B                     	;# 
   448     081C                     	;# 
   449     081D                     	;# 
   450     081E                     	;# 
   451     081F                     	;# 
   452     088D                     	;# 
   453     088E                     	;# 
   454     088F                     	;# 
   455     0890                     	;# 
   456     0891                     	;# 
   457     0892                     	;# 
   458     0893                     	;# 
   459     0894                     	;# 
   460     0895                     	;# 
   461     0896                     	;# 
   462     0897                     	;# 
   463     0898                     	;# 
   464     0899                     	;# 
   465     089A                     	;# 
   466     089B                     	;# 
   467     089C                     	;# 
   468     089D                     	;# 
   469     089E                     	;# 
   470     089F                     	;# 
   471     090C                     	;# 
   472     090D                     	;# 
   473     090E                     	;# 
   474     090F                     	;# 
   475     0910                     	;# 
   476     0911                     	;# 
   477     0912                     	;# 
   478     0913                     	;# 
   479     0914                     	;# 
   480     0915                     	;# 
   481     0916                     	;# 
   482     0917                     	;# 
   483     0918                     	;# 
   484     0919                     	;# 
   485     091A                     	;# 
   486     091B                     	;# 
   487     091C                     	;# 
   488     091D                     	;# 
   489     091E                     	;# 
   490     091F                     	;# 
   491     0D1B                     	;# 
   492     0D1C                     	;# 
   493     0D1D                     	;# 
   494     0D1E                     	;# 
   495     0D1F                     	;# 
   496     0D8E                     	;# 
   497     0D8F                     	;# 
   498     0D90                     	;# 
   499     0D91                     	;# 
   500     0D91                     	;# 
   501     0D92                     	;# 
   502     0D93                     	;# 
   503     0D93                     	;# 
   504     0D94                     	;# 
   505     0D95                     	;# 
   506     0D95                     	;# 
   507     0D96                     	;# 
   508     0D97                     	;# 
   509     0D97                     	;# 
   510     0D98                     	;# 
   511     0D99                     	;# 
   512     0D99                     	;# 
   513     0D9A                     	;# 
   514     0D9B                     	;# 
   515     0D9C                     	;# 
   516     0D9C                     	;# 
   517     0D9D                     	;# 
   518     0D9D                     	;# 
   519     0D9E                     	;# 
   520     0D9F                     	;# 
   521     0DA0                     	;# 
   522     0DA1                     	;# 
   523     0DA1                     	;# 
   524     0DA2                     	;# 
   525     0DA3                     	;# 
   526     0DA3                     	;# 
   527     0DA4                     	;# 
   528     0DA5                     	;# 
   529     0DA5                     	;# 
   530     0DA6                     	;# 
   531     0DA7                     	;# 
   532     0DA7                     	;# 
   533     0DA8                     	;# 
   534     0DA9                     	;# 
   535     0DA9                     	;# 
   536     0DAA                     	;# 
   537     0DAB                     	;# 
   538     0DAC                     	;# 
   539     0DAC                     	;# 
   540     0DAD                     	;# 
   541     0DAD                     	;# 
   542     0DAE                     	;# 
   543     0DAF                     	;# 
   544     0DB0                     	;# 
   545     0DB1                     	;# 
   546     0DB1                     	;# 
   547     0DB2                     	;# 
   548     0DB3                     	;# 
   549     0DB3                     	;# 
   550     0DB4                     	;# 
   551     0DB5                     	;# 
   552     0DB5                     	;# 
   553     0DB6                     	;# 
   554     0DB7                     	;# 
   555     0DB7                     	;# 
   556     0DB8                     	;# 
   557     0DB9                     	;# 
   558     0DB9                     	;# 
   559     0DBA                     	;# 
   560     0DBB                     	;# 
   561     0DBC                     	;# 
   562     0DBC                     	;# 
   563     0DBD                     	;# 
   564     0DBD                     	;# 
   565     0DBE                     	;# 
   566     0DBF                     	;# 
   567     0DC0                     	;# 
   568     0DC1                     	;# 
   569     0DC1                     	;# 
   570     0DC2                     	;# 
   571     0DC3                     	;# 
   572     0DC3                     	;# 
   573     0DC4                     	;# 
   574     0DC5                     	;# 
   575     0DC5                     	;# 
   576     0DC6                     	;# 
   577     0DC7                     	;# 
   578     0DC7                     	;# 
   579     0DC8                     	;# 
   580     0DC9                     	;# 
   581     0DC9                     	;# 
   582     0DCA                     	;# 
   583     0DCB                     	;# 
   584     0DCC                     	;# 
   585     0DCC                     	;# 
   586     0DCD                     	;# 
   587     0DCD                     	;# 
   588     0DCE                     	;# 
   589     0DCF                     	;# 
   590     0DD0                     	;# 
   591     0E0C                     	;# 
   592     0E0D                     	;# 
   593     0E0E                     	;# 
   594     0E0F                     	;# 
   595     0E10                     	;# 
   596     0E11                     	;# 
   597     0E12                     	;# 
   598     0E13                     	;# 
   599     0E14                     	;# 
   600     0E15                     	;# 
   601     0E15                     	;# 
   602     0E15                     	;# 
   603     0E16                     	;# 
   604     0E16                     	;# 
   605     0E16                     	;# 
   606     0E17                     	;# 
   607     0E17                     	;# 
   608     0E17                     	;# 
   609     0E18                     	;# 
   610     0E18                     	;# 
   611     0E18                     	;# 
   612     0E19                     	;# 
   613     0E1A                     	;# 
   614     0E1B                     	;# 
   615     0E1C                     	;# 
   616     0E1D                     	;# 
   617     0E1E                     	;# 
   618     0E1F                     	;# 
   619     0E20                     	;# 
   620     0E21                     	;# 
   621     0E22                     	;# 
   622     0E23                     	;# 
   623     0E24                     	;# 
   624     0E25                     	;# 
   625     0E26                     	;# 
   626     0E27                     	;# 
   627     0E28                     	;# 
   628     0E29                     	;# 
   629     0E2A                     	;# 
   630     0E2B                     	;# 
   631     0E2C                     	;# 
   632     0E2D                     	;# 
   633     0E2E                     	;# 
   634     0E2F                     	;# 
   635     0E30                     	;# 
   636     0E31                     	;# 
   637     0E32                     	;# 
   638     0E33                     	;# 
   639     0E34                     	;# 
   640     0E35                     	;# 
   641     0E36                     	;# 
   642     0E37                     	;# 
   643     0E38                     	;# 
   644     0E39                     	;# 
   645     0E3A                     	;# 
   646     0E3B                     	;# 
   647     0E3C                     	;# 
   648     0E3D                     	;# 
   649     0E3E                     	;# 
   650     0E90                     	;# 
   651     0E91                     	;# 
   652     0E92                     	;# 
   653     0E93                     	;# 
   654     0E94                     	;# 
   655     0E95                     	;# 
   656     0E96                     	;# 
   657     0E97                     	;# 
   658     0E98                     	;# 
   659     0E99                     	;# 
   660     0E9A                     	;# 
   661     0E9B                     	;# 
   662     0E9C                     	;# 
   663     0E9D                     	;# 
   664     0E9E                     	;# 
   665     0E9F                     	;# 
   666     0EA0                     	;# 
   667     0EA1                     	;# 
   668     0EA2                     	;# 
   669     0EA3                     	;# 
   670     0EA4                     	;# 
   671     0EA5                     	;# 
   672     0EA6                     	;# 
   673     0EA7                     	;# 
   674     0EA8                     	;# 
   675     0EA9                     	;# 
   676     0EAA                     	;# 
   677     0EAB                     	;# 
   678     0EAC                     	;# 
   679     0EAD                     	;# 
   680     0EAE                     	;# 
   681     0EAF                     	;# 
   682     0EB0                     	;# 
   683     0EB1                     	;# 
   684     0EB2                     	;# 
   685     0F0F                     	;# 
   686     0F10                     	;# 
   687     0F11                     	;# 
   688     0F12                     	;# 
   689     0F13                     	;# 
   690     0F14                     	;# 
   691     0F15                     	;# 
   692     0F16                     	;# 
   693     0F17                     	;# 
   694     0F18                     	;# 
   695     0F19                     	;# 
   696     0F1A                     	;# 
   697     0F1B                     	;# 
   698     0F1C                     	;# 
   699     0F1D                     	;# 
   700     0F1E                     	;# 
   701     0F1F                     	;# 
   702     0F20                     	;# 
   703     0F21                     	;# 
   704     0F22                     	;# 
   705     0F23                     	;# 
   706     0F24                     	;# 
   707     0F25                     	;# 
   708     0F26                     	;# 
   709     0F27                     	;# 
   710     0F28                     	;# 
   711     0F29                     	;# 
   712     0F2A                     	;# 
   713     0F2B                     	;# 
   714     0F2C                     	;# 
   715     0F2D                     	;# 
   716     0F2E                     	;# 
   717     0F2F                     	;# 
   718     0F30                     	;# 
   719     0F31                     	;# 
   720     0F32                     	;# 
   721     0F33                     	;# 
   722     0F34                     	;# 
   723     0F35                     	;# 
   724     0F36                     	;# 
   725     0F37                     	;# 
   726     0FE4                     	;# 
   727     0FE5                     	;# 
   728     0FE6                     	;# 
   729     0FE7                     	;# 
   730     0FE8                     	;# 
   731     0FE9                     	;# 
   732     0FEA                     	;# 
   733     0FEB                     	;# 
   734     0FED                     	;# 
   735     0FEE                     	;# 
   736     0FEF                     	;# 
   737     000C                     _PORTAbits	set	12
   738     000F                     _PORTDbits	set	15
   739     000E                     _PORTCbits	set	14
   740     000B                     _INTCONbits	set	11
   741     0011                     _PIR1bits	set	17
   742     0091                     _PIE1bits	set	145
   743     0097                     _OPTION_REGbits	set	151
   744     008F                     _TRISD	set	143
   745     008E                     _TRISC	set	142
   746     008D                     _TRISB	set	141
   747     008C                     _TRISA	set	140
   748     009B                     _OSCCON	set	155
   749     010F                     _LATDbits	set	271
   750     010D                     _LATBbits	set	269
   751     010C                     _LATAbits	set	268
   752     0110                     _LATE	set	272
   753     010F                     _LATD	set	271
   754     010E                     _LATC	set	270
   755     010D                     _LATB	set	269
   756     010C                     _LATA	set	268
   757     019A                     _TX1REG	set	410
   758     0199                     _RC1REG	set	409
   759     019D                     _RC1STAbits	set	413
   760     019C                     _SP1BRGH	set	412
   761     019B                     _SP1BRGL	set	411
   762     019F                     _BAUD1CON	set	415
   763     019D                     _RC1STA	set	413
   764     019E                     _TX1STA	set	414
   765     0190                     _ANSELE	set	400
   766     018F                     _ANSELD	set	399
   767     018E                     _ANSELC	set	398
   768     018D                     _ANSELB	set	397
   769     018C                     _ANSELA	set	396
   770     020F                     _WPUD	set	527
   771     020E                     _WPUC	set	526
   772     020D                     _WPUB	set	525
   773     020C                     _WPUA	set	524
   774     0299                     _CCPR7L	set	665
   775     029A                     _CCPR7H	set	666
   776     029B                     _CCP7CON	set	667
   777     0295                     _CCPR2L	set	661
   778     0296                     _CCPR2H	set	662
   779     0297                     _CCP2CON	set	663
   780     0291                     _CCPR1L	set	657
   781     0292                     _CCPR1H	set	658
   782     029E                     _CCPTMRS1bits	set	670
   783     0293                     _CCP1CON	set	659
   784     029F                     _CCPTMRS2bits	set	671
   785     0311                     _CCPR8L	set	785
   786     0312                     _CCPR8H	set	786
   787     0313                     _CCP8CON	set	787
   788     0494                     _T2PR	set	1172
   789     0495                     _T2CON	set	1173
   790     0497                     _T2CLKCONbits	set	1175
   791     0617                     _PWM4DCL	set	1559
   792     0618                     _PWM4DCH	set	1560
   793     0619                     _PWM4CON	set	1561
   794     0614                     _PWM3DCL	set	1556
   795     0615                     _PWM3DCH	set	1557
   796     0616                     _PWM3CON	set	1558
   797     0E3D                     _RXPPS	set	3645
   798     0EAD                     _RD5PPS	set	3757
   799     0EAF                     _RD7PPS	set	3759
   800     0E99                     _RB1PPS	set	3737
   801     0E9B                     _RB3PPS	set	3739
   802     0E93                     _RA3PPS	set	3731
   803     0E91                     _RA1PPS	set	3729
   804     0E9C                     _RB4PPS	set	3740
   805     0EAC                     _RD4PPS	set	3756
   806     0EAE                     _RD6PPS	set	3758
   807     0E98                     _RB0PPS	set	3736
   808     0E9A                     _RB2PPS	set	3738
   809     0E92                     _RA2PPS	set	3730
   810     0E90                     _RA0PPS	set	3728
   811                           
   812                           	psect	cinit
   813     001F                     start_initialization:	
   814                           ; #config settings
   815                           
   816     001F                     __initialization:
   817                           
   818                           ; Clear objects allocated to COMMON
   819     001F  01FC               	clrf	__pbssCOMMON& (0+127)
   820     0020                     end_of_initialization:	
   821                           ;End of C runtime variable initialization code
   822                           
   823     0020                     __end_of__initialization:
   824     0020  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   825     0021  0020               	movlb	0
   826     0022  3180  2824         	ljmp	_main	;jump to C main() function
   827                           
   828                           	psect	bssCOMMON
   829     007C                     __pbssCOMMON:
   830     007C                     _g_ReadData:
   831     007C                     	ds	1
   832                           
   833                           	psect	cstackCOMMON
   834     0070                     __pcstackCOMMON:
   835     0070                     ?_LEDOFF:
   836     0070                     ??_LEDOFF:	
   837                           ; 1 bytes @ 0x0
   838                           
   839     0070                     ?_SwitchA_Read:	
   840                           ; 1 bytes @ 0x0
   841                           
   842     0070                     ??_SwitchA_Read:	
   843                           ; 1 bytes @ 0x0
   844                           
   845     0070                     ?_LEDON:	
   846                           ; 1 bytes @ 0x0
   847                           
   848     0070                     ??_LEDON:	
   849                           ; 1 bytes @ 0x0
   850                           
   851     0070                     ?_Signal1_Read:	
   852                           ; 1 bytes @ 0x0
   853                           
   854     0070                     ??_Signal1_Read:	
   855                           ; 1 bytes @ 0x0
   856                           
   857     0070                     ?_Signal2_Read:	
   858                           ; 1 bytes @ 0x0
   859                           
   860     0070                     ??_Signal2_Read:	
   861                           ; 1 bytes @ 0x0
   862                           
   863     0070                     ?_Signal3_Read:	
   864                           ; 1 bytes @ 0x0
   865                           
   866     0070                     ??_Signal3_Read:	
   867                           ; 1 bytes @ 0x0
   868                           
   869     0070                     ?_Signal4_Read:	
   870                           ; 1 bytes @ 0x0
   871                           
   872     0070                     ??_Signal4_Read:	
   873                           ; 1 bytes @ 0x0
   874                           
   875     0070                     ?_main:	
   876                           ; 1 bytes @ 0x0
   877                           
   878     0070                     ?_ISR:	
   879                           ; 1 bytes @ 0x0
   880                           
   881     0070                     ??_ISR:	
   882                           ; 1 bytes @ 0x0
   883                           
   884     0070                     ?___wmul:	
   885                           ; 1 bytes @ 0x0
   886                           
   887     0070                     ___wmul@multiplier:	
   888                           ; 2 bytes @ 0x0
   889                           
   890                           
   891                           ; 2 bytes @ 0x0
   892     0070                     	ds	2
   893     0072                     ___wmul@multiplicand:
   894                           
   895                           ; 2 bytes @ 0x2
   896     0072                     	ds	2
   897     0074                     ??___wmul:
   898     0074                     ___wmul@product:	
   899                           ; 1 bytes @ 0x4
   900                           
   901                           
   902                           ; 2 bytes @ 0x4
   903     0074                     	ds	2
   904     0076                     ?_motorA:
   905     0076                     ?_motorB:	
   906                           ; 1 bytes @ 0x6
   907                           
   908     0076                     ?_motorC:	
   909                           ; 1 bytes @ 0x6
   910                           
   911     0076                     ?_motorD:	
   912                           ; 1 bytes @ 0x6
   913                           
   914     0076                     ?_motorE:	
   915                           ; 1 bytes @ 0x6
   916                           
   917     0076                     ?_motorF:	
   918                           ; 1 bytes @ 0x6
   919                           
   920     0076                     motorA@duty:	
   921                           ; 1 bytes @ 0x6
   922                           
   923     0076                     motorB@duty:	
   924                           ; 2 bytes @ 0x6
   925                           
   926     0076                     motorC@duty:	
   927                           ; 2 bytes @ 0x6
   928                           
   929     0076                     motorD@duty:	
   930                           ; 2 bytes @ 0x6
   931                           
   932     0076                     motorE@duty:	
   933                           ; 2 bytes @ 0x6
   934                           
   935     0076                     motorF@duty:	
   936                           ; 2 bytes @ 0x6
   937                           
   938                           
   939                           ; 2 bytes @ 0x6
   940     0076                     	ds	2
   941     0078                     ??_motorA:
   942     0078                     ??_motorB:	
   943                           ; 1 bytes @ 0x8
   944                           
   945     0078                     ??_motorC:	
   946                           ; 1 bytes @ 0x8
   947                           
   948     0078                     ??_motorD:	
   949                           ; 1 bytes @ 0x8
   950                           
   951     0078                     ??_motorE:	
   952                           ; 1 bytes @ 0x8
   953                           
   954     0078                     ??_motorF:	
   955                           ; 1 bytes @ 0x8
   956                           
   957                           
   958                           ; 1 bytes @ 0x8
   959     0078                     	ds	2
   960     007A                     ??_main:
   961     007A                     main@sum:	
   962                           ; 1 bytes @ 0xA
   963                           
   964                           
   965                           ; 2 bytes @ 0xA
   966     007A                     	ds	2
   967                           
   968                           	psect	maintext
   969     0024                     __pmaintext:	
   970 ;;
   971 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   972 ;;
   973 ;; *************** function _main *****************
   974 ;; Defined at:
   975 ;;		line 64 in file "main.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  sum             2   10[COMMON] int 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : B1F/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
   989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   990 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   992 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
   993 ;;Total ram usage:        2 bytes
   994 ;; Hardware stack levels required when called: 3
   995 ;; This function calls:
   996 ;;		_LEDOFF
   997 ;;		_LEDON
   998 ;;		_Signal1_Read
   999 ;;		_Signal2_Read
  1000 ;;		_Signal3_Read
  1001 ;;		_Signal4_Read
  1002 ;;		_SwitchA_Read
  1003 ;;		_motorA
  1004 ;;		_motorB
  1005 ;;		_motorC
  1006 ;;		_motorD
  1007 ;;		_motorE
  1008 ;;		_motorF
  1009 ;; This function is called by:
  1010 ;;		Startup code after reset
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014     0024                     _main:	
  1015                           ;psect for function _main
  1016                           
  1017     0024                     l1631:	
  1018                           ;incstack = 0
  1019                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1020                           
  1021                           
  1022                           ;main.c: 65:     OSCCON = 0b11110000;
  1023     0024  30F0               	movlw	240
  1024     0025  0021               	movlb	1	; select bank1
  1025     0026  009B               	movwf	27	;volatile
  1026     0027                     l1633:
  1027                           
  1028                           ;main.c: 66:     ANSELA = 0x00;
  1029     0027  0023               	movlb	3	; select bank3
  1030     0028  018C               	clrf	12	;volatile
  1031     0029                     l1635:
  1032                           
  1033                           ;main.c: 67:     ANSELB = 0x00;
  1034     0029  018D               	clrf	13	;volatile
  1035     002A                     l1637:
  1036                           
  1037                           ;main.c: 68:     ANSELC = 0x00;
  1038     002A  018E               	clrf	14	;volatile
  1039     002B                     l1639:
  1040                           
  1041                           ;main.c: 69:     ANSELD = 0x00;
  1042     002B  018F               	clrf	15	;volatile
  1043     002C                     l1641:
  1044                           
  1045                           ;main.c: 70:     ANSELE = 0x00;
  1046     002C  0190               	clrf	16	;volatile
  1047     002D                     l1643:
  1048                           
  1049                           ;main.c: 71:     TRISA = 0b11000000;
  1050     002D  30C0               	movlw	192
  1051     002E  0021               	movlb	1	; select bank1
  1052     002F  008C               	movwf	12	;volatile
  1053     0030                     l1645:
  1054                           
  1055                           ;main.c: 72:     TRISB = 0b00100000;
  1056     0030  3020               	movlw	32
  1057     0031  008D               	movwf	13	;volatile
  1058     0032                     l1647:
  1059                           
  1060                           ;main.c: 73:     TRISC = 0b00001111;
  1061     0032  300F               	movlw	15
  1062     0033  008E               	movwf	14	;volatile
  1063     0034                     l1649:
  1064                           
  1065                           ;main.c: 74:     TRISD = 0b00000011;
  1066     0034  3003               	movlw	3
  1067     0035  008F               	movwf	15	;volatile
  1068     0036                     l1651:
  1069                           
  1070                           ;main.c: 75:     LATA = 0x00;
  1071     0036  0022               	movlb	2	; select bank2
  1072     0037  018C               	clrf	12	;volatile
  1073     0038                     l1653:
  1074                           
  1075                           ;main.c: 76:     LATB = 0x00;
  1076     0038  018D               	clrf	13	;volatile
  1077     0039                     l1655:
  1078                           
  1079                           ;main.c: 77:     LATC = 0x00;
  1080     0039  018E               	clrf	14	;volatile
  1081     003A                     l1657:
  1082                           
  1083                           ;main.c: 78:     LATD = 0x00;
  1084     003A  018F               	clrf	15	;volatile
  1085     003B                     l1659:
  1086                           
  1087                           ;main.c: 79:     LATE = 0x00;
  1088     003B  0190               	clrf	16	;volatile
  1089     003C                     l1661:
  1090                           
  1091                           ;main.c: 81:     WPUA = 0x00;
  1092     003C  0024               	movlb	4	; select bank4
  1093     003D  018C               	clrf	12	;volatile
  1094     003E                     l1663:
  1095                           
  1096                           ;main.c: 82:     WPUB = 0x00;
  1097     003E  018D               	clrf	13	;volatile
  1098                           
  1099                           ;main.c: 83:     WPUC = 0b00001100;
  1100     003F  300C               	movlw	12
  1101     0040  008E               	movwf	14	;volatile
  1102                           
  1103                           ;main.c: 84:     WPUD = 0b00000011;
  1104     0041  3003               	movlw	3
  1105     0042  008F               	movwf	15	;volatile
  1106     0043                     l1665:
  1107                           
  1108                           ;main.c: 85:     OPTION_REGbits.nWPUEN = 0;
  1109     0043  0021               	movlb	1	; select bank1
  1110     0044  1397               	bcf	23,7	;volatile
  1111     0045                     l1667:
  1112                           
  1113                           ;main.c: 90:     T2CLKCONbits.CS = 0b0001;
  1114     0045  0029               	movlb	9	; select bank9
  1115     0046  0817               	movf	23,w	;volatile
  1116     0047  39F0               	andlw	-16
  1117     0048  3801               	iorlw	1
  1118     0049  0097               	movwf	23	;volatile
  1119     004A                     l1669:
  1120                           
  1121                           ;main.c: 91:     T2CON = 0b10000000;
  1122     004A  3080               	movlw	128
  1123     004B  0095               	movwf	21	;volatile
  1124     004C                     l1671:
  1125                           
  1126                           ;main.c: 92:     T2PR = 0xFF;
  1127     004C  30FF               	movlw	255
  1128     004D  0094               	movwf	20	;volatile
  1129     004E                     l1673:
  1130                           
  1131                           ;main.c: 95:     RA0PPS = 0b011001;
  1132     004E  3019               	movlw	25
  1133     004F  003D               	movlb	29	; select bank29
  1134     0050  0090               	movwf	16	;volatile
  1135     0051                     l1675:
  1136                           
  1137                           ;main.c: 97:     PWM3CON = 0b10000000;
  1138     0051  3080               	movlw	128
  1139     0052  002C               	movlb	12	; select bank12
  1140     0053  0096               	movwf	22	;volatile
  1141     0054                     l1677:
  1142                           
  1143                           ;main.c: 98:     CCPTMRS2bits.P3TSEL = 0b00;
  1144     0054  30FC               	movlw	-4
  1145     0055  0025               	movlb	5	; select bank5
  1146     0056  059F               	andwf	31,f	;volatile
  1147     0057                     l1679:
  1148                           
  1149                           ;main.c: 99:     PWM3DCH = 0x00;
  1150     0057  002C               	movlb	12	; select bank12
  1151     0058  0195               	clrf	21	;volatile
  1152     0059                     l1681:
  1153                           
  1154                           ;main.c: 100:     PWM3DCL = 0x00;
  1155     0059  0194               	clrf	20	;volatile
  1156                           
  1157                           ;main.c: 103:     RA2PPS = 0b011010;
  1158     005A  301A               	movlw	26
  1159     005B  003D               	movlb	29	; select bank29
  1160     005C  0092               	movwf	18	;volatile
  1161                           
  1162                           ;main.c: 105:     PWM4CON = 0b10000000;
  1163     005D  3080               	movlw	128
  1164     005E  002C               	movlb	12	; select bank12
  1165     005F  0099               	movwf	25	;volatile
  1166     0060                     l1683:
  1167                           
  1168                           ;main.c: 106:     CCPTMRS2bits.P4TSEL = 0b00;
  1169     0060  30F3               	movlw	-13
  1170     0061  0025               	movlb	5	; select bank5
  1171     0062  059F               	andwf	31,f	;volatile
  1172     0063                     l1685:
  1173                           
  1174                           ;main.c: 107:     PWM4DCH = 0x00;
  1175     0063  002C               	movlb	12	; select bank12
  1176     0064  0198               	clrf	24	;volatile
  1177     0065                     l1687:
  1178                           
  1179                           ;main.c: 108:     PWM4DCL = 0x00;
  1180     0065  0197               	clrf	23	;volatile
  1181     0066                     l1689:
  1182                           
  1183                           ;main.c: 112:     RB2PPS = 0b010101;
  1184     0066  3015               	movlw	21
  1185     0067  003D               	movlb	29	; select bank29
  1186     0068  009A               	movwf	26	;volatile
  1187     0069                     l1691:
  1188                           
  1189                           ;main.c: 113:     CCP1CON = 0b10011100;
  1190     0069  309C               	movlw	156
  1191     006A  0025               	movlb	5	; select bank5
  1192     006B  0093               	movwf	19	;volatile
  1193     006C                     l1693:
  1194                           
  1195                           ;main.c: 114:     CCPTMRS1bits.C1TSEL = 0b00;
  1196     006C  30FC               	movlw	-4
  1197     006D  059E               	andwf	30,f	;volatile
  1198     006E                     l1695:
  1199                           
  1200                           ;main.c: 115:     CCPR1H = 0x00;
  1201     006E  0192               	clrf	18	;volatile
  1202     006F                     l1697:
  1203                           
  1204                           ;main.c: 116:     CCPR1L = 0x00;
  1205     006F  0191               	clrf	17	;volatile
  1206                           
  1207                           ;main.c: 120:     RB0PPS = 0b010110;
  1208     0070  3016               	movlw	22
  1209     0071  003D               	movlb	29	; select bank29
  1210     0072  0098               	movwf	24	;volatile
  1211                           
  1212                           ;main.c: 121:     CCP2CON = 0b10011100;
  1213     0073  309C               	movlw	156
  1214     0074  0025               	movlb	5	; select bank5
  1215     0075  0097               	movwf	23	;volatile
  1216     0076                     l1699:
  1217                           
  1218                           ;main.c: 122:     CCPTMRS1bits.C2TSEL = 0b00;
  1219     0076  30F3               	movlw	-13
  1220     0077  059E               	andwf	30,f	;volatile
  1221     0078                     l1701:
  1222                           
  1223                           ;main.c: 123:     CCPR2H = 0x00;
  1224     0078  0196               	clrf	22	;volatile
  1225     0079                     l1703:
  1226                           
  1227                           ;main.c: 124:     CCPR2L = 0x00;
  1228     0079  0195               	clrf	21	;volatile
  1229     007A                     l1705:
  1230                           
  1231                           ;main.c: 128:     RD6PPS = 0b010111;
  1232     007A  3017               	movlw	23
  1233     007B  003D               	movlb	29	; select bank29
  1234     007C  00AE               	movwf	46	;volatile
  1235     007D                     l1707:
  1236                           
  1237                           ;main.c: 129:     CCP7CON = 0b10011100;
  1238     007D  309C               	movlw	156
  1239     007E  0025               	movlb	5	; select bank5
  1240     007F  009B               	movwf	27	;volatile
  1241     0080                     l1709:
  1242                           
  1243                           ;main.c: 130:     CCPTMRS1bits.C7TSEL = 0b00;
  1244     0080  30CF               	movlw	-49
  1245     0081  059E               	andwf	30,f	;volatile
  1246     0082                     l1711:
  1247                           
  1248                           ;main.c: 131:     CCPR7H = 0x00;
  1249     0082  019A               	clrf	26	;volatile
  1250     0083                     l1713:
  1251                           
  1252                           ;main.c: 132:     CCPR7L = 0x00;
  1253     0083  0199               	clrf	25	;volatile
  1254                           
  1255                           ;main.c: 136:     RD4PPS = 0b011000;
  1256     0084  3018               	movlw	24
  1257     0085  003D               	movlb	29	; select bank29
  1258     0086  00AC               	movwf	44	;volatile
  1259                           
  1260                           ;main.c: 137:     CCP8CON = 0b10011100;
  1261     0087  309C               	movlw	156
  1262     0088  0026               	movlb	6	; select bank6
  1263     0089  0093               	movwf	19	;volatile
  1264     008A                     l1715:
  1265                           
  1266                           ;main.c: 138:     CCPTMRS1bits.C8TSEL = 0b00;
  1267     008A  303F               	movlw	-193
  1268     008B  0025               	movlb	5	; select bank5
  1269     008C  059E               	andwf	30,f	;volatile
  1270     008D                     l1717:
  1271                           
  1272                           ;main.c: 139:     CCPR8H = 0x00;
  1273     008D  0026               	movlb	6	; select bank6
  1274     008E  0192               	clrf	18	;volatile
  1275     008F                     l1719:
  1276                           
  1277                           ;main.c: 140:     CCPR8L = 0x00;
  1278     008F  0191               	clrf	17	;volatile
  1279     0090                     l1721:
  1280                           
  1281                           ;main.c: 143:     RXPPS = 0b001101;
  1282     0090  300D               	movlw	13
  1283     0091  003C               	movlb	28	; select bank28
  1284     0092  00BD               	movwf	61	;volatile
  1285     0093                     l1723:
  1286                           
  1287                           ;main.c: 144:     RB4PPS = 0b100100;
  1288     0093  3024               	movlw	36
  1289     0094  003D               	movlb	29	; select bank29
  1290     0095  009C               	movwf	28	;volatile
  1291     0096                     l1725:
  1292                           
  1293                           ;main.c: 145:     TX1STA = 0b00100100;
  1294     0096  3024               	movlw	36
  1295     0097  0023               	movlb	3	; select bank3
  1296     0098  009E               	movwf	30	;volatile
  1297     0099                     l1727:
  1298                           
  1299                           ;main.c: 146:     RC1STA = 0b10010000;
  1300     0099  3090               	movlw	144
  1301     009A  009D               	movwf	29	;volatile
  1302     009B                     l1729:
  1303                           
  1304                           ;main.c: 147:     BAUD1CON = 0b00001000;
  1305     009B  3008               	movlw	8
  1306     009C  009F               	movwf	31	;volatile
  1307     009D                     l1731:
  1308                           
  1309                           ;main.c: 148:     SP1BRGL = 416 & 0x00FF;
  1310     009D  30A0               	movlw	160
  1311     009E  009B               	movwf	27	;volatile
  1312     009F                     l1733:
  1313                           
  1314                           ;main.c: 149:     SP1BRGH = (416 >> 8) & 0x00FF;
  1315     009F  3001               	movlw	1
  1316     00A0  009C               	movwf	28	;volatile
  1317     00A1                     l1735:
  1318                           
  1319                           ;main.c: 151:     PIR1bits.RCIF = 0;
  1320     00A1  0020               	movlb	0	; select bank0
  1321     00A2  1291               	bcf	17,5	;volatile
  1322     00A3                     l1737:
  1323                           
  1324                           ;main.c: 152:     PIE1bits.RCIE = 1;
  1325     00A3  0021               	movlb	1	; select bank1
  1326     00A4  1691               	bsf	17,5	;volatile
  1327     00A5                     l1739:
  1328                           
  1329                           ;main.c: 153:     INTCONbits.PEIE = 1;
  1330     00A5  170B               	bsf	11,6	;volatile
  1331     00A6                     l1741:
  1332                           
  1333                           ;main.c: 154:     INTCONbits.GIE = 1;
  1334     00A6  178B               	bsf	11,7	;volatile
  1335     00A7                     l1743:
  1336     00A7                     l1745:
  1337                           
  1338                           ;main.c: 158:     motorA(0);
  1339     00A7  3000               	movlw	0
  1340     00A8  00F6               	movwf	motorA@duty
  1341     00A9  00F7               	movwf	motorA@duty+1
  1342     00AA  3185  25D0  3180   	fcall	_motorA
  1343     00AD                     l1747:
  1344                           
  1345                           ;main.c: 159:     motorB(0);
  1346     00AD  3000               	movlw	0
  1347     00AE  00F6               	movwf	motorB@duty
  1348     00AF  00F7               	movwf	motorB@duty+1
  1349     00B0  3185  255D  3180   	fcall	_motorB
  1350     00B3                     l1749:
  1351                           
  1352                           ;main.c: 160:     motorC(0);
  1353     00B3  3000               	movlw	0
  1354     00B4  00F6               	movwf	motorC@duty
  1355     00B5  00F7               	movwf	motorC@duty+1
  1356     00B6  3184  24EA  3180   	fcall	_motorC
  1357     00B9                     l1751:
  1358                           
  1359                           ;main.c: 161:     motorD(0);
  1360     00B9  3000               	movlw	0
  1361     00BA  00F6               	movwf	motorD@duty
  1362     00BB  00F7               	movwf	motorD@duty+1
  1363     00BC  3184  2477  3180   	fcall	_motorD
  1364     00BF                     l1753:
  1365                           
  1366                           ;main.c: 162:     motorE(0);
  1367     00BF  3000               	movlw	0
  1368     00C0  00F6               	movwf	motorE@duty
  1369     00C1  00F7               	movwf	motorE@duty+1
  1370     00C2  3184  2404  3180   	fcall	_motorE
  1371     00C5                     l1755:
  1372                           
  1373                           ;main.c: 163:     motorF(0);
  1374     00C5  3000               	movlw	0
  1375     00C6  00F6               	movwf	motorF@duty
  1376     00C7  00F7               	movwf	motorF@duty+1
  1377     00C8  3183  2391  3180   	fcall	_motorF
  1378     00CB                     l1757:
  1379                           
  1380                           ;main.c: 165:     LEDOFF();
  1381     00CB  3186  267D  3180   	fcall	_LEDOFF
  1382     00CE                     l1759:	
  1383                           ;main.c: 166:     while(SwitchA_Read());
  1384                           
  1385     00CE  3186  2668  3180   	fcall	_SwitchA_Read
  1386     00D1  3A00               	xorlw	0
  1387     00D2  1D03               	skipz
  1388     00D3  28D5               	goto	u661
  1389     00D4  28D6               	goto	u660
  1390     00D5                     u661:
  1391     00D5  28CE               	goto	l1759
  1392     00D6                     u660:
  1393     00D6                     l1761:
  1394                           
  1395                           ;main.c: 167:     LEDON();
  1396     00D6  3186  267A  3180   	fcall	_LEDON
  1397     00D9                     l1763:
  1398                           
  1399                           ;main.c: 171:         sum = 0;
  1400     00D9  01FA               	clrf	main@sum
  1401     00DA  01FB               	clrf	main@sum+1
  1402     00DB                     l1765:
  1403                           
  1404                           ;main.c: 172:         if(Signal1_Read()){
  1405     00DB  3186  266D  3180   	fcall	_Signal1_Read
  1406     00DE  3A00               	xorlw	0
  1407     00DF  1903               	skipnz
  1408     00E0  28E2               	goto	u671
  1409     00E1  28E3               	goto	u670
  1410     00E2                     u671:
  1411     00E2  28E7               	goto	l1769
  1412     00E3                     u670:
  1413     00E3                     l1767:
  1414                           
  1415                           ;main.c: 173:             sum += 1;
  1416     00E3  3001               	movlw	1
  1417     00E4  07FA               	addwf	main@sum,f
  1418     00E5  3000               	movlw	0
  1419     00E6  3DFB               	addwfc	main@sum+1,f
  1420     00E7                     l1769:	
  1421                           ;main.c: 174:         }
  1422                           
  1423                           
  1424                           ;main.c: 177:         if(Signal2_Read()){
  1425     00E7  3186  2662  3180   	fcall	_Signal2_Read
  1426     00EA  3A00               	xorlw	0
  1427     00EB  1903               	skipnz
  1428     00EC  28EE               	goto	u681
  1429     00ED  28EF               	goto	u680
  1430     00EE                     u681:
  1431     00EE  28F3               	goto	l1773
  1432     00EF                     u680:
  1433     00EF                     l1771:
  1434                           
  1435                           ;main.c: 178:             sum += 2;
  1436     00EF  3002               	movlw	2
  1437     00F0  07FA               	addwf	main@sum,f
  1438     00F1  3000               	movlw	0
  1439     00F2  3DFB               	addwfc	main@sum+1,f
  1440     00F3                     l1773:	
  1441                           ;main.c: 179:         }
  1442                           
  1443                           
  1444                           ;main.c: 182:         if(Signal3_Read()){
  1445     00F3  3186  2676  3180   	fcall	_Signal3_Read
  1446     00F6  3A00               	xorlw	0
  1447     00F7  1903               	skipnz
  1448     00F8  28FA               	goto	u691
  1449     00F9  28FB               	goto	u690
  1450     00FA                     u691:
  1451     00FA  28FF               	goto	l1777
  1452     00FB                     u690:
  1453     00FB                     l1775:
  1454                           
  1455                           ;main.c: 183:             sum += 4;
  1456     00FB  3004               	movlw	4
  1457     00FC  07FA               	addwf	main@sum,f
  1458     00FD  3000               	movlw	0
  1459     00FE  3DFB               	addwfc	main@sum+1,f
  1460     00FF                     l1777:	
  1461                           ;main.c: 184:         }
  1462                           
  1463                           
  1464                           ;main.c: 187:         if(Signal4_Read()){
  1465     00FF  3186  2672  3180   	fcall	_Signal4_Read
  1466     0102  3A00               	xorlw	0
  1467     0103  1903               	skipnz
  1468     0104  2906               	goto	u701
  1469     0105  2907               	goto	u700
  1470     0106                     u701:
  1471     0106  2B5B               	goto	l1815
  1472     0107                     u700:
  1473     0107                     l1779:
  1474                           
  1475                           ;main.c: 188:             sum += 8;
  1476     0107  3008               	movlw	8
  1477     0108  07FA               	addwf	main@sum,f
  1478     0109  3000               	movlw	0
  1479     010A  3DFB               	addwfc	main@sum+1,f
  1480                           
  1481                           ;main.c: 189:         }
  1482     010B  2B5B               	goto	l1815
  1483     010C                     l1781:
  1484                           
  1485                           ;main.c: 194:                 motorA(0);
  1486     010C  3000               	movlw	0
  1487     010D  00F6               	movwf	motorA@duty
  1488     010E  00F7               	movwf	motorA@duty+1
  1489     010F  3185  25D0  3180   	fcall	_motorA
  1490                           
  1491                           ;main.c: 195:                 motorB(0);
  1492     0112  3000               	movlw	0
  1493     0113  00F6               	movwf	motorB@duty
  1494     0114  00F7               	movwf	motorB@duty+1
  1495     0115  3185  255D  3180   	fcall	_motorB
  1496                           
  1497                           ;main.c: 196:                 motorC(0);
  1498     0118  3000               	movlw	0
  1499     0119  00F6               	movwf	motorC@duty
  1500     011A  00F7               	movwf	motorC@duty+1
  1501     011B  3184  24EA  3180   	fcall	_motorC
  1502                           
  1503                           ;main.c: 197:                 motorD(0);
  1504     011E  3000               	movlw	0
  1505     011F  00F6               	movwf	motorD@duty
  1506     0120  00F7               	movwf	motorD@duty+1
  1507     0121  3184  2477  3180   	fcall	_motorD
  1508                           
  1509                           ;main.c: 198:                 motorE(0);
  1510     0124  3000               	movlw	0
  1511     0125  00F6               	movwf	motorE@duty
  1512     0126  00F7               	movwf	motorE@duty+1
  1513     0127  3184  2404  3180   	fcall	_motorE
  1514                           
  1515                           ;main.c: 199:                 motorF(600);
  1516     012A  3058               	movlw	88
  1517     012B  00F6               	movwf	motorF@duty
  1518     012C  3002               	movlw	2
  1519     012D  00F7               	movwf	motorF@duty+1
  1520     012E  3183  2391  3180   	fcall	_motorF
  1521                           
  1522                           ;main.c: 200:                 break;
  1523     0131  28D9               	goto	l1763
  1524     0132                     l1783:
  1525                           
  1526                           ;main.c: 202:                 motorA(0);
  1527     0132  3000               	movlw	0
  1528     0133  00F6               	movwf	motorA@duty
  1529     0134  00F7               	movwf	motorA@duty+1
  1530     0135  3185  25D0  3180   	fcall	_motorA
  1531                           
  1532                           ;main.c: 203:                 motorB(0);
  1533     0138  3000               	movlw	0
  1534     0139  00F6               	movwf	motorB@duty
  1535     013A  00F7               	movwf	motorB@duty+1
  1536     013B  3185  255D  3180   	fcall	_motorB
  1537                           
  1538                           ;main.c: 204:                 motorC(0);
  1539     013E  3000               	movlw	0
  1540     013F  00F6               	movwf	motorC@duty
  1541     0140  00F7               	movwf	motorC@duty+1
  1542     0141  3184  24EA  3180   	fcall	_motorC
  1543                           
  1544                           ;main.c: 205:                 motorD(0);
  1545     0144  3000               	movlw	0
  1546     0145  00F6               	movwf	motorD@duty
  1547     0146  00F7               	movwf	motorD@duty+1
  1548     0147  3184  2477  3180   	fcall	_motorD
  1549                           
  1550                           ;main.c: 206:                 motorE(600);
  1551     014A  3058               	movlw	88
  1552     014B  00F6               	movwf	motorE@duty
  1553     014C  3002               	movlw	2
  1554     014D  00F7               	movwf	motorE@duty+1
  1555     014E  3184  2404  3180   	fcall	_motorE
  1556                           
  1557                           ;main.c: 207:                 motorF(0);
  1558     0151  3000               	movlw	0
  1559     0152  00F6               	movwf	motorF@duty
  1560     0153  00F7               	movwf	motorF@duty+1
  1561     0154  3183  2391  3180   	fcall	_motorF
  1562                           
  1563                           ;main.c: 208:                 break;
  1564     0157  28D9               	goto	l1763
  1565     0158                     l1785:
  1566                           
  1567                           ;main.c: 210:                 motorA(0);
  1568     0158  3000               	movlw	0
  1569     0159  00F6               	movwf	motorA@duty
  1570     015A  00F7               	movwf	motorA@duty+1
  1571     015B  3185  25D0  3180   	fcall	_motorA
  1572                           
  1573                           ;main.c: 211:                 motorB(0);
  1574     015E  3000               	movlw	0
  1575     015F  00F6               	movwf	motorB@duty
  1576     0160  00F7               	movwf	motorB@duty+1
  1577     0161  3185  255D  3180   	fcall	_motorB
  1578                           
  1579                           ;main.c: 212:                 motorC(0);
  1580     0164  3000               	movlw	0
  1581     0165  00F6               	movwf	motorC@duty
  1582     0166  00F7               	movwf	motorC@duty+1
  1583     0167  3184  24EA  3180   	fcall	_motorC
  1584                           
  1585                           ;main.c: 213:                 motorD(0);
  1586     016A  3000               	movlw	0
  1587     016B  00F6               	movwf	motorD@duty
  1588     016C  00F7               	movwf	motorD@duty+1
  1589     016D  3184  2477  3180   	fcall	_motorD
  1590                           
  1591                           ;main.c: 214:                 motorE(-600);
  1592     0170  30A8               	movlw	168
  1593     0171  00F6               	movwf	motorE@duty
  1594     0172  30FD               	movlw	253
  1595     0173  00F7               	movwf	motorE@duty+1
  1596     0174  3184  2404  3180   	fcall	_motorE
  1597                           
  1598                           ;main.c: 215:                 motorF(0);
  1599     0177  3000               	movlw	0
  1600     0178  00F6               	movwf	motorF@duty
  1601     0179  00F7               	movwf	motorF@duty+1
  1602     017A  3183  2391  3180   	fcall	_motorF
  1603                           
  1604                           ;main.c: 216:                 break;
  1605     017D  28D9               	goto	l1763
  1606     017E                     l1787:
  1607                           
  1608                           ;main.c: 218:                 motorA(0);
  1609     017E  3000               	movlw	0
  1610     017F  00F6               	movwf	motorA@duty
  1611     0180  00F7               	movwf	motorA@duty+1
  1612     0181  3185  25D0  3180   	fcall	_motorA
  1613                           
  1614                           ;main.c: 219:                 motorB(0);
  1615     0184  3000               	movlw	0
  1616     0185  00F6               	movwf	motorB@duty
  1617     0186  00F7               	movwf	motorB@duty+1
  1618     0187  3185  255D  3180   	fcall	_motorB
  1619                           
  1620                           ;main.c: 220:                 motorC(0);
  1621     018A  3000               	movlw	0
  1622     018B  00F6               	movwf	motorC@duty
  1623     018C  00F7               	movwf	motorC@duty+1
  1624     018D  3184  24EA  3180   	fcall	_motorC
  1625                           
  1626                           ;main.c: 221:                 motorD(0);
  1627     0190  3000               	movlw	0
  1628     0191  00F6               	movwf	motorD@duty
  1629     0192  00F7               	movwf	motorD@duty+1
  1630     0193  3184  2477  3180   	fcall	_motorD
  1631                           
  1632                           ;main.c: 222:                 motorE(0);
  1633     0196  3000               	movlw	0
  1634     0197  00F6               	movwf	motorE@duty
  1635     0198  00F7               	movwf	motorE@duty+1
  1636     0199  3184  2404  3180   	fcall	_motorE
  1637                           
  1638                           ;main.c: 223:                 motorF(-600);
  1639     019C  30A8               	movlw	168
  1640     019D  00F6               	movwf	motorF@duty
  1641     019E  30FD               	movlw	253
  1642     019F  00F7               	movwf	motorF@duty+1
  1643     01A0  3183  2391  3180   	fcall	_motorF
  1644                           
  1645                           ;main.c: 224:                 break;
  1646     01A3  28D9               	goto	l1763
  1647     01A4                     l1789:
  1648                           
  1649                           ;main.c: 226:                 motorA(-500);
  1650     01A4  300C               	movlw	12
  1651     01A5  00F6               	movwf	motorA@duty
  1652     01A6  30FE               	movlw	254
  1653     01A7  00F7               	movwf	motorA@duty+1
  1654     01A8  3185  25D0  3180   	fcall	_motorA
  1655                           
  1656                           ;main.c: 227:                 motorB(0);
  1657     01AB  3000               	movlw	0
  1658     01AC  00F6               	movwf	motorB@duty
  1659     01AD  00F7               	movwf	motorB@duty+1
  1660     01AE  3185  255D  3180   	fcall	_motorB
  1661                           
  1662                           ;main.c: 228:                 motorC(0);
  1663     01B1  3000               	movlw	0
  1664     01B2  00F6               	movwf	motorC@duty
  1665     01B3  00F7               	movwf	motorC@duty+1
  1666     01B4  3184  24EA  3180   	fcall	_motorC
  1667                           
  1668                           ;main.c: 229:                 motorD(500);
  1669     01B7  30F4               	movlw	244
  1670     01B8  00F6               	movwf	motorD@duty
  1671     01B9  3001               	movlw	1
  1672     01BA  00F7               	movwf	motorD@duty+1
  1673     01BB  3184  2477  3180   	fcall	_motorD
  1674                           
  1675                           ;main.c: 230:                 motorE(0);
  1676     01BE  3000               	movlw	0
  1677     01BF  00F6               	movwf	motorE@duty
  1678     01C0  00F7               	movwf	motorE@duty+1
  1679     01C1  3184  2404  3180   	fcall	_motorE
  1680                           
  1681                           ;main.c: 231:                 motorF(0);
  1682     01C4  3000               	movlw	0
  1683     01C5  00F6               	movwf	motorF@duty
  1684     01C6  00F7               	movwf	motorF@duty+1
  1685     01C7  3183  2391  3180   	fcall	_motorF
  1686                           
  1687                           ;main.c: 232:                 break;
  1688     01CA  28D9               	goto	l1763
  1689     01CB                     l1791:
  1690                           
  1691                           ;main.c: 234:                 motorA(0);
  1692     01CB  3000               	movlw	0
  1693     01CC  00F6               	movwf	motorA@duty
  1694     01CD  00F7               	movwf	motorA@duty+1
  1695     01CE  3185  25D0  3180   	fcall	_motorA
  1696                           
  1697                           ;main.c: 235:                 motorB(500);
  1698     01D1  30F4               	movlw	244
  1699     01D2  00F6               	movwf	motorB@duty
  1700     01D3  3001               	movlw	1
  1701     01D4  00F7               	movwf	motorB@duty+1
  1702     01D5  3185  255D  3180   	fcall	_motorB
  1703                           
  1704                           ;main.c: 236:                 motorC(-500);
  1705     01D8  300C               	movlw	12
  1706     01D9  00F6               	movwf	motorC@duty
  1707     01DA  30FE               	movlw	254
  1708     01DB  00F7               	movwf	motorC@duty+1
  1709     01DC  3184  24EA  3180   	fcall	_motorC
  1710                           
  1711                           ;main.c: 237:                 motorD(0);
  1712     01DF  3000               	movlw	0
  1713     01E0  00F6               	movwf	motorD@duty
  1714     01E1  00F7               	movwf	motorD@duty+1
  1715     01E2  3184  2477  3180   	fcall	_motorD
  1716                           
  1717                           ;main.c: 238:                 motorE(0);
  1718     01E5  3000               	movlw	0
  1719     01E6  00F6               	movwf	motorE@duty
  1720     01E7  00F7               	movwf	motorE@duty+1
  1721     01E8  3184  2404  3180   	fcall	_motorE
  1722                           
  1723                           ;main.c: 239:                 motorF(0);
  1724     01EB  3000               	movlw	0
  1725     01EC  00F6               	movwf	motorF@duty
  1726     01ED  00F7               	movwf	motorF@duty+1
  1727     01EE  3183  2391  3180   	fcall	_motorF
  1728                           
  1729                           ;main.c: 240:                 break;
  1730     01F1  28D9               	goto	l1763
  1731     01F2                     l1793:
  1732                           
  1733                           ;main.c: 242:                 motorA(0);
  1734     01F2  3000               	movlw	0
  1735     01F3  00F6               	movwf	motorA@duty
  1736     01F4  00F7               	movwf	motorA@duty+1
  1737     01F5  3185  25D0  3180   	fcall	_motorA
  1738                           
  1739                           ;main.c: 243:                 motorB(-500);
  1740     01F8  300C               	movlw	12
  1741     01F9  00F6               	movwf	motorB@duty
  1742     01FA  30FE               	movlw	254
  1743     01FB  00F7               	movwf	motorB@duty+1
  1744     01FC  3185  255D  3180   	fcall	_motorB
  1745                           
  1746                           ;main.c: 244:                 motorC(500);
  1747     01FF  30F4               	movlw	244
  1748     0200  00F6               	movwf	motorC@duty
  1749     0201  3001               	movlw	1
  1750     0202  00F7               	movwf	motorC@duty+1
  1751     0203  3184  24EA  3180   	fcall	_motorC
  1752                           
  1753                           ;main.c: 245:                 motorD(0);
  1754     0206  3000               	movlw	0
  1755     0207  00F6               	movwf	motorD@duty
  1756     0208  00F7               	movwf	motorD@duty+1
  1757     0209  3184  2477  3180   	fcall	_motorD
  1758                           
  1759                           ;main.c: 246:                 motorE(0);
  1760     020C  3000               	movlw	0
  1761     020D  00F6               	movwf	motorE@duty
  1762     020E  00F7               	movwf	motorE@duty+1
  1763     020F  3184  2404  3180   	fcall	_motorE
  1764                           
  1765                           ;main.c: 247:                 motorF(0);
  1766     0212  3000               	movlw	0
  1767     0213  00F6               	movwf	motorF@duty
  1768     0214  00F7               	movwf	motorF@duty+1
  1769     0215  3183  2391  3180   	fcall	_motorF
  1770                           
  1771                           ;main.c: 248:                 break;
  1772     0218  28D9               	goto	l1763
  1773     0219                     l1795:
  1774                           
  1775                           ;main.c: 250:                 motorA(500);
  1776     0219  30F4               	movlw	244
  1777     021A  00F6               	movwf	motorA@duty
  1778     021B  3001               	movlw	1
  1779     021C  00F7               	movwf	motorA@duty+1
  1780     021D  3185  25D0  3180   	fcall	_motorA
  1781                           
  1782                           ;main.c: 251:                 motorB(0);
  1783     0220  3000               	movlw	0
  1784     0221  00F6               	movwf	motorB@duty
  1785     0222  00F7               	movwf	motorB@duty+1
  1786     0223  3185  255D  3180   	fcall	_motorB
  1787                           
  1788                           ;main.c: 252:                 motorC(0);
  1789     0226  3000               	movlw	0
  1790     0227  00F6               	movwf	motorC@duty
  1791     0228  00F7               	movwf	motorC@duty+1
  1792     0229  3184  24EA  3180   	fcall	_motorC
  1793                           
  1794                           ;main.c: 253:                 motorD(-500);
  1795     022C  300C               	movlw	12
  1796     022D  00F6               	movwf	motorD@duty
  1797     022E  30FE               	movlw	254
  1798     022F  00F7               	movwf	motorD@duty+1
  1799     0230  3184  2477  3180   	fcall	_motorD
  1800                           
  1801                           ;main.c: 254:                 motorE(0);
  1802     0233  3000               	movlw	0
  1803     0234  00F6               	movwf	motorE@duty
  1804     0235  00F7               	movwf	motorE@duty+1
  1805     0236  3184  2404  3180   	fcall	_motorE
  1806                           
  1807                           ;main.c: 255:                 motorF(0);
  1808     0239  3000               	movlw	0
  1809     023A  00F6               	movwf	motorF@duty
  1810     023B  00F7               	movwf	motorF@duty+1
  1811     023C  3183  2391  3180   	fcall	_motorF
  1812                           
  1813                           ;main.c: 256:                 break;
  1814     023F  28D9               	goto	l1763
  1815     0240                     l1797:
  1816                           
  1817                           ;main.c: 258:                 motorA(-500);
  1818     0240  300C               	movlw	12
  1819     0241  00F6               	movwf	motorA@duty
  1820     0242  30FE               	movlw	254
  1821     0243  00F7               	movwf	motorA@duty+1
  1822     0244  3185  25D0  3180   	fcall	_motorA
  1823                           
  1824                           ;main.c: 259:                 motorB(500);
  1825     0247  30F4               	movlw	244
  1826     0248  00F6               	movwf	motorB@duty
  1827     0249  3001               	movlw	1
  1828     024A  00F7               	movwf	motorB@duty+1
  1829     024B  3185  255D  3180   	fcall	_motorB
  1830                           
  1831                           ;main.c: 260:                 motorC(-500);
  1832     024E  300C               	movlw	12
  1833     024F  00F6               	movwf	motorC@duty
  1834     0250  30FE               	movlw	254
  1835     0251  00F7               	movwf	motorC@duty+1
  1836     0252  3184  24EA  3180   	fcall	_motorC
  1837                           
  1838                           ;main.c: 261:                 motorD(500);
  1839     0255  30F4               	movlw	244
  1840     0256  00F6               	movwf	motorD@duty
  1841     0257  3001               	movlw	1
  1842     0258  00F7               	movwf	motorD@duty+1
  1843     0259  3184  2477  3180   	fcall	_motorD
  1844                           
  1845                           ;main.c: 262:                 motorE(0);
  1846     025C  3000               	movlw	0
  1847     025D  00F6               	movwf	motorE@duty
  1848     025E  00F7               	movwf	motorE@duty+1
  1849     025F  3184  2404  3180   	fcall	_motorE
  1850                           
  1851                           ;main.c: 263:                 motorF(0);
  1852     0262  3000               	movlw	0
  1853     0263  00F6               	movwf	motorF@duty
  1854     0264  00F7               	movwf	motorF@duty+1
  1855     0265  3183  2391  3180   	fcall	_motorF
  1856                           
  1857                           ;main.c: 264:                 break;
  1858     0268  28D9               	goto	l1763
  1859     0269                     l1799:
  1860                           
  1861                           ;main.c: 266:                 motorA(500);
  1862     0269  30F4               	movlw	244
  1863     026A  00F6               	movwf	motorA@duty
  1864     026B  3001               	movlw	1
  1865     026C  00F7               	movwf	motorA@duty+1
  1866     026D  3185  25D0  3180   	fcall	_motorA
  1867                           
  1868                           ;main.c: 267:                 motorB(500);
  1869     0270  30F4               	movlw	244
  1870     0271  00F6               	movwf	motorB@duty
  1871     0272  3001               	movlw	1
  1872     0273  00F7               	movwf	motorB@duty+1
  1873     0274  3185  255D  3180   	fcall	_motorB
  1874                           
  1875                           ;main.c: 268:                 motorC(-500);
  1876     0277  300C               	movlw	12
  1877     0278  00F6               	movwf	motorC@duty
  1878     0279  30FE               	movlw	254
  1879     027A  00F7               	movwf	motorC@duty+1
  1880     027B  3184  24EA  3180   	fcall	_motorC
  1881                           
  1882                           ;main.c: 269:                 motorD(-500);
  1883     027E  300C               	movlw	12
  1884     027F  00F6               	movwf	motorD@duty
  1885     0280  30FE               	movlw	254
  1886     0281  00F7               	movwf	motorD@duty+1
  1887     0282  3184  2477  3180   	fcall	_motorD
  1888                           
  1889                           ;main.c: 270:                 motorE(0);
  1890     0285  3000               	movlw	0
  1891     0286  00F6               	movwf	motorE@duty
  1892     0287  00F7               	movwf	motorE@duty+1
  1893     0288  3184  2404  3180   	fcall	_motorE
  1894                           
  1895                           ;main.c: 271:                 motorF(0);
  1896     028B  3000               	movlw	0
  1897     028C  00F6               	movwf	motorF@duty
  1898     028D  00F7               	movwf	motorF@duty+1
  1899     028E  3183  2391  3180   	fcall	_motorF
  1900                           
  1901                           ;main.c: 272:                 break;
  1902     0291  28D9               	goto	l1763
  1903     0292                     l1801:
  1904                           
  1905                           ;main.c: 274:                 motorA(-500);
  1906     0292  300C               	movlw	12
  1907     0293  00F6               	movwf	motorA@duty
  1908     0294  30FE               	movlw	254
  1909     0295  00F7               	movwf	motorA@duty+1
  1910     0296  3185  25D0  3180   	fcall	_motorA
  1911                           
  1912                           ;main.c: 275:                 motorB(-500);
  1913     0299  300C               	movlw	12
  1914     029A  00F6               	movwf	motorB@duty
  1915     029B  30FE               	movlw	254
  1916     029C  00F7               	movwf	motorB@duty+1
  1917     029D  3185  255D  3180   	fcall	_motorB
  1918                           
  1919                           ;main.c: 276:                 motorC(500);
  1920     02A0  30F4               	movlw	244
  1921     02A1  00F6               	movwf	motorC@duty
  1922     02A2  3001               	movlw	1
  1923     02A3  00F7               	movwf	motorC@duty+1
  1924     02A4  3184  24EA  3180   	fcall	_motorC
  1925                           
  1926                           ;main.c: 277:                 motorD(500);
  1927     02A7  30F4               	movlw	244
  1928     02A8  00F6               	movwf	motorD@duty
  1929     02A9  3001               	movlw	1
  1930     02AA  00F7               	movwf	motorD@duty+1
  1931     02AB  3184  2477  3180   	fcall	_motorD
  1932                           
  1933                           ;main.c: 278:                 motorE(0);
  1934     02AE  3000               	movlw	0
  1935     02AF  00F6               	movwf	motorE@duty
  1936     02B0  00F7               	movwf	motorE@duty+1
  1937     02B1  3184  2404  3180   	fcall	_motorE
  1938                           
  1939                           ;main.c: 279:                 motorF(0);
  1940     02B4  3000               	movlw	0
  1941     02B5  00F6               	movwf	motorF@duty
  1942     02B6  00F7               	movwf	motorF@duty+1
  1943     02B7  3183  2391  3180   	fcall	_motorF
  1944                           
  1945                           ;main.c: 280:                 break;
  1946     02BA  28D9               	goto	l1763
  1947     02BB                     l1803:
  1948                           
  1949                           ;main.c: 282:                 motorA(500);
  1950     02BB  30F4               	movlw	244
  1951     02BC  00F6               	movwf	motorA@duty
  1952     02BD  3001               	movlw	1
  1953     02BE  00F7               	movwf	motorA@duty+1
  1954     02BF  3185  25D0  3180   	fcall	_motorA
  1955                           
  1956                           ;main.c: 283:                 motorB(-500);
  1957     02C2  300C               	movlw	12
  1958     02C3  00F6               	movwf	motorB@duty
  1959     02C4  30FE               	movlw	254
  1960     02C5  00F7               	movwf	motorB@duty+1
  1961     02C6  3185  255D  3180   	fcall	_motorB
  1962                           
  1963                           ;main.c: 284:                 motorC(500);
  1964     02C9  30F4               	movlw	244
  1965     02CA  00F6               	movwf	motorC@duty
  1966     02CB  3001               	movlw	1
  1967     02CC  00F7               	movwf	motorC@duty+1
  1968     02CD  3184  24EA  3180   	fcall	_motorC
  1969                           
  1970                           ;main.c: 285:                 motorD(-500);
  1971     02D0  300C               	movlw	12
  1972     02D1  00F6               	movwf	motorD@duty
  1973     02D2  30FE               	movlw	254
  1974     02D3  00F7               	movwf	motorD@duty+1
  1975     02D4  3184  2477  3180   	fcall	_motorD
  1976                           
  1977                           ;main.c: 286:                 motorE(0);
  1978     02D7  3000               	movlw	0
  1979     02D8  00F6               	movwf	motorE@duty
  1980     02D9  00F7               	movwf	motorE@duty+1
  1981     02DA  3184  2404  3180   	fcall	_motorE
  1982                           
  1983                           ;main.c: 287:                 motorF(0);
  1984     02DD  3000               	movlw	0
  1985     02DE  00F6               	movwf	motorF@duty
  1986     02DF  00F7               	movwf	motorF@duty+1
  1987     02E0  3183  2391  3180   	fcall	_motorF
  1988                           
  1989                           ;main.c: 288:                 break;
  1990     02E3  28D9               	goto	l1763
  1991     02E4                     l1805:
  1992                           
  1993                           ;main.c: 290:                 motorA(-500);
  1994     02E4  300C               	movlw	12
  1995     02E5  00F6               	movwf	motorA@duty
  1996     02E6  30FE               	movlw	254
  1997     02E7  00F7               	movwf	motorA@duty+1
  1998     02E8  3185  25D0  3180   	fcall	_motorA
  1999                           
  2000                           ;main.c: 291:                 motorB(-500);
  2001     02EB  300C               	movlw	12
  2002     02EC  00F6               	movwf	motorB@duty
  2003     02ED  30FE               	movlw	254
  2004     02EE  00F7               	movwf	motorB@duty+1
  2005     02EF  3185  255D  3180   	fcall	_motorB
  2006                           
  2007                           ;main.c: 292:                 motorC(-500);
  2008     02F2  300C               	movlw	12
  2009     02F3  00F6               	movwf	motorC@duty
  2010     02F4  30FE               	movlw	254
  2011     02F5  00F7               	movwf	motorC@duty+1
  2012     02F6  3184  24EA  3180   	fcall	_motorC
  2013                           
  2014                           ;main.c: 293:                 motorD(-500);
  2015     02F9  300C               	movlw	12
  2016     02FA  00F6               	movwf	motorD@duty
  2017     02FB  30FE               	movlw	254
  2018     02FC  00F7               	movwf	motorD@duty+1
  2019     02FD  3184  2477  3180   	fcall	_motorD
  2020                           
  2021                           ;main.c: 294:                 motorE(0);
  2022     0300  3000               	movlw	0
  2023     0301  00F6               	movwf	motorE@duty
  2024     0302  00F7               	movwf	motorE@duty+1
  2025     0303  3184  2404  3180   	fcall	_motorE
  2026                           
  2027                           ;main.c: 295:                 motorF(0);
  2028     0306  3000               	movlw	0
  2029     0307  00F6               	movwf	motorF@duty
  2030     0308  00F7               	movwf	motorF@duty+1
  2031     0309  3183  2391  3180   	fcall	_motorF
  2032                           
  2033                           ;main.c: 296:                 break;
  2034     030C  28D9               	goto	l1763
  2035     030D                     l1807:
  2036                           
  2037                           ;main.c: 298:                 motorA(500);
  2038     030D  30F4               	movlw	244
  2039     030E  00F6               	movwf	motorA@duty
  2040     030F  3001               	movlw	1
  2041     0310  00F7               	movwf	motorA@duty+1
  2042     0311  3185  25D0  3180   	fcall	_motorA
  2043                           
  2044                           ;main.c: 299:                 motorB(500);
  2045     0314  30F4               	movlw	244
  2046     0315  00F6               	movwf	motorB@duty
  2047     0316  3001               	movlw	1
  2048     0317  00F7               	movwf	motorB@duty+1
  2049     0318  3185  255D  3180   	fcall	_motorB
  2050                           
  2051                           ;main.c: 300:                 motorC(500);
  2052     031B  30F4               	movlw	244
  2053     031C  00F6               	movwf	motorC@duty
  2054     031D  3001               	movlw	1
  2055     031E  00F7               	movwf	motorC@duty+1
  2056     031F  3184  24EA  3180   	fcall	_motorC
  2057                           
  2058                           ;main.c: 301:                 motorD(500);
  2059     0322  30F4               	movlw	244
  2060     0323  00F6               	movwf	motorD@duty
  2061     0324  3001               	movlw	1
  2062     0325  00F7               	movwf	motorD@duty+1
  2063     0326  3184  2477  3180   	fcall	_motorD
  2064                           
  2065                           ;main.c: 302:                 motorE(0);
  2066     0329  3000               	movlw	0
  2067     032A  00F6               	movwf	motorE@duty
  2068     032B  00F7               	movwf	motorE@duty+1
  2069     032C  3184  2404  3180   	fcall	_motorE
  2070                           
  2071                           ;main.c: 303:                 motorF(0);
  2072     032F  3000               	movlw	0
  2073     0330  00F6               	movwf	motorF@duty
  2074     0331  00F7               	movwf	motorF@duty+1
  2075     0332  3183  2391  3180   	fcall	_motorF
  2076                           
  2077                           ;main.c: 304:                 break;
  2078     0335  28D9               	goto	l1763
  2079     0336                     l1809:
  2080                           
  2081                           ;main.c: 306:                 motorA(0);
  2082     0336  3000               	movlw	0
  2083     0337  00F6               	movwf	motorA@duty
  2084     0338  00F7               	movwf	motorA@duty+1
  2085     0339  3185  25D0  3180   	fcall	_motorA
  2086                           
  2087                           ;main.c: 307:                 motorB(0);
  2088     033C  3000               	movlw	0
  2089     033D  00F6               	movwf	motorB@duty
  2090     033E  00F7               	movwf	motorB@duty+1
  2091     033F  3185  255D  3180   	fcall	_motorB
  2092                           
  2093                           ;main.c: 308:                 motorC(0);
  2094     0342  3000               	movlw	0
  2095     0343  00F6               	movwf	motorC@duty
  2096     0344  00F7               	movwf	motorC@duty+1
  2097     0345  3184  24EA  3180   	fcall	_motorC
  2098                           
  2099                           ;main.c: 309:                 motorD(0);
  2100     0348  3000               	movlw	0
  2101     0349  00F6               	movwf	motorD@duty
  2102     034A  00F7               	movwf	motorD@duty+1
  2103     034B  3184  2477  3180   	fcall	_motorD
  2104                           
  2105                           ;main.c: 310:                 motorE(0);
  2106     034E  3000               	movlw	0
  2107     034F  00F6               	movwf	motorE@duty
  2108     0350  00F7               	movwf	motorE@duty+1
  2109     0351  3184  2404  3180   	fcall	_motorE
  2110                           
  2111                           ;main.c: 311:                 motorF(0);
  2112     0354  3000               	movlw	0
  2113     0355  00F6               	movwf	motorF@duty
  2114     0356  00F7               	movwf	motorF@duty+1
  2115     0357  3183  2391  3180   	fcall	_motorF
  2116                           
  2117                           ;main.c: 312:                 break;
  2118     035A  28D9               	goto	l1763
  2119     035B                     l1815:
  2120                           
  2121                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2122                           ; Switch size 1, requested type "simple"
  2123                           ; Number of cases is 1, Range of values is 0 to 0
  2124                           ; switch strategies available:
  2125                           ; Name         Instructions Cycles
  2126                           ; simple_byte            4     3 (average)
  2127                           ; direct_byte            8     6 (fixed)
  2128                           ; jumptable            260     6 (fixed)
  2129                           ;	Chosen strategy is simple_byte
  2130     035B  087B               	movf	main@sum+1,w
  2131     035C  3A00               	xorlw	0	; case 0
  2132     035D  1903               	skipnz
  2133     035E  2B60               	goto	l1853
  2134     035F  2B36               	goto	l1809
  2135     0360                     l1853:
  2136                           
  2137                           ; Switch size 1, requested type "simple"
  2138                           ; Number of cases is 15, Range of values is 0 to 14
  2139                           ; switch strategies available:
  2140                           ; Name         Instructions Cycles
  2141                           ; direct_byte           36     6 (fixed)
  2142                           ; simple_byte           46    24 (average)
  2143                           ; jumptable            260     6 (fixed)
  2144                           ;	Chosen strategy is simple_byte
  2145     0360  087A               	movf	main@sum,w
  2146     0361  3A00               	xorlw	0	; case 0
  2147     0362  1903               	skipnz
  2148     0363  290C               	goto	l1781
  2149     0364  3A01               	xorlw	1	; case 1
  2150     0365  1903               	skipnz
  2151     0366  2932               	goto	l1783
  2152     0367  3A03               	xorlw	3	; case 2
  2153     0368  1903               	skipnz
  2154     0369  2958               	goto	l1785
  2155     036A  3A01               	xorlw	1	; case 3
  2156     036B  1903               	skipnz
  2157     036C  297E               	goto	l1787
  2158     036D  3A07               	xorlw	7	; case 4
  2159     036E  1903               	skipnz
  2160     036F  29A4               	goto	l1789
  2161     0370  3A01               	xorlw	1	; case 5
  2162     0371  1903               	skipnz
  2163     0372  29CB               	goto	l1791
  2164     0373  3A03               	xorlw	3	; case 6
  2165     0374  1903               	skipnz
  2166     0375  29F2               	goto	l1793
  2167     0376  3A01               	xorlw	1	; case 7
  2168     0377  1903               	skipnz
  2169     0378  2A19               	goto	l1795
  2170     0379  3A0F               	xorlw	15	; case 8
  2171     037A  1903               	skipnz
  2172     037B  2A40               	goto	l1797
  2173     037C  3A01               	xorlw	1	; case 9
  2174     037D  1903               	skipnz
  2175     037E  2A69               	goto	l1799
  2176     037F  3A03               	xorlw	3	; case 10
  2177     0380  1903               	skipnz
  2178     0381  2A92               	goto	l1801
  2179     0382  3A01               	xorlw	1	; case 11
  2180     0383  1903               	skipnz
  2181     0384  2ABB               	goto	l1803
  2182     0385  3A07               	xorlw	7	; case 12
  2183     0386  1903               	skipnz
  2184     0387  2AE4               	goto	l1805
  2185     0388  3A01               	xorlw	1	; case 13
  2186     0389  1903               	skipnz
  2187     038A  2B0D               	goto	l1807
  2188     038B  3A03               	xorlw	3	; case 14
  2189     038C  1903               	skipnz
  2190     038D  2B36               	goto	l1809
  2191     038E  2B36               	goto	l1809
  2192     038F  3180  281D         	ljmp	start
  2193     0391                     __end_of_main:
  2194                           
  2195                           	psect	text1
  2196     0391                     __ptext1:	
  2197 ;; *************** function _motorF *****************
  2198 ;; Defined at:
  2199 ;;		line 527 in file "main.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  duty            2    6[COMMON] int 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;		None
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0, pclath, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2215 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2216 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2217 ;;Total ram usage:        4 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; Hardware stack levels required when called: 2
  2220 ;; This function calls:
  2221 ;;		___wmul
  2222 ;; This function is called by:
  2223 ;;		_main
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227     0391                     _motorF:	
  2228                           ;psect for function _motorF
  2229                           
  2230     0391                     l1593:	
  2231                           ;incstack = 0
  2232                           ; Regs used in _motorF: [wreg+status,2+status,0+pclath+cstack]
  2233                           
  2234                           
  2235                           ;main.c: 529:     duty > 600 ? (duty = 600) : duty;
  2236     0391  0877               	movf	motorF@duty+1,w
  2237     0392  3A80               	xorlw	128
  2238     0393  00F8               	movwf	??_motorF
  2239     0394  3082               	movlw	130
  2240     0395  0278               	subwf	??_motorF,w
  2241     0396  1D03               	skipz
  2242     0397  2B9A               	goto	u625
  2243     0398  3059               	movlw	89
  2244     0399  0276               	subwf	motorF@duty,w
  2245     039A                     u625:
  2246     039A  1C03               	skipc
  2247     039B  2B9D               	goto	u621
  2248     039C  2B9E               	goto	u620
  2249     039D                     u621:
  2250     039D  2BA2               	goto	l1597
  2251     039E                     u620:
  2252     039E                     l1595:
  2253     039E  3058               	movlw	88
  2254     039F  00F6               	movwf	motorF@duty
  2255     03A0  3002               	movlw	2
  2256     03A1  00F7               	movwf	motorF@duty+1
  2257     03A2                     l1597:
  2258                           
  2259                           ;main.c: 530:     duty < -600 ? (duty = 600) : duty;
  2260     03A2  0877               	movf	motorF@duty+1,w
  2261     03A3  3A80               	xorlw	128
  2262     03A4  00F8               	movwf	??_motorF
  2263     03A5  307D               	movlw	125
  2264     03A6  0278               	subwf	??_motorF,w
  2265     03A7  1D03               	skipz
  2266     03A8  2BAB               	goto	u635
  2267     03A9  30A8               	movlw	168
  2268     03AA  0276               	subwf	motorF@duty,w
  2269     03AB                     u635:
  2270     03AB  1803               	skipnc
  2271     03AC  2BAE               	goto	u631
  2272     03AD  2BAF               	goto	u630
  2273     03AE                     u631:
  2274     03AE  2BB3               	goto	l1601
  2275     03AF                     u630:
  2276     03AF                     l1599:
  2277     03AF  3058               	movlw	88
  2278     03B0  00F6               	movwf	motorF@duty
  2279     03B1  3002               	movlw	2
  2280     03B2  00F7               	movwf	motorF@duty+1
  2281     03B3                     l1601:
  2282                           
  2283                           ;main.c: 532:     if(duty > 0){
  2284     03B3  0877               	movf	motorF@duty+1,w
  2285     03B4  3A80               	xorlw	128
  2286     03B5  00F8               	movwf	??_motorF
  2287     03B6  3080               	movlw	128
  2288     03B7  0278               	subwf	??_motorF,w
  2289     03B8  1D03               	skipz
  2290     03B9  2BBC               	goto	u645
  2291     03BA  3001               	movlw	1
  2292     03BB  0276               	subwf	motorF@duty,w
  2293     03BC                     u645:
  2294     03BC  1C03               	skipc
  2295     03BD  2BBF               	goto	u641
  2296     03BE  2BC0               	goto	u640
  2297     03BF                     u641:
  2298     03BF  2BD5               	goto	l310
  2299     03C0                     u640:
  2300     03C0                     l1603:
  2301                           
  2302                           ;main.c: 533:         CCPR8L = (duty << 8) & 0x00FF;
  2303     03C0  0026               	movlb	6	; select bank6
  2304     03C1  0191               	clrf	17	;volatile
  2305     03C2                     l1605:
  2306                           
  2307                           ;main.c: 534:         CCPR8H = (duty >> 2) & 0x00FF;
  2308     03C2  0877               	movf	motorF@duty+1,w
  2309     03C3  00F9               	movwf	??_motorF+1
  2310     03C4  0876               	movf	motorF@duty,w
  2311     03C5  00F8               	movwf	??_motorF
  2312     03C6  0D79               	rlf	??_motorF+1,w
  2313     03C7  0CF9               	rrf	??_motorF+1,f
  2314     03C8  0CF8               	rrf	??_motorF,f
  2315     03C9  0D79               	rlf	??_motorF+1,w
  2316     03CA  0CF9               	rrf	??_motorF+1,f
  2317     03CB  0CF8               	rrf	??_motorF,f
  2318     03CC  0878               	movf	??_motorF,w
  2319     03CD  0092               	movwf	18	;volatile
  2320     03CE                     l1607:
  2321                           
  2322                           ;main.c: 535:         RD4PPS = 0b011000;
  2323     03CE  3018               	movlw	24
  2324     03CF  003D               	movlb	29	; select bank29
  2325     03D0  00AC               	movwf	44	;volatile
  2326                           
  2327                           ;main.c: 536:         RD5PPS = 0x00;
  2328     03D1  01AD               	clrf	45	;volatile
  2329     03D2                     l1609:
  2330                           
  2331                           ;main.c: 537:         LATDbits.LATD5 = 0;
  2332     03D2  0022               	movlb	2	; select bank2
  2333     03D3  128F               	bcf	15,5	;volatile
  2334                           
  2335                           ;main.c: 538:     }
  2336     03D4  2C03               	goto	l314
  2337     03D5                     l310:	
  2338                           ;main.c: 539:     else if(duty < 0){
  2339                           
  2340     03D5  1FF7               	btfss	motorF@duty+1,7
  2341     03D6  2BD8               	goto	u651
  2342     03D7  2BD9               	goto	u650
  2343     03D8                     u651:
  2344     03D8  2BFD               	goto	l1623
  2345     03D9                     u650:
  2346     03D9                     l1611:
  2347                           
  2348                           ;main.c: 540:         duty *= -1;
  2349     03D9  30FF               	movlw	255
  2350     03DA  00F0               	movwf	___wmul@multiplier
  2351     03DB  30FF               	movlw	255
  2352     03DC  00F1               	movwf	___wmul@multiplier+1
  2353     03DD  0877               	movf	motorF@duty+1,w
  2354     03DE  00F3               	movwf	___wmul@multiplicand+1
  2355     03DF  0876               	movf	motorF@duty,w
  2356     03E0  00F2               	movwf	___wmul@multiplicand
  2357     03E1  3186  2643  3183   	fcall	___wmul
  2358     03E4  0871               	movf	?___wmul+1,w
  2359     03E5  00F7               	movwf	motorF@duty+1
  2360     03E6  0870               	movf	?___wmul,w
  2361     03E7  00F6               	movwf	motorF@duty
  2362     03E8                     l1613:
  2363                           
  2364                           ;main.c: 541:         CCPR8L = (duty << 8) & 0x00FF;
  2365     03E8  0026               	movlb	6	; select bank6
  2366     03E9  0191               	clrf	17	;volatile
  2367     03EA                     l1615:
  2368                           
  2369                           ;main.c: 542:         CCPR8H = (duty >> 2) & 0x00FF;
  2370     03EA  0877               	movf	motorF@duty+1,w
  2371     03EB  00F9               	movwf	??_motorF+1
  2372     03EC  0876               	movf	motorF@duty,w
  2373     03ED  00F8               	movwf	??_motorF
  2374     03EE  0D79               	rlf	??_motorF+1,w
  2375     03EF  0CF9               	rrf	??_motorF+1,f
  2376     03F0  0CF8               	rrf	??_motorF,f
  2377     03F1  0D79               	rlf	??_motorF+1,w
  2378     03F2  0CF9               	rrf	??_motorF+1,f
  2379     03F3  0CF8               	rrf	??_motorF,f
  2380     03F4  0878               	movf	??_motorF,w
  2381     03F5  0092               	movwf	18	;volatile
  2382     03F6                     l1617:
  2383                           
  2384                           ;main.c: 543:         RD5PPS = 0b011000;
  2385     03F6  3018               	movlw	24
  2386     03F7  003D               	movlb	29	; select bank29
  2387     03F8  00AD               	movwf	45	;volatile
  2388     03F9                     l1619:
  2389                           
  2390                           ;main.c: 544:         RD4PPS = 0x00;
  2391     03F9  01AC               	clrf	44	;volatile
  2392     03FA                     l1621:
  2393                           
  2394                           ;main.c: 545:         LATDbits.LATD4 = 0;
  2395     03FA  0022               	movlb	2	; select bank2
  2396     03FB  120F               	bcf	15,4	;volatile
  2397                           
  2398                           ;main.c: 546:     }
  2399     03FC  2C03               	goto	l314
  2400     03FD                     l1623:
  2401                           
  2402                           ;main.c: 548:         RD4PPS = 0x00;
  2403     03FD  003D               	movlb	29	; select bank29
  2404     03FE  01AC               	clrf	44	;volatile
  2405                           
  2406                           ;main.c: 549:         RD5PPS = 0x00;
  2407     03FF  01AD               	clrf	45	;volatile
  2408     0400                     l1625:
  2409                           
  2410                           ;main.c: 550:         LATDbits.LATD4 = 0;
  2411     0400  0022               	movlb	2	; select bank2
  2412     0401  120F               	bcf	15,4	;volatile
  2413     0402                     l1627:
  2414                           
  2415                           ;main.c: 551:         LATDbits.LATD5 = 0;
  2416     0402  128F               	bcf	15,5	;volatile
  2417     0403                     l314:
  2418     0403  0008               	return
  2419     0404                     __end_of_motorF:
  2420                           
  2421                           	psect	text2
  2422     0404                     __ptext2:	
  2423 ;; *************** function _motorE *****************
  2424 ;; Defined at:
  2425 ;;		line 496 in file "main.c"
  2426 ;; Parameters:    Size  Location     Type
  2427 ;;  duty            2    6[COMMON] int 
  2428 ;; Auto vars:     Size  Location     Type
  2429 ;;		None
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, status,0, pclath, cstack
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2439 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2441 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2442 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2443 ;;Total ram usage:        4 bytes
  2444 ;; Hardware stack levels used: 1
  2445 ;; Hardware stack levels required when called: 2
  2446 ;; This function calls:
  2447 ;;		___wmul
  2448 ;; This function is called by:
  2449 ;;		_main
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453     0404                     _motorE:	
  2454                           ;psect for function _motorE
  2455                           
  2456     0404                     l1555:	
  2457                           ;incstack = 0
  2458                           ; Regs used in _motorE: [wreg+status,2+status,0+pclath+cstack]
  2459                           
  2460                           
  2461                           ;main.c: 498:     duty > 600 ? (duty = 600) : duty;
  2462     0404  0877               	movf	motorE@duty+1,w
  2463     0405  3A80               	xorlw	128
  2464     0406  00F8               	movwf	??_motorE
  2465     0407  3082               	movlw	130
  2466     0408  0278               	subwf	??_motorE,w
  2467     0409  1D03               	skipz
  2468     040A  2C0D               	goto	u585
  2469     040B  3059               	movlw	89
  2470     040C  0276               	subwf	motorE@duty,w
  2471     040D                     u585:
  2472     040D  1C03               	skipc
  2473     040E  2C10               	goto	u581
  2474     040F  2C11               	goto	u580
  2475     0410                     u581:
  2476     0410  2C15               	goto	l1559
  2477     0411                     u580:
  2478     0411                     l1557:
  2479     0411  3058               	movlw	88
  2480     0412  00F6               	movwf	motorE@duty
  2481     0413  3002               	movlw	2
  2482     0414  00F7               	movwf	motorE@duty+1
  2483     0415                     l1559:
  2484                           
  2485                           ;main.c: 499:     duty < -600 ? (duty = 600) : duty;
  2486     0415  0877               	movf	motorE@duty+1,w
  2487     0416  3A80               	xorlw	128
  2488     0417  00F8               	movwf	??_motorE
  2489     0418  307D               	movlw	125
  2490     0419  0278               	subwf	??_motorE,w
  2491     041A  1D03               	skipz
  2492     041B  2C1E               	goto	u595
  2493     041C  30A8               	movlw	168
  2494     041D  0276               	subwf	motorE@duty,w
  2495     041E                     u595:
  2496     041E  1803               	skipnc
  2497     041F  2C21               	goto	u591
  2498     0420  2C22               	goto	u590
  2499     0421                     u591:
  2500     0421  2C26               	goto	l1563
  2501     0422                     u590:
  2502     0422                     l1561:
  2503     0422  3058               	movlw	88
  2504     0423  00F6               	movwf	motorE@duty
  2505     0424  3002               	movlw	2
  2506     0425  00F7               	movwf	motorE@duty+1
  2507     0426                     l1563:
  2508                           
  2509                           ;main.c: 501:     if(duty > 0){
  2510     0426  0877               	movf	motorE@duty+1,w
  2511     0427  3A80               	xorlw	128
  2512     0428  00F8               	movwf	??_motorE
  2513     0429  3080               	movlw	128
  2514     042A  0278               	subwf	??_motorE,w
  2515     042B  1D03               	skipz
  2516     042C  2C2F               	goto	u605
  2517     042D  3001               	movlw	1
  2518     042E  0276               	subwf	motorE@duty,w
  2519     042F                     u605:
  2520     042F  1C03               	skipc
  2521     0430  2C32               	goto	u601
  2522     0431  2C33               	goto	u600
  2523     0432                     u601:
  2524     0432  2C48               	goto	l295
  2525     0433                     u600:
  2526     0433                     l1565:
  2527                           
  2528                           ;main.c: 502:         CCPR7L = (duty << 8) & 0x00FF;
  2529     0433  0025               	movlb	5	; select bank5
  2530     0434  0199               	clrf	25	;volatile
  2531     0435                     l1567:
  2532                           
  2533                           ;main.c: 503:         CCPR7H = (duty >> 2) & 0x00FF;
  2534     0435  0877               	movf	motorE@duty+1,w
  2535     0436  00F9               	movwf	??_motorE+1
  2536     0437  0876               	movf	motorE@duty,w
  2537     0438  00F8               	movwf	??_motorE
  2538     0439  0D79               	rlf	??_motorE+1,w
  2539     043A  0CF9               	rrf	??_motorE+1,f
  2540     043B  0CF8               	rrf	??_motorE,f
  2541     043C  0D79               	rlf	??_motorE+1,w
  2542     043D  0CF9               	rrf	??_motorE+1,f
  2543     043E  0CF8               	rrf	??_motorE,f
  2544     043F  0878               	movf	??_motorE,w
  2545     0440  009A               	movwf	26	;volatile
  2546     0441                     l1569:
  2547                           
  2548                           ;main.c: 504:         RD6PPS = 0b010111;
  2549     0441  3017               	movlw	23
  2550     0442  003D               	movlb	29	; select bank29
  2551     0443  00AE               	movwf	46	;volatile
  2552                           
  2553                           ;main.c: 505:         RD7PPS = 0x00;
  2554     0444  01AF               	clrf	47	;volatile
  2555     0445                     l1571:
  2556                           
  2557                           ;main.c: 506:         LATDbits.LATD7 = 0;
  2558     0445  0022               	movlb	2	; select bank2
  2559     0446  138F               	bcf	15,7	;volatile
  2560                           
  2561                           ;main.c: 507:     }
  2562     0447  2C76               	goto	l299
  2563     0448                     l295:	
  2564                           ;main.c: 508:     else if(duty < 0){
  2565                           
  2566     0448  1FF7               	btfss	motorE@duty+1,7
  2567     0449  2C4B               	goto	u611
  2568     044A  2C4C               	goto	u610
  2569     044B                     u611:
  2570     044B  2C70               	goto	l1585
  2571     044C                     u610:
  2572     044C                     l1573:
  2573                           
  2574                           ;main.c: 509:         duty *= -1;
  2575     044C  30FF               	movlw	255
  2576     044D  00F0               	movwf	___wmul@multiplier
  2577     044E  30FF               	movlw	255
  2578     044F  00F1               	movwf	___wmul@multiplier+1
  2579     0450  0877               	movf	motorE@duty+1,w
  2580     0451  00F3               	movwf	___wmul@multiplicand+1
  2581     0452  0876               	movf	motorE@duty,w
  2582     0453  00F2               	movwf	___wmul@multiplicand
  2583     0454  3186  2643  3184   	fcall	___wmul
  2584     0457  0871               	movf	?___wmul+1,w
  2585     0458  00F7               	movwf	motorE@duty+1
  2586     0459  0870               	movf	?___wmul,w
  2587     045A  00F6               	movwf	motorE@duty
  2588     045B                     l1575:
  2589                           
  2590                           ;main.c: 510:         CCPR7L = (duty << 8) & 0x00FF;
  2591     045B  0025               	movlb	5	; select bank5
  2592     045C  0199               	clrf	25	;volatile
  2593     045D                     l1577:
  2594                           
  2595                           ;main.c: 511:         CCPR7H = (duty >> 2) & 0x00FF;
  2596     045D  0877               	movf	motorE@duty+1,w
  2597     045E  00F9               	movwf	??_motorE+1
  2598     045F  0876               	movf	motorE@duty,w
  2599     0460  00F8               	movwf	??_motorE
  2600     0461  0D79               	rlf	??_motorE+1,w
  2601     0462  0CF9               	rrf	??_motorE+1,f
  2602     0463  0CF8               	rrf	??_motorE,f
  2603     0464  0D79               	rlf	??_motorE+1,w
  2604     0465  0CF9               	rrf	??_motorE+1,f
  2605     0466  0CF8               	rrf	??_motorE,f
  2606     0467  0878               	movf	??_motorE,w
  2607     0468  009A               	movwf	26	;volatile
  2608     0469                     l1579:
  2609                           
  2610                           ;main.c: 512:         RD7PPS = 0b010111;
  2611     0469  3017               	movlw	23
  2612     046A  003D               	movlb	29	; select bank29
  2613     046B  00AF               	movwf	47	;volatile
  2614     046C                     l1581:
  2615                           
  2616                           ;main.c: 513:         RD6PPS = 0x00;
  2617     046C  01AE               	clrf	46	;volatile
  2618     046D                     l1583:
  2619                           
  2620                           ;main.c: 514:         LATDbits.LATD6 = 0;
  2621     046D  0022               	movlb	2	; select bank2
  2622     046E  130F               	bcf	15,6	;volatile
  2623                           
  2624                           ;main.c: 515:     }
  2625     046F  2C76               	goto	l299
  2626     0470                     l1585:
  2627                           
  2628                           ;main.c: 517:         RD6PPS = 0x00;
  2629     0470  003D               	movlb	29	; select bank29
  2630     0471  01AE               	clrf	46	;volatile
  2631                           
  2632                           ;main.c: 518:         RD7PPS = 0x00;
  2633     0472  01AF               	clrf	47	;volatile
  2634     0473                     l1587:
  2635                           
  2636                           ;main.c: 519:         LATDbits.LATD6 = 0;
  2637     0473  0022               	movlb	2	; select bank2
  2638     0474  130F               	bcf	15,6	;volatile
  2639     0475                     l1589:
  2640                           
  2641                           ;main.c: 520:         LATDbits.LATD7 = 0;
  2642     0475  138F               	bcf	15,7	;volatile
  2643     0476                     l299:
  2644     0476  0008               	return
  2645     0477                     __end_of_motorE:
  2646                           
  2647                           	psect	text3
  2648     0477                     __ptext3:	
  2649 ;; *************** function _motorD *****************
  2650 ;; Defined at:
  2651 ;;		line 465 in file "main.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  duty            2    6[COMMON] int 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0, pclath, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2667 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2668 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2669 ;;Total ram usage:        4 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; Hardware stack levels required when called: 2
  2672 ;; This function calls:
  2673 ;;		___wmul
  2674 ;; This function is called by:
  2675 ;;		_main
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679     0477                     _motorD:	
  2680                           ;psect for function _motorD
  2681                           
  2682     0477                     l1517:	
  2683                           ;incstack = 0
  2684                           ; Regs used in _motorD: [wreg+status,2+status,0+pclath+cstack]
  2685                           
  2686                           
  2687                           ;main.c: 467:     duty > 600 ? (duty = 600) : duty;
  2688     0477  0877               	movf	motorD@duty+1,w
  2689     0478  3A80               	xorlw	128
  2690     0479  00F8               	movwf	??_motorD
  2691     047A  3082               	movlw	130
  2692     047B  0278               	subwf	??_motorD,w
  2693     047C  1D03               	skipz
  2694     047D  2C80               	goto	u545
  2695     047E  3059               	movlw	89
  2696     047F  0276               	subwf	motorD@duty,w
  2697     0480                     u545:
  2698     0480  1C03               	skipc
  2699     0481  2C83               	goto	u541
  2700     0482  2C84               	goto	u540
  2701     0483                     u541:
  2702     0483  2C88               	goto	l1521
  2703     0484                     u540:
  2704     0484                     l1519:
  2705     0484  3058               	movlw	88
  2706     0485  00F6               	movwf	motorD@duty
  2707     0486  3002               	movlw	2
  2708     0487  00F7               	movwf	motorD@duty+1
  2709     0488                     l1521:
  2710                           
  2711                           ;main.c: 468:     duty < -600 ? (duty = 600) : duty;
  2712     0488  0877               	movf	motorD@duty+1,w
  2713     0489  3A80               	xorlw	128
  2714     048A  00F8               	movwf	??_motorD
  2715     048B  307D               	movlw	125
  2716     048C  0278               	subwf	??_motorD,w
  2717     048D  1D03               	skipz
  2718     048E  2C91               	goto	u555
  2719     048F  30A8               	movlw	168
  2720     0490  0276               	subwf	motorD@duty,w
  2721     0491                     u555:
  2722     0491  1803               	skipnc
  2723     0492  2C94               	goto	u551
  2724     0493  2C95               	goto	u550
  2725     0494                     u551:
  2726     0494  2C99               	goto	l1525
  2727     0495                     u550:
  2728     0495                     l1523:
  2729     0495  3058               	movlw	88
  2730     0496  00F6               	movwf	motorD@duty
  2731     0497  3002               	movlw	2
  2732     0498  00F7               	movwf	motorD@duty+1
  2733     0499                     l1525:
  2734                           
  2735                           ;main.c: 470:     if(duty > 0){
  2736     0499  0877               	movf	motorD@duty+1,w
  2737     049A  3A80               	xorlw	128
  2738     049B  00F8               	movwf	??_motorD
  2739     049C  3080               	movlw	128
  2740     049D  0278               	subwf	??_motorD,w
  2741     049E  1D03               	skipz
  2742     049F  2CA2               	goto	u565
  2743     04A0  3001               	movlw	1
  2744     04A1  0276               	subwf	motorD@duty,w
  2745     04A2                     u565:
  2746     04A2  1C03               	skipc
  2747     04A3  2CA5               	goto	u561
  2748     04A4  2CA6               	goto	u560
  2749     04A5                     u561:
  2750     04A5  2CBB               	goto	l280
  2751     04A6                     u560:
  2752     04A6                     l1527:
  2753                           
  2754                           ;main.c: 471:         CCPR2L = (duty << 8) & 0x00FF;
  2755     04A6  0025               	movlb	5	; select bank5
  2756     04A7  0195               	clrf	21	;volatile
  2757     04A8                     l1529:
  2758                           
  2759                           ;main.c: 472:         CCPR2H = (duty >> 2) & 0x00FF;
  2760     04A8  0877               	movf	motorD@duty+1,w
  2761     04A9  00F9               	movwf	??_motorD+1
  2762     04AA  0876               	movf	motorD@duty,w
  2763     04AB  00F8               	movwf	??_motorD
  2764     04AC  0D79               	rlf	??_motorD+1,w
  2765     04AD  0CF9               	rrf	??_motorD+1,f
  2766     04AE  0CF8               	rrf	??_motorD,f
  2767     04AF  0D79               	rlf	??_motorD+1,w
  2768     04B0  0CF9               	rrf	??_motorD+1,f
  2769     04B1  0CF8               	rrf	??_motorD,f
  2770     04B2  0878               	movf	??_motorD,w
  2771     04B3  0096               	movwf	22	;volatile
  2772     04B4                     l1531:
  2773                           
  2774                           ;main.c: 473:         RB0PPS = 0b010110;
  2775     04B4  3016               	movlw	22
  2776     04B5  003D               	movlb	29	; select bank29
  2777     04B6  0098               	movwf	24	;volatile
  2778                           
  2779                           ;main.c: 474:         RB1PPS = 0x00;
  2780     04B7  0199               	clrf	25	;volatile
  2781     04B8                     l1533:
  2782                           
  2783                           ;main.c: 475:         LATBbits.LATB1 = 0;
  2784     04B8  0022               	movlb	2	; select bank2
  2785     04B9  108D               	bcf	13,1	;volatile
  2786                           
  2787                           ;main.c: 476:     }
  2788     04BA  2CE9               	goto	l284
  2789     04BB                     l280:	
  2790                           ;main.c: 477:     else if(duty < 0){
  2791                           
  2792     04BB  1FF7               	btfss	motorD@duty+1,7
  2793     04BC  2CBE               	goto	u571
  2794     04BD  2CBF               	goto	u570
  2795     04BE                     u571:
  2796     04BE  2CE3               	goto	l1547
  2797     04BF                     u570:
  2798     04BF                     l1535:
  2799                           
  2800                           ;main.c: 478:         duty *= -1;
  2801     04BF  30FF               	movlw	255
  2802     04C0  00F0               	movwf	___wmul@multiplier
  2803     04C1  30FF               	movlw	255
  2804     04C2  00F1               	movwf	___wmul@multiplier+1
  2805     04C3  0877               	movf	motorD@duty+1,w
  2806     04C4  00F3               	movwf	___wmul@multiplicand+1
  2807     04C5  0876               	movf	motorD@duty,w
  2808     04C6  00F2               	movwf	___wmul@multiplicand
  2809     04C7  3186  2643  3184   	fcall	___wmul
  2810     04CA  0871               	movf	?___wmul+1,w
  2811     04CB  00F7               	movwf	motorD@duty+1
  2812     04CC  0870               	movf	?___wmul,w
  2813     04CD  00F6               	movwf	motorD@duty
  2814     04CE                     l1537:
  2815                           
  2816                           ;main.c: 479:         CCPR2L = (duty << 8) & 0x00FF;
  2817     04CE  0025               	movlb	5	; select bank5
  2818     04CF  0195               	clrf	21	;volatile
  2819     04D0                     l1539:
  2820                           
  2821                           ;main.c: 480:         CCPR2H = (duty >> 2) & 0x00FF;
  2822     04D0  0877               	movf	motorD@duty+1,w
  2823     04D1  00F9               	movwf	??_motorD+1
  2824     04D2  0876               	movf	motorD@duty,w
  2825     04D3  00F8               	movwf	??_motorD
  2826     04D4  0D79               	rlf	??_motorD+1,w
  2827     04D5  0CF9               	rrf	??_motorD+1,f
  2828     04D6  0CF8               	rrf	??_motorD,f
  2829     04D7  0D79               	rlf	??_motorD+1,w
  2830     04D8  0CF9               	rrf	??_motorD+1,f
  2831     04D9  0CF8               	rrf	??_motorD,f
  2832     04DA  0878               	movf	??_motorD,w
  2833     04DB  0096               	movwf	22	;volatile
  2834     04DC                     l1541:
  2835                           
  2836                           ;main.c: 481:         RB1PPS = 0b010110;
  2837     04DC  3016               	movlw	22
  2838     04DD  003D               	movlb	29	; select bank29
  2839     04DE  0099               	movwf	25	;volatile
  2840     04DF                     l1543:
  2841                           
  2842                           ;main.c: 482:         RB0PPS = 0x00;
  2843     04DF  0198               	clrf	24	;volatile
  2844     04E0                     l1545:
  2845                           
  2846                           ;main.c: 483:         LATBbits.LATB0 = 0;
  2847     04E0  0022               	movlb	2	; select bank2
  2848     04E1  100D               	bcf	13,0	;volatile
  2849                           
  2850                           ;main.c: 484:     }
  2851     04E2  2CE9               	goto	l284
  2852     04E3                     l1547:
  2853                           
  2854                           ;main.c: 486:         RB0PPS = 0x00;
  2855     04E3  003D               	movlb	29	; select bank29
  2856     04E4  0198               	clrf	24	;volatile
  2857                           
  2858                           ;main.c: 487:         RB1PPS = 0x00;
  2859     04E5  0199               	clrf	25	;volatile
  2860     04E6                     l1549:
  2861                           
  2862                           ;main.c: 488:         LATBbits.LATB0 = 0;
  2863     04E6  0022               	movlb	2	; select bank2
  2864     04E7  100D               	bcf	13,0	;volatile
  2865     04E8                     l1551:
  2866                           
  2867                           ;main.c: 489:         LATBbits.LATB1 = 0;
  2868     04E8  108D               	bcf	13,1	;volatile
  2869     04E9                     l284:
  2870     04E9  0008               	return
  2871     04EA                     __end_of_motorD:
  2872                           
  2873                           	psect	text4
  2874     04EA                     __ptext4:	
  2875 ;; *************** function _motorC *****************
  2876 ;; Defined at:
  2877 ;;		line 434 in file "main.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  duty            2    6[COMMON] int 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;		None
  2882 ;; Return value:  Size  Location     Type
  2883 ;;                  1    wreg      void 
  2884 ;; Registers used:
  2885 ;;		wreg, status,2, status,0, pclath, cstack
  2886 ;; Tracked objects:
  2887 ;;		On entry : 0/0
  2888 ;;		On exit  : 0/0
  2889 ;;		Unchanged: 0/0
  2890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2893 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2894 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2895 ;;Total ram usage:        4 bytes
  2896 ;; Hardware stack levels used: 1
  2897 ;; Hardware stack levels required when called: 2
  2898 ;; This function calls:
  2899 ;;		___wmul
  2900 ;; This function is called by:
  2901 ;;		_main
  2902 ;; This function uses a non-reentrant model
  2903 ;;
  2904                           
  2905     04EA                     _motorC:	
  2906                           ;psect for function _motorC
  2907                           
  2908     04EA                     l1479:	
  2909                           ;incstack = 0
  2910                           ; Regs used in _motorC: [wreg+status,2+status,0+pclath+cstack]
  2911                           
  2912                           
  2913                           ;main.c: 436:     duty > 600 ? (duty = 600) : duty;
  2914     04EA  0877               	movf	motorC@duty+1,w
  2915     04EB  3A80               	xorlw	128
  2916     04EC  00F8               	movwf	??_motorC
  2917     04ED  3082               	movlw	130
  2918     04EE  0278               	subwf	??_motorC,w
  2919     04EF  1D03               	skipz
  2920     04F0  2CF3               	goto	u505
  2921     04F1  3059               	movlw	89
  2922     04F2  0276               	subwf	motorC@duty,w
  2923     04F3                     u505:
  2924     04F3  1C03               	skipc
  2925     04F4  2CF6               	goto	u501
  2926     04F5  2CF7               	goto	u500
  2927     04F6                     u501:
  2928     04F6  2CFB               	goto	l1483
  2929     04F7                     u500:
  2930     04F7                     l1481:
  2931     04F7  3058               	movlw	88
  2932     04F8  00F6               	movwf	motorC@duty
  2933     04F9  3002               	movlw	2
  2934     04FA  00F7               	movwf	motorC@duty+1
  2935     04FB                     l1483:
  2936                           
  2937                           ;main.c: 437:     duty < -600 ? (duty = 600) : duty;
  2938     04FB  0877               	movf	motorC@duty+1,w
  2939     04FC  3A80               	xorlw	128
  2940     04FD  00F8               	movwf	??_motorC
  2941     04FE  307D               	movlw	125
  2942     04FF  0278               	subwf	??_motorC,w
  2943     0500  1D03               	skipz
  2944     0501  2D04               	goto	u515
  2945     0502  30A8               	movlw	168
  2946     0503  0276               	subwf	motorC@duty,w
  2947     0504                     u515:
  2948     0504  1803               	skipnc
  2949     0505  2D07               	goto	u511
  2950     0506  2D08               	goto	u510
  2951     0507                     u511:
  2952     0507  2D0C               	goto	l1487
  2953     0508                     u510:
  2954     0508                     l1485:
  2955     0508  3058               	movlw	88
  2956     0509  00F6               	movwf	motorC@duty
  2957     050A  3002               	movlw	2
  2958     050B  00F7               	movwf	motorC@duty+1
  2959     050C                     l1487:
  2960                           
  2961                           ;main.c: 439:     if(duty > 0){
  2962     050C  0877               	movf	motorC@duty+1,w
  2963     050D  3A80               	xorlw	128
  2964     050E  00F8               	movwf	??_motorC
  2965     050F  3080               	movlw	128
  2966     0510  0278               	subwf	??_motorC,w
  2967     0511  1D03               	skipz
  2968     0512  2D15               	goto	u525
  2969     0513  3001               	movlw	1
  2970     0514  0276               	subwf	motorC@duty,w
  2971     0515                     u525:
  2972     0515  1C03               	skipc
  2973     0516  2D18               	goto	u521
  2974     0517  2D19               	goto	u520
  2975     0518                     u521:
  2976     0518  2D2E               	goto	l265
  2977     0519                     u520:
  2978     0519                     l1489:
  2979                           
  2980                           ;main.c: 440:         CCPR1L = (duty << 8) & 0x00FF;
  2981     0519  0025               	movlb	5	; select bank5
  2982     051A  0191               	clrf	17	;volatile
  2983     051B                     l1491:
  2984                           
  2985                           ;main.c: 441:         CCPR1H = (duty >> 2) & 0x00FF;
  2986     051B  0877               	movf	motorC@duty+1,w
  2987     051C  00F9               	movwf	??_motorC+1
  2988     051D  0876               	movf	motorC@duty,w
  2989     051E  00F8               	movwf	??_motorC
  2990     051F  0D79               	rlf	??_motorC+1,w
  2991     0520  0CF9               	rrf	??_motorC+1,f
  2992     0521  0CF8               	rrf	??_motorC,f
  2993     0522  0D79               	rlf	??_motorC+1,w
  2994     0523  0CF9               	rrf	??_motorC+1,f
  2995     0524  0CF8               	rrf	??_motorC,f
  2996     0525  0878               	movf	??_motorC,w
  2997     0526  0092               	movwf	18	;volatile
  2998     0527                     l1493:
  2999                           
  3000                           ;main.c: 442:         RB2PPS = 0b010101;
  3001     0527  3015               	movlw	21
  3002     0528  003D               	movlb	29	; select bank29
  3003     0529  009A               	movwf	26	;volatile
  3004                           
  3005                           ;main.c: 443:         RB3PPS = 0x00;
  3006     052A  019B               	clrf	27	;volatile
  3007     052B                     l1495:
  3008                           
  3009                           ;main.c: 444:         LATBbits.LATB3 = 0;
  3010     052B  0022               	movlb	2	; select bank2
  3011     052C  118D               	bcf	13,3	;volatile
  3012                           
  3013                           ;main.c: 445:     }
  3014     052D  2D5C               	goto	l269
  3015     052E                     l265:	
  3016                           ;main.c: 446:     else if(duty < 0){
  3017                           
  3018     052E  1FF7               	btfss	motorC@duty+1,7
  3019     052F  2D31               	goto	u531
  3020     0530  2D32               	goto	u530
  3021     0531                     u531:
  3022     0531  2D56               	goto	l1509
  3023     0532                     u530:
  3024     0532                     l1497:
  3025                           
  3026                           ;main.c: 447:         duty *= -1;
  3027     0532  30FF               	movlw	255
  3028     0533  00F0               	movwf	___wmul@multiplier
  3029     0534  30FF               	movlw	255
  3030     0535  00F1               	movwf	___wmul@multiplier+1
  3031     0536  0877               	movf	motorC@duty+1,w
  3032     0537  00F3               	movwf	___wmul@multiplicand+1
  3033     0538  0876               	movf	motorC@duty,w
  3034     0539  00F2               	movwf	___wmul@multiplicand
  3035     053A  3186  2643  3184   	fcall	___wmul
  3036     053D  0871               	movf	?___wmul+1,w
  3037     053E  00F7               	movwf	motorC@duty+1
  3038     053F  0870               	movf	?___wmul,w
  3039     0540  00F6               	movwf	motorC@duty
  3040     0541                     l1499:
  3041                           
  3042                           ;main.c: 448:         CCPR1L = (duty << 8) & 0x00FF;
  3043     0541  0025               	movlb	5	; select bank5
  3044     0542  0191               	clrf	17	;volatile
  3045     0543                     l1501:
  3046                           
  3047                           ;main.c: 449:         CCPR1H = (duty >> 2) & 0x00FF;
  3048     0543  0877               	movf	motorC@duty+1,w
  3049     0544  00F9               	movwf	??_motorC+1
  3050     0545  0876               	movf	motorC@duty,w
  3051     0546  00F8               	movwf	??_motorC
  3052     0547  0D79               	rlf	??_motorC+1,w
  3053     0548  0CF9               	rrf	??_motorC+1,f
  3054     0549  0CF8               	rrf	??_motorC,f
  3055     054A  0D79               	rlf	??_motorC+1,w
  3056     054B  0CF9               	rrf	??_motorC+1,f
  3057     054C  0CF8               	rrf	??_motorC,f
  3058     054D  0878               	movf	??_motorC,w
  3059     054E  0092               	movwf	18	;volatile
  3060     054F                     l1503:
  3061                           
  3062                           ;main.c: 450:         RB3PPS = 0b010101;
  3063     054F  3015               	movlw	21
  3064     0550  003D               	movlb	29	; select bank29
  3065     0551  009B               	movwf	27	;volatile
  3066     0552                     l1505:
  3067                           
  3068                           ;main.c: 451:         RB2PPS = 0x00;
  3069     0552  019A               	clrf	26	;volatile
  3070     0553                     l1507:
  3071                           
  3072                           ;main.c: 452:         LATBbits.LATB2 = 0;
  3073     0553  0022               	movlb	2	; select bank2
  3074     0554  110D               	bcf	13,2	;volatile
  3075                           
  3076                           ;main.c: 453:     }
  3077     0555  2D5C               	goto	l269
  3078     0556                     l1509:
  3079                           
  3080                           ;main.c: 455:         RB2PPS = 0x00;
  3081     0556  003D               	movlb	29	; select bank29
  3082     0557  019A               	clrf	26	;volatile
  3083                           
  3084                           ;main.c: 456:         RB3PPS = 0x00;
  3085     0558  019B               	clrf	27	;volatile
  3086     0559                     l1511:
  3087                           
  3088                           ;main.c: 457:         LATBbits.LATB2 = 0;
  3089     0559  0022               	movlb	2	; select bank2
  3090     055A  110D               	bcf	13,2	;volatile
  3091     055B                     l1513:
  3092                           
  3093                           ;main.c: 458:         LATBbits.LATB3 = 0;
  3094     055B  118D               	bcf	13,3	;volatile
  3095     055C                     l269:
  3096     055C  0008               	return
  3097     055D                     __end_of_motorC:
  3098                           
  3099                           	psect	text5
  3100     055D                     __ptext5:	
  3101 ;; *************** function _motorB *****************
  3102 ;; Defined at:
  3103 ;;		line 405 in file "main.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  duty            2    6[COMMON] int 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;		None
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2, status,0, pclath, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3117 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3119 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3120 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3121 ;;Total ram usage:        4 bytes
  3122 ;; Hardware stack levels used: 1
  3123 ;; Hardware stack levels required when called: 2
  3124 ;; This function calls:
  3125 ;;		___wmul
  3126 ;; This function is called by:
  3127 ;;		_main
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131     055D                     _motorB:	
  3132                           ;psect for function _motorB
  3133                           
  3134     055D                     l1443:	
  3135                           ;incstack = 0
  3136                           ; Regs used in _motorB: [wreg+status,2+status,0+pclath+cstack]
  3137                           
  3138                           
  3139                           ;main.c: 407:     duty > 600 ? (duty = 600) : duty;
  3140     055D  0877               	movf	motorB@duty+1,w
  3141     055E  3A80               	xorlw	128
  3142     055F  00F8               	movwf	??_motorB
  3143     0560  3082               	movlw	130
  3144     0561  0278               	subwf	??_motorB,w
  3145     0562  1D03               	skipz
  3146     0563  2D66               	goto	u465
  3147     0564  3059               	movlw	89
  3148     0565  0276               	subwf	motorB@duty,w
  3149     0566                     u465:
  3150     0566  1C03               	skipc
  3151     0567  2D69               	goto	u461
  3152     0568  2D6A               	goto	u460
  3153     0569                     u461:
  3154     0569  2D6E               	goto	l1447
  3155     056A                     u460:
  3156     056A                     l1445:
  3157     056A  3058               	movlw	88
  3158     056B  00F6               	movwf	motorB@duty
  3159     056C  3002               	movlw	2
  3160     056D  00F7               	movwf	motorB@duty+1
  3161     056E                     l1447:
  3162                           
  3163                           ;main.c: 408:     duty < -600 ? (duty = 600) : duty;
  3164     056E  0877               	movf	motorB@duty+1,w
  3165     056F  3A80               	xorlw	128
  3166     0570  00F8               	movwf	??_motorB
  3167     0571  307D               	movlw	125
  3168     0572  0278               	subwf	??_motorB,w
  3169     0573  1D03               	skipz
  3170     0574  2D77               	goto	u475
  3171     0575  30A8               	movlw	168
  3172     0576  0276               	subwf	motorB@duty,w
  3173     0577                     u475:
  3174     0577  1803               	skipnc
  3175     0578  2D7A               	goto	u471
  3176     0579  2D7B               	goto	u470
  3177     057A                     u471:
  3178     057A  2D7F               	goto	l1451
  3179     057B                     u470:
  3180     057B                     l1449:
  3181     057B  3058               	movlw	88
  3182     057C  00F6               	movwf	motorB@duty
  3183     057D  3002               	movlw	2
  3184     057E  00F7               	movwf	motorB@duty+1
  3185     057F                     l1451:
  3186                           
  3187                           ;main.c: 410:     if(duty > 0){
  3188     057F  0877               	movf	motorB@duty+1,w
  3189     0580  3A80               	xorlw	128
  3190     0581  00F8               	movwf	??_motorB
  3191     0582  3080               	movlw	128
  3192     0583  0278               	subwf	??_motorB,w
  3193     0584  1D03               	skipz
  3194     0585  2D88               	goto	u485
  3195     0586  3001               	movlw	1
  3196     0587  0276               	subwf	motorB@duty,w
  3197     0588                     u485:
  3198     0588  1C03               	skipc
  3199     0589  2D8B               	goto	u481
  3200     058A  2D8C               	goto	u480
  3201     058B                     u481:
  3202     058B  2DA1               	goto	l250
  3203     058C                     u480:
  3204     058C                     l1453:
  3205                           
  3206                           ;main.c: 411:         PWM4DCL = (duty << 8) & 0x00FF;
  3207     058C  002C               	movlb	12	; select bank12
  3208     058D  0197               	clrf	23	;volatile
  3209     058E                     l1455:
  3210                           
  3211                           ;main.c: 412:         PWM4DCH = (duty >> 2) & 0x00FF;
  3212     058E  0877               	movf	motorB@duty+1,w
  3213     058F  00F9               	movwf	??_motorB+1
  3214     0590  0876               	movf	motorB@duty,w
  3215     0591  00F8               	movwf	??_motorB
  3216     0592  0D79               	rlf	??_motorB+1,w
  3217     0593  0CF9               	rrf	??_motorB+1,f
  3218     0594  0CF8               	rrf	??_motorB,f
  3219     0595  0D79               	rlf	??_motorB+1,w
  3220     0596  0CF9               	rrf	??_motorB+1,f
  3221     0597  0CF8               	rrf	??_motorB,f
  3222     0598  0878               	movf	??_motorB,w
  3223     0599  0098               	movwf	24	;volatile
  3224     059A                     l1457:
  3225                           
  3226                           ;main.c: 413:         RA2PPS = 0b011010;
  3227     059A  301A               	movlw	26
  3228     059B  003D               	movlb	29	; select bank29
  3229     059C  0092               	movwf	18	;volatile
  3230                           
  3231                           ;main.c: 414:         RA3PPS = 0x00;
  3232     059D  0193               	clrf	19	;volatile
  3233     059E                     l1459:
  3234                           
  3235                           ;main.c: 415:         LATAbits.LATA3 = 0;
  3236     059E  0022               	movlb	2	; select bank2
  3237     059F  118C               	bcf	12,3	;volatile
  3238                           
  3239                           ;main.c: 416:     }
  3240     05A0  2DCF               	goto	l254
  3241     05A1                     l250:	
  3242                           ;main.c: 417:     else if(duty < 0){
  3243                           
  3244     05A1  1FF7               	btfss	motorB@duty+1,7
  3245     05A2  2DA4               	goto	u491
  3246     05A3  2DA5               	goto	u490
  3247     05A4                     u491:
  3248     05A4  2DC9               	goto	l1473
  3249     05A5                     u490:
  3250     05A5                     l1461:
  3251                           
  3252                           ;main.c: 418:         duty *= -1;
  3253     05A5  30FF               	movlw	255
  3254     05A6  00F0               	movwf	___wmul@multiplier
  3255     05A7  30FF               	movlw	255
  3256     05A8  00F1               	movwf	___wmul@multiplier+1
  3257     05A9  0877               	movf	motorB@duty+1,w
  3258     05AA  00F3               	movwf	___wmul@multiplicand+1
  3259     05AB  0876               	movf	motorB@duty,w
  3260     05AC  00F2               	movwf	___wmul@multiplicand
  3261     05AD  3186  2643  3185   	fcall	___wmul
  3262     05B0  0871               	movf	?___wmul+1,w
  3263     05B1  00F7               	movwf	motorB@duty+1
  3264     05B2  0870               	movf	?___wmul,w
  3265     05B3  00F6               	movwf	motorB@duty
  3266     05B4                     l1463:
  3267                           
  3268                           ;main.c: 419:         PWM4DCL = (duty << 8) & 0x00FF;
  3269     05B4  002C               	movlb	12	; select bank12
  3270     05B5  0197               	clrf	23	;volatile
  3271     05B6                     l1465:
  3272                           
  3273                           ;main.c: 420:         PWM4DCH = (duty >> 2) & 0x00FF;
  3274     05B6  0877               	movf	motorB@duty+1,w
  3275     05B7  00F9               	movwf	??_motorB+1
  3276     05B8  0876               	movf	motorB@duty,w
  3277     05B9  00F8               	movwf	??_motorB
  3278     05BA  0D79               	rlf	??_motorB+1,w
  3279     05BB  0CF9               	rrf	??_motorB+1,f
  3280     05BC  0CF8               	rrf	??_motorB,f
  3281     05BD  0D79               	rlf	??_motorB+1,w
  3282     05BE  0CF9               	rrf	??_motorB+1,f
  3283     05BF  0CF8               	rrf	??_motorB,f
  3284     05C0  0878               	movf	??_motorB,w
  3285     05C1  0098               	movwf	24	;volatile
  3286     05C2                     l1467:
  3287                           
  3288                           ;main.c: 421:         RA3PPS = 0b011010;
  3289     05C2  301A               	movlw	26
  3290     05C3  003D               	movlb	29	; select bank29
  3291     05C4  0093               	movwf	19	;volatile
  3292     05C5                     l1469:
  3293                           
  3294                           ;main.c: 422:         RA2PPS = 0x00;
  3295     05C5  0192               	clrf	18	;volatile
  3296     05C6                     l1471:
  3297                           
  3298                           ;main.c: 423:         LATAbits.LATA2 = 0;
  3299     05C6  0022               	movlb	2	; select bank2
  3300     05C7  110C               	bcf	12,2	;volatile
  3301                           
  3302                           ;main.c: 424:     }
  3303     05C8  2DCF               	goto	l254
  3304     05C9                     l1473:
  3305                           
  3306                           ;main.c: 426:         RA2PPS = 0x00;
  3307     05C9  003D               	movlb	29	; select bank29
  3308     05CA  0192               	clrf	18	;volatile
  3309                           
  3310                           ;main.c: 427:         RA3PPS = 0x00;
  3311     05CB  0193               	clrf	19	;volatile
  3312     05CC                     l1475:
  3313                           
  3314                           ;main.c: 428:         LATAbits.LATA2 = 0;
  3315     05CC  0022               	movlb	2	; select bank2
  3316     05CD  110C               	bcf	12,2	;volatile
  3317     05CE                     l1477:
  3318                           
  3319                           ;main.c: 429:         LATAbits.LATA3 = 0;
  3320     05CE  118C               	bcf	12,3	;volatile
  3321     05CF                     l254:
  3322     05CF  0008               	return
  3323     05D0                     __end_of_motorB:
  3324                           
  3325                           	psect	text6
  3326     05D0                     __ptext6:	
  3327 ;; *************** function _motorA *****************
  3328 ;; Defined at:
  3329 ;;		line 376 in file "main.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;  duty            2    6[COMMON] int 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		wreg, status,2, status,0, pclath, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3343 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3346 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3347 ;;Total ram usage:        4 bytes
  3348 ;; Hardware stack levels used: 1
  3349 ;; Hardware stack levels required when called: 2
  3350 ;; This function calls:
  3351 ;;		___wmul
  3352 ;; This function is called by:
  3353 ;;		_main
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357     05D0                     _motorA:	
  3358                           ;psect for function _motorA
  3359                           
  3360     05D0                     l1407:	
  3361                           ;incstack = 0
  3362                           ; Regs used in _motorA: [wreg+status,2+status,0+pclath+cstack]
  3363                           
  3364                           
  3365                           ;main.c: 378:     duty > 600 ? (duty = 600) : duty;
  3366     05D0  0877               	movf	motorA@duty+1,w
  3367     05D1  3A80               	xorlw	128
  3368     05D2  00F8               	movwf	??_motorA
  3369     05D3  3082               	movlw	130
  3370     05D4  0278               	subwf	??_motorA,w
  3371     05D5  1D03               	skipz
  3372     05D6  2DD9               	goto	u425
  3373     05D7  3059               	movlw	89
  3374     05D8  0276               	subwf	motorA@duty,w
  3375     05D9                     u425:
  3376     05D9  1C03               	skipc
  3377     05DA  2DDC               	goto	u421
  3378     05DB  2DDD               	goto	u420
  3379     05DC                     u421:
  3380     05DC  2DE1               	goto	l1411
  3381     05DD                     u420:
  3382     05DD                     l1409:
  3383     05DD  3058               	movlw	88
  3384     05DE  00F6               	movwf	motorA@duty
  3385     05DF  3002               	movlw	2
  3386     05E0  00F7               	movwf	motorA@duty+1
  3387     05E1                     l1411:
  3388                           
  3389                           ;main.c: 379:     duty < -600 ? (duty = 600) : duty;
  3390     05E1  0877               	movf	motorA@duty+1,w
  3391     05E2  3A80               	xorlw	128
  3392     05E3  00F8               	movwf	??_motorA
  3393     05E4  307D               	movlw	125
  3394     05E5  0278               	subwf	??_motorA,w
  3395     05E6  1D03               	skipz
  3396     05E7  2DEA               	goto	u435
  3397     05E8  30A8               	movlw	168
  3398     05E9  0276               	subwf	motorA@duty,w
  3399     05EA                     u435:
  3400     05EA  1803               	skipnc
  3401     05EB  2DED               	goto	u431
  3402     05EC  2DEE               	goto	u430
  3403     05ED                     u431:
  3404     05ED  2DF2               	goto	l1415
  3405     05EE                     u430:
  3406     05EE                     l1413:
  3407     05EE  3058               	movlw	88
  3408     05EF  00F6               	movwf	motorA@duty
  3409     05F0  3002               	movlw	2
  3410     05F1  00F7               	movwf	motorA@duty+1
  3411     05F2                     l1415:
  3412                           
  3413                           ;main.c: 381:     if(duty > 0){
  3414     05F2  0877               	movf	motorA@duty+1,w
  3415     05F3  3A80               	xorlw	128
  3416     05F4  00F8               	movwf	??_motorA
  3417     05F5  3080               	movlw	128
  3418     05F6  0278               	subwf	??_motorA,w
  3419     05F7  1D03               	skipz
  3420     05F8  2DFB               	goto	u445
  3421     05F9  3001               	movlw	1
  3422     05FA  0276               	subwf	motorA@duty,w
  3423     05FB                     u445:
  3424     05FB  1C03               	skipc
  3425     05FC  2DFE               	goto	u441
  3426     05FD  2DFF               	goto	u440
  3427     05FE                     u441:
  3428     05FE  2E14               	goto	l235
  3429     05FF                     u440:
  3430     05FF                     l1417:
  3431                           
  3432                           ;main.c: 382:         PWM3DCL = (duty << 8) & 0x00FF;
  3433     05FF  002C               	movlb	12	; select bank12
  3434     0600  0194               	clrf	20	;volatile
  3435     0601                     l1419:
  3436                           
  3437                           ;main.c: 383:         PWM3DCH = (duty >> 2) & 0x00FF;
  3438     0601  0877               	movf	motorA@duty+1,w
  3439     0602  00F9               	movwf	??_motorA+1
  3440     0603  0876               	movf	motorA@duty,w
  3441     0604  00F8               	movwf	??_motorA
  3442     0605  0D79               	rlf	??_motorA+1,w
  3443     0606  0CF9               	rrf	??_motorA+1,f
  3444     0607  0CF8               	rrf	??_motorA,f
  3445     0608  0D79               	rlf	??_motorA+1,w
  3446     0609  0CF9               	rrf	??_motorA+1,f
  3447     060A  0CF8               	rrf	??_motorA,f
  3448     060B  0878               	movf	??_motorA,w
  3449     060C  0095               	movwf	21	;volatile
  3450     060D                     l1421:
  3451                           
  3452                           ;main.c: 384:         RA0PPS = 0b011001;
  3453     060D  3019               	movlw	25
  3454     060E  003D               	movlb	29	; select bank29
  3455     060F  0090               	movwf	16	;volatile
  3456                           
  3457                           ;main.c: 385:         RA1PPS = 0x00;
  3458     0610  0191               	clrf	17	;volatile
  3459     0611                     l1423:
  3460                           
  3461                           ;main.c: 386:         LATAbits.LATA1 = 0;
  3462     0611  0022               	movlb	2	; select bank2
  3463     0612  108C               	bcf	12,1	;volatile
  3464                           
  3465                           ;main.c: 387:     }
  3466     0613  2E42               	goto	l239
  3467     0614                     l235:	
  3468                           ;main.c: 388:     else if(duty < 0){
  3469                           
  3470     0614  1FF7               	btfss	motorA@duty+1,7
  3471     0615  2E17               	goto	u451
  3472     0616  2E18               	goto	u450
  3473     0617                     u451:
  3474     0617  2E3C               	goto	l1437
  3475     0618                     u450:
  3476     0618                     l1425:
  3477                           
  3478                           ;main.c: 389:         duty *= -1;
  3479     0618  30FF               	movlw	255
  3480     0619  00F0               	movwf	___wmul@multiplier
  3481     061A  30FF               	movlw	255
  3482     061B  00F1               	movwf	___wmul@multiplier+1
  3483     061C  0877               	movf	motorA@duty+1,w
  3484     061D  00F3               	movwf	___wmul@multiplicand+1
  3485     061E  0876               	movf	motorA@duty,w
  3486     061F  00F2               	movwf	___wmul@multiplicand
  3487     0620  3186  2643  3185   	fcall	___wmul
  3488     0623  0871               	movf	?___wmul+1,w
  3489     0624  00F7               	movwf	motorA@duty+1
  3490     0625  0870               	movf	?___wmul,w
  3491     0626  00F6               	movwf	motorA@duty
  3492     0627                     l1427:
  3493                           
  3494                           ;main.c: 390:         PWM3DCL = (duty << 8) & 0x00FF;
  3495     0627  002C               	movlb	12	; select bank12
  3496     0628  0194               	clrf	20	;volatile
  3497     0629                     l1429:
  3498                           
  3499                           ;main.c: 391:         PWM3DCH = (duty >> 2) & 0x00FF;
  3500     0629  0877               	movf	motorA@duty+1,w
  3501     062A  00F9               	movwf	??_motorA+1
  3502     062B  0876               	movf	motorA@duty,w
  3503     062C  00F8               	movwf	??_motorA
  3504     062D  0D79               	rlf	??_motorA+1,w
  3505     062E  0CF9               	rrf	??_motorA+1,f
  3506     062F  0CF8               	rrf	??_motorA,f
  3507     0630  0D79               	rlf	??_motorA+1,w
  3508     0631  0CF9               	rrf	??_motorA+1,f
  3509     0632  0CF8               	rrf	??_motorA,f
  3510     0633  0878               	movf	??_motorA,w
  3511     0634  0095               	movwf	21	;volatile
  3512     0635                     l1431:
  3513                           
  3514                           ;main.c: 392:         RA1PPS = 0b011001;
  3515     0635  3019               	movlw	25
  3516     0636  003D               	movlb	29	; select bank29
  3517     0637  0091               	movwf	17	;volatile
  3518     0638                     l1433:
  3519                           
  3520                           ;main.c: 393:         RA0PPS = 0x00;
  3521     0638  0190               	clrf	16	;volatile
  3522     0639                     l1435:
  3523                           
  3524                           ;main.c: 394:         LATAbits.LATA0 = 0;
  3525     0639  0022               	movlb	2	; select bank2
  3526     063A  100C               	bcf	12,0	;volatile
  3527                           
  3528                           ;main.c: 395:     }
  3529     063B  2E42               	goto	l239
  3530     063C                     l1437:
  3531                           
  3532                           ;main.c: 397:         RA0PPS = 0x00;
  3533     063C  003D               	movlb	29	; select bank29
  3534     063D  0190               	clrf	16	;volatile
  3535                           
  3536                           ;main.c: 398:         RA1PPS = 0x00;
  3537     063E  0191               	clrf	17	;volatile
  3538     063F                     l1439:
  3539                           
  3540                           ;main.c: 399:         LATAbits.LATA0 = 0;
  3541     063F  0022               	movlb	2	; select bank2
  3542     0640  100C               	bcf	12,0	;volatile
  3543     0641                     l1441:
  3544                           
  3545                           ;main.c: 400:         LATAbits.LATA1 = 0;
  3546     0641  108C               	bcf	12,1	;volatile
  3547     0642                     l239:
  3548     0642  0008               	return
  3549     0643                     __end_of_motorA:
  3550                           
  3551                           	psect	text7
  3552     0643                     __ptext7:	
  3553 ;; *************** function ___wmul *****************
  3554 ;; Defined at:
  3555 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  multiplier      2    0[COMMON] unsigned int 
  3558 ;;  multiplicand    2    2[COMMON] unsigned int 
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;  product         2    4[COMMON] unsigned int 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  2    0[COMMON] unsigned int 
  3563 ;; Registers used:
  3564 ;;		wreg, status,2, status,0
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3570 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3571 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3573 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3574 ;;Total ram usage:        6 bytes
  3575 ;; Hardware stack levels used: 1
  3576 ;; Hardware stack levels required when called: 1
  3577 ;; This function calls:
  3578 ;;		Nothing
  3579 ;; This function is called by:
  3580 ;;		_motorA
  3581 ;;		_motorB
  3582 ;;		_motorC
  3583 ;;		_motorD
  3584 ;;		_motorE
  3585 ;;		_motorF
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589     0643                     ___wmul:	
  3590                           ;psect for function ___wmul
  3591                           
  3592     0643                     l1393:	
  3593                           ;incstack = 0
  3594                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3595                           
  3596     0643  01F4               	clrf	___wmul@product
  3597     0644  01F5               	clrf	___wmul@product+1
  3598     0645                     l1395:
  3599     0645  1C70               	btfss	___wmul@multiplier,0
  3600     0646  2E48               	goto	u381
  3601     0647  2E49               	goto	u380
  3602     0648                     u381:
  3603     0648  2E4D               	goto	l421
  3604     0649                     u380:
  3605     0649                     l1397:
  3606     0649  0872               	movf	___wmul@multiplicand,w
  3607     064A  07F4               	addwf	___wmul@product,f
  3608     064B  0873               	movf	___wmul@multiplicand+1,w
  3609     064C  3DF5               	addwfc	___wmul@product+1,f
  3610     064D                     l421:
  3611     064D  3001               	movlw	1
  3612     064E                     u395:
  3613     064E  35F2               	lslf	___wmul@multiplicand,f
  3614     064F  0DF3               	rlf	___wmul@multiplicand+1,f
  3615     0650  0B89               	decfsz	9,f
  3616     0651  2E4E               	goto	u395
  3617     0652                     l1399:
  3618     0652  3001               	movlw	1
  3619     0653                     u405:
  3620     0653  36F1               	lsrf	___wmul@multiplier+1,f
  3621     0654  0CF0               	rrf	___wmul@multiplier,f
  3622     0655  0B89               	decfsz	9,f
  3623     0656  2E53               	goto	u405
  3624     0657                     l1401:
  3625     0657  0870               	movf	___wmul@multiplier,w
  3626     0658  0471               	iorwf	___wmul@multiplier+1,w
  3627     0659  1D03               	btfss	3,2
  3628     065A  2E5C               	goto	u411
  3629     065B  2E5D               	goto	u410
  3630     065C                     u411:
  3631     065C  2E45               	goto	l1395
  3632     065D                     u410:
  3633     065D                     l1403:
  3634     065D  0875               	movf	___wmul@product+1,w
  3635     065E  00F1               	movwf	?___wmul+1
  3636     065F  0874               	movf	___wmul@product,w
  3637     0660  00F0               	movwf	?___wmul
  3638     0661                     l423:
  3639     0661  0008               	return
  3640     0662                     __end_of___wmul:
  3641                           
  3642                           	psect	text8
  3643     0668                     __ptext8:	
  3644 ;; *************** function _SwitchA_Read *****************
  3645 ;; Defined at:
  3646 ;;		line 558 in file "main.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      _Bool 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3664 ;;Total ram usage:        0 bytes
  3665 ;; Hardware stack levels used: 1
  3666 ;; Hardware stack levels required when called: 1
  3667 ;; This function calls:
  3668 ;;		Nothing
  3669 ;; This function is called by:
  3670 ;;		_main
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674     0668                     _SwitchA_Read:	
  3675                           ;psect for function _SwitchA_Read
  3676                           
  3677     0668                     l1119:	
  3678                           ;incstack = 0
  3679                           ; Regs used in _SwitchA_Read: [wreg+status,2+status,0]
  3680                           
  3681                           
  3682                           ;main.c: 559:     return PORTCbits.RC2;
  3683     0668  0020               	movlb	0	; select bank0
  3684     0669  0C0E               	rrf	14,w	;volatile
  3685     066A  0C89               	rrf	9,f
  3686     066B  3901               	andlw	1
  3687     066C                     l317:
  3688     066C  0008               	return
  3689     066D                     __end_of_SwitchA_Read:
  3690                           
  3691                           	psect	text9
  3692     0672                     __ptext9:	
  3693 ;; *************** function _Signal4_Read *****************
  3694 ;; Defined at:
  3695 ;;		line 586 in file "main.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      _Bool 
  3702 ;; Registers used:
  3703 ;;		wreg, status,2, status,0
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3713 ;;Total ram usage:        0 bytes
  3714 ;; Hardware stack levels used: 1
  3715 ;; Hardware stack levels required when called: 1
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_main
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723     0672                     _Signal4_Read:	
  3724                           ;psect for function _Signal4_Read
  3725                           
  3726     0672                     l1137:	
  3727                           ;incstack = 0
  3728                           ; Regs used in _Signal4_Read: [wreg+status,2+status,0]
  3729                           
  3730                           
  3731                           ;main.c: 587:     return PORTCbits.RC1;
  3732     0672  0020               	movlb	0	; select bank0
  3733     0673  0C0E               	rrf	14,w	;volatile
  3734     0674  3901               	andlw	1
  3735     0675                     l338:
  3736     0675  0008               	return
  3737     0676                     __end_of_Signal4_Read:
  3738                           
  3739                           	psect	text10
  3740     0676                     __ptext10:	
  3741 ;; *************** function _Signal3_Read *****************
  3742 ;; Defined at:
  3743 ;;		line 582 in file "main.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      _Bool 
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3761 ;;Total ram usage:        0 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; Hardware stack levels required when called: 1
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		_main
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771     0676                     _Signal3_Read:	
  3772                           ;psect for function _Signal3_Read
  3773                           
  3774     0676                     l1133:	
  3775                           ;incstack = 0
  3776                           ; Regs used in _Signal3_Read: [wreg+status,2+status,0]
  3777                           
  3778                           
  3779                           ;main.c: 583:     return PORTCbits.RC0;
  3780     0676  0020               	movlb	0	; select bank0
  3781     0677  080E               	movf	14,w	;volatile
  3782     0678  3901               	andlw	1
  3783     0679                     l335:
  3784     0679  0008               	return
  3785     067A                     __end_of_Signal3_Read:
  3786                           
  3787                           	psect	text11
  3788     0662                     __ptext11:	
  3789 ;; *************** function _Signal2_Read *****************
  3790 ;; Defined at:
  3791 ;;		line 578 in file "main.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;		None
  3794 ;; Auto vars:     Size  Location     Type
  3795 ;;		None
  3796 ;; Return value:  Size  Location     Type
  3797 ;;                  1    wreg      _Bool 
  3798 ;; Registers used:
  3799 ;;		wreg, status,2, status,0
  3800 ;; Tracked objects:
  3801 ;;		On entry : 0/0
  3802 ;;		On exit  : 0/0
  3803 ;;		Unchanged: 0/0
  3804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3809 ;;Total ram usage:        0 bytes
  3810 ;; Hardware stack levels used: 1
  3811 ;; Hardware stack levels required when called: 1
  3812 ;; This function calls:
  3813 ;;		Nothing
  3814 ;; This function is called by:
  3815 ;;		_main
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819     0662                     _Signal2_Read:	
  3820                           ;psect for function _Signal2_Read
  3821                           
  3822     0662                     l1129:	
  3823                           ;incstack = 0
  3824                           ; Regs used in _Signal2_Read: [wreg+status,2+status,0]
  3825                           
  3826                           
  3827                           ;main.c: 579:     return PORTAbits.RA6;
  3828     0662  0020               	movlb	0	; select bank0
  3829     0663  0E0C               	swapf	12,w	;volatile
  3830     0664  0C89               	rrf	9,f
  3831     0665  0C89               	rrf	9,f
  3832     0666  3901               	andlw	1
  3833     0667                     l332:
  3834     0667  0008               	return
  3835     0668                     __end_of_Signal2_Read:
  3836                           
  3837                           	psect	text12
  3838     066D                     __ptext12:	
  3839 ;; *************** function _Signal1_Read *****************
  3840 ;; Defined at:
  3841 ;;		line 574 in file "main.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;		None
  3844 ;; Auto vars:     Size  Location     Type
  3845 ;;		None
  3846 ;; Return value:  Size  Location     Type
  3847 ;;                  1    wreg      _Bool 
  3848 ;; Registers used:
  3849 ;;		wreg, status,2, status,0
  3850 ;; Tracked objects:
  3851 ;;		On entry : 0/0
  3852 ;;		On exit  : 0/0
  3853 ;;		Unchanged: 0/0
  3854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3859 ;;Total ram usage:        0 bytes
  3860 ;; Hardware stack levels used: 1
  3861 ;; Hardware stack levels required when called: 1
  3862 ;; This function calls:
  3863 ;;		Nothing
  3864 ;; This function is called by:
  3865 ;;		_main
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869     066D                     _Signal1_Read:	
  3870                           ;psect for function _Signal1_Read
  3871                           
  3872     066D                     l1125:	
  3873                           ;incstack = 0
  3874                           ; Regs used in _Signal1_Read: [wreg+status,2+status,0]
  3875                           
  3876                           
  3877                           ;main.c: 575:     return PORTAbits.RA7;
  3878     066D  0020               	movlb	0	; select bank0
  3879     066E  0D0C               	rlf	12,w	;volatile
  3880     066F  0D0C               	rlf	12,w	;volatile
  3881     0670  3901               	andlw	1
  3882     0671                     l329:
  3883     0671  0008               	return
  3884     0672                     __end_of_Signal1_Read:
  3885                           
  3886                           	psect	text13
  3887     067A                     __ptext13:	
  3888 ;; *************** function _LEDON *****************
  3889 ;; Defined at:
  3890 ;;		line 600 in file "main.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;		None
  3893 ;; Auto vars:     Size  Location     Type
  3894 ;;		None
  3895 ;; Return value:  Size  Location     Type
  3896 ;;                  1    wreg      void 
  3897 ;; Registers used:
  3898 ;;		None
  3899 ;; Tracked objects:
  3900 ;;		On entry : 0/0
  3901 ;;		On exit  : 0/0
  3902 ;;		Unchanged: 0/0
  3903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3908 ;;Total ram usage:        0 bytes
  3909 ;; Hardware stack levels used: 1
  3910 ;; Hardware stack levels required when called: 1
  3911 ;; This function calls:
  3912 ;;		Nothing
  3913 ;; This function is called by:
  3914 ;;		_main
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918     067A                     _LEDON:	
  3919                           ;psect for function _LEDON
  3920                           
  3921     067A                     l1123:	
  3922                           ;incstack = 0
  3923                           ; Regs used in _LEDON: []
  3924                           
  3925                           
  3926                           ;main.c: 601:     LATDbits.LATD2 = 1;
  3927     067A  0022               	movlb	2	; select bank2
  3928     067B  150F               	bsf	15,2	;volatile
  3929     067C                     l350:
  3930     067C  0008               	return
  3931     067D                     __end_of_LEDON:
  3932                           
  3933                           	psect	text14
  3934     067D                     __ptext14:	
  3935 ;; *************** function _LEDOFF *****************
  3936 ;; Defined at:
  3937 ;;		line 604 in file "main.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;		None
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;		None
  3942 ;; Return value:  Size  Location     Type
  3943 ;;                  1    wreg      void 
  3944 ;; Registers used:
  3945 ;;		None
  3946 ;; Tracked objects:
  3947 ;;		On entry : 0/0
  3948 ;;		On exit  : 0/0
  3949 ;;		Unchanged: 0/0
  3950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3955 ;;Total ram usage:        0 bytes
  3956 ;; Hardware stack levels used: 1
  3957 ;; Hardware stack levels required when called: 1
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_main
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965     067D                     _LEDOFF:	
  3966                           ;psect for function _LEDOFF
  3967                           
  3968     067D                     l1117:	
  3969                           ;incstack = 0
  3970                           ; Regs used in _LEDOFF: []
  3971                           
  3972                           
  3973                           ;main.c: 605:     LATDbits.LATD2 = 0;
  3974     067D  0022               	movlb	2	; select bank2
  3975     067E  110F               	bcf	15,2	;volatile
  3976     067F                     l353:
  3977     067F  0008               	return
  3978     0680                     __end_of_LEDOFF:
  3979                           
  3980                           	psect	intentry
  3981     0004                     __pintentry:	
  3982 ;; *************** function _ISR *****************
  3983 ;; Defined at:
  3984 ;;		line 362 in file "main.c"
  3985 ;; Parameters:    Size  Location     Type
  3986 ;;		None
  3987 ;; Auto vars:     Size  Location     Type
  3988 ;;		None
  3989 ;; Return value:  Size  Location     Type
  3990 ;;                  1    wreg      void 
  3991 ;; Registers used:
  3992 ;;		wreg, status,2
  3993 ;; Tracked objects:
  3994 ;;		On entry : 0/0
  3995 ;;		On exit  : 0/0
  3996 ;;		Unchanged: 0/0
  3997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  4002 ;;Total ram usage:        0 bytes
  4003 ;; Hardware stack levels used: 1
  4004 ;; This function calls:
  4005 ;;		Nothing
  4006 ;; This function is called by:
  4007 ;;		Interrupt level 1
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011     0004                     _ISR:
  4012                           
  4013                           ;incstack = 0
  4014     0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4015                           
  4016                           ; Regs used in _ISR: [wreg+status,2]
  4017     0005  3180               	pagesel	$
  4018     0006                     i1l1337:
  4019                           
  4020                           ;main.c: 363:     if(PIR1bits.RCIF){
  4021     0006  0020               	movlb	0	; select bank0
  4022     0007  1E91               	btfss	17,5	;volatile
  4023     0008  280A               	goto	u35_21
  4024     0009  280B               	goto	u35_20
  4025     000A                     u35_21:
  4026     000A  281B               	goto	i1l224
  4027     000B                     u35_20:
  4028     000B                     i1l1339:
  4029                           
  4030                           ;main.c: 364:         PIR1bits.RCIF = 0;
  4031     000B  1291               	bcf	17,5	;volatile
  4032                           
  4033                           ;main.c: 365:         if(RC1STAbits.FERR || RC1STAbits.OERR){
  4034     000C  0023               	movlb	3	; select bank3
  4035     000D  191D               	btfsc	29,2	;volatile
  4036     000E  2810               	goto	u36_21
  4037     000F  2811               	goto	u36_20
  4038     0010                     u36_21:
  4039     0010  2815               	goto	i1l1343
  4040     0011                     u36_20:
  4041     0011                     i1l1341:
  4042     0011  1C9D               	btfss	29,1	;volatile
  4043     0012  2814               	goto	u37_21
  4044     0013  2815               	goto	u37_20
  4045     0014                     u37_21:
  4046     0014  2819               	goto	i1l1347
  4047     0015                     u37_20:
  4048     0015                     i1l1343:
  4049                           
  4050                           ;main.c: 366:             RC1STA = 0x00;
  4051     0015  019D               	clrf	29	;volatile
  4052     0016                     i1l1345:
  4053                           
  4054                           ;main.c: 367:             RC1STA = 0x90;
  4055     0016  3090               	movlw	144
  4056     0017  009D               	movwf	29	;volatile
  4057                           
  4058                           ;main.c: 368:         }
  4059     0018  281B               	goto	i1l224
  4060     0019                     i1l1347:
  4061                           
  4062                           ;main.c: 370:             g_ReadData = RC1REG;
  4063     0019  0819               	movf	25,w	;volatile
  4064     001A  00FC               	movwf	_g_ReadData
  4065     001B                     i1l224:
  4066     001B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4067     001C  0009               	retfie
  4068     001D                     __end_of_ISR:
  4069     007E                     btemp	set	126	;btemp
  4070     007E                     int$flags	set	126
  4071     007E                     wtemp0	set	126
  4072                           
  4073                           	psect	idloc
  4074                           
  4075                           ;Config register IDLOC0 @ 0x8000
  4076                           ;	unspecified, using default values
  4077     8000                     	org	32768
  4078     8000  3FFF               	dw	16383
  4079                           
  4080                           ;Config register IDLOC1 @ 0x8001
  4081                           ;	unspecified, using default values
  4082     8001                     	org	32769
  4083     8001  3FFF               	dw	16383
  4084                           
  4085                           ;Config register IDLOC2 @ 0x8002
  4086                           ;	unspecified, using default values
  4087     8002                     	org	32770
  4088     8002  3FFF               	dw	16383
  4089                           
  4090                           ;Config register IDLOC3 @ 0x8003
  4091                           ;	unspecified, using default values
  4092     8003                     	org	32771
  4093     8003  3FFF               	dw	16383
  4094                           
  4095                           	psect	config
  4096                           
  4097                           ;Config register CONFIG1 @ 0x8007
  4098                           ;	Oscillator Selection Bits
  4099                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4100                           ;	Watchdog Timer Enable
  4101                           ;	WDTE = OFF, WDT disabled
  4102                           ;	Power-up Timer Enable
  4103                           ;	PWRTE = ON, PWRT enabled
  4104                           ;	MCLR Pin Function Select
  4105                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  4106                           ;	Flash Program Memory Code Protection
  4107                           ;	CP = OFF, Program memory code protection is disabled
  4108                           ;	Brown-out Reset Enable
  4109                           ;	BOREN = ON, Brown-out Reset enabled
  4110                           ;	Clock Out Enable
  4111                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4112                           ;	Internal/External Switchover Mode
  4113                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  4114                           ;	Fail-Safe Clock Monitor Enable
  4115                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4116     8007                     	org	32775
  4117     8007  0FC4               	dw	4036
  4118                           
  4119                           ;Config register CONFIG2 @ 0x8008
  4120                           ;	Flash Memory Self-Write Protection
  4121                           ;	WRT = OFF, Write protection off
  4122                           ;	Peripheral Pin Select one-way control
  4123                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
  4124                           ;	Zero-cross detect disable
  4125                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
  4126                           ;	Phase Lock Loop enable
  4127                           ;	PLLEN = ON, 4x PLL is always enabled
  4128                           ;	Stack Overflow/Underflow Reset Enable
  4129                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  4130                           ;	Brown-out Reset Voltage Selection
  4131                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
  4132                           ;	Low-Power Brown Out Reset
  4133                           ;	LPBOR = OFF, Low-Power BOR is disabled
  4134                           ;	Low-Voltage Programming Enable
  4135                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4136     8008                     	org	32776
  4137     8008  1BFF               	dw	7167

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_motorA
    _main->_motorB
    _main->_motorC
    _main->_motorD
    _main->_motorE
    _main->_motorF
    _motorF->___wmul
    _motorE->___wmul
    _motorD->___wmul
    _motorC->___wmul
    _motorB->___wmul
    _motorA->___wmul

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   14746
                                             10 COMMON     2     2      0
                             _LEDOFF
                              _LEDON
                       _Signal1_Read
                       _Signal2_Read
                       _Signal3_Read
                       _Signal4_Read
                       _SwitchA_Read
                             _motorA
                             _motorB
                             _motorC
                             _motorD
                             _motorE
                             _motorF
 ---------------------------------------------------------------------------------
 (1) _motorF                                               4     2      2    2453
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorE                                               4     2      2    2453
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorD                                               4     2      2    2453
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorC                                               4     2      2    2453
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorB                                               4     2      2    2453
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _motorA                                               4     2      2    2453
                                              6 COMMON     4     2      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1004
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SwitchA_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Signal4_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Signal3_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Signal2_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Signal1_Read                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDON                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LEDOFF                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LEDOFF
   _LEDON
   _Signal1_Read
   _Signal2_Read
   _Signal3_Read
   _Signal4_Read
   _SwitchA_Read
   _motorA
     ___wmul
   _motorB
     ___wmul
   _motorC
     ___wmul
   _motorD
     ___wmul
   _motorE
     ___wmul
   _motorF
     ___wmul

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0       D      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0       D      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Sep 01 16:02:57 2023

    ___wmul@multiplicand 0072                      l310 03D5                      l250 05A1  
                    l314 0403                      l235 0614                      l332 0667  
                    l317 066C                      l421 064D                      l350 067C  
                    l254 05CF                      l335 0679                      l423 0661  
                    l239 0642                      l280 04BB                      l353 067F  
                    l329 0671                      l265 052E                      l338 0675  
                    l284 04E9                      l269 055C                      l295 0448  
                    l299 0476                      u410 065D                      u411 065C  
                    u420 05DD                      u500 04F7                      u405 0653  
                    u421 05DC                      u501 04F6                      u430 05EE  
                    u510 0508                      u431 05ED                      u511 0507  
                    u440 05FF                      u520 0519                      u600 0433  
                    u441 05FE                      u425 05D9                      u521 0518  
                    u505 04F3                      u601 0432                      u450 0618  
                    u530 0532                      u610 044C                      u451 0617  
                    u435 05EA                      u531 0531                      u515 0504  
                    u611 044B                      u380 0649                      u460 056A  
                    u540 0484                      u620 039E                      u700 0107  
                    _ISR 0004                      u381 0648                      u445 05FB  
                    u461 0569                      u525 0515                      u541 0483  
                    u605 042F                      u621 039D                      u701 0106  
                    u470 057B                      u550 0495                      u630 03AF  
                    u471 057A                      u551 0494                      u631 03AE  
                    u480 058C                      u560 04A6                      u640 03C0  
                    u481 058B                      u465 0566                      u561 04A5  
                    u545 0480                      u641 03BF                      u625 039A  
                    u490 05A5                      u570 04BF                      u650 03D9  
                    u395 064E                      u491 05A4                      u475 0577  
                    u571 04BE                      u555 0491                      u651 03D8  
                    u635 03AB                      u580 0411                      u660 00D6  
                    u485 0588                      u565 04A2                      u581 0410  
                    u645 03BC                      u661 00D5                      u590 0422  
                    u670 00E3                      u591 0421                      u671 00E2  
                    u680 00EF                      u585 040D                      u681 00EE  
                    u690 00FB                      u595 041E                      u691 00FA  
                    wreg 0009             _SwitchA_Read 0668                     ?_ISR 0070  
                   l1123 067A                     l1117 067D                     l1125 066D  
                   l1133 0676                     l1119 0668                     l1129 0662  
                   l1137 0672                     l1401 0657                     l1403 065D  
                   l1411 05E1                     l1421 060D                     l1413 05EE  
                   l1501 0543                     l1431 0635                     l1423 0611  
                   l1415 05F2                     l1407 05D0                     l1511 0559  
                   l1503 054F                     l1441 0641                     l1433 0638  
                   l1425 0618                     l1417 05FF                     l1409 05DD  
                   l1513 055B                     l1505 0552                     l1521 0488  
                   l1601 03B3                     l1435 0639                     l1427 0627  
                   l1419 0601                     l1451 057F                     l1443 055D  
                   l1507 0553                     l1531 04B4                     l1523 0495  
                   l1611 03D9                     l1603 03C0                     l1429 0629  
                   l1437 063C                     l1461 05A5                     l1453 058C  
                   l1445 056A                     l1509 0556                     l1541 04DC  
                   l1533 04B8                     l1525 0499                     l1517 0477  
                   l1621 03FA                     l1613 03E8                     l1605 03C2  
                   l1701 0078                     l1439 063F                     l1471 05C6  
                   l1463 05B4                     l1455 058E                     l1447 056E  
                   l1551 04E8                     l1543 04DF                     l1535 04BF  
                   l1527 04A6                     l1519 0484                     l1615 03EA  
                   l1623 03FD                     l1607 03CE                     l1711 0082  
                   l1703 0079                     l1631 0024                     l1393 0643  
                   l1465 05B6                     l1473 05C9                     l1457 059A  
                   l1449 057B                     l1481 04F7                     l1545 04E0  
                   l1537 04CE                     l1529 04A8                     l1561 0422  
                   l1625 0400                     l1617 03F6                     l1609 03D2  
                   l1801 0292                     l1721 0090                     l1713 0083  
                   l1705 007A                     l1641 002C                     l1633 0027  
                   l1395 0645                     l1475 05CC                     l1467 05C2  
                   l1459 059E                     l1491 051B                     l1483 04FB  
                   l1539 04D0                     l1547 04E3                     l1571 0445  
                   l1563 0426                     l1555 0404                     l1627 0402  
                   l1619 03F9                     l1803 02BB                     l1731 009D  
                   l1723 0093                     l1715 008A                     l1707 007D  
                   l1651 0036                     l1643 002D                     l1635 0029  
                   l1397 0649                     l1477 05CE                     l1469 05C5  
                   l1493 0527                     l1485 0508                     l1549 04E6  
                   l1581 046C                     l1573 044C                     l1565 0433  
                   l1557 0411                     l1805 02E4                     l1741 00A6  
                   l1733 009F                     l1725 0096                     l1717 008D  
                   l1709 0080                     l1661 003C                     l1653 0038  
                   l1645 0030                     l1637 002A                     l1399 0652  
                   l1495 052B                     l1487 050C                     l1479 04EA  
                   l1583 046D                     l1575 045B                     l1567 0435  
                   l1559 0415                     l1807 030D                     l1815 035B  
                   l1751 00B9                     l1743 00A7                     l1735 00A1  
                   l1727 0099                     l1719 008F                     l1671 004C  
                   l1663 003E                     l1655 0039                     l1647 0032  
                   l1639 002B                     l1497 0532                     l1489 0519  
                   l1577 045D                     l1585 0470                     l1569 0441  
                   l1593 0391                     l1809 0336                     l1761 00D6  
                   l1753 00BF                     l1745 00A7                     l1737 00A3  
                   l1729 009B                     l1681 0059                     l1673 004E  
                   l1665 0043                     l1657 003A                     l1649 0034  
                   l1499 0541                     l1587 0473                     l1579 0469  
                   l1595 039E                     l1771 00EF                     l1763 00D9  
                   l1755 00C5                     l1747 00AD                     l1739 00A5  
                   l1691 0069                     l1683 0060                     l1675 0051  
                   l1667 0045                     l1659 003B                     l1589 0475  
                   l1597 03A2                     l1853 0360                     l1781 010C  
                   l1773 00F3                     l1765 00DB                     l1757 00CB  
                   l1749 00B3                     l1693 006C                     l1685 0063  
                   l1677 0054                     l1669 004A                     l1599 03AF  
                   l1791 01CB                     l1783 0132                     l1775 00FB  
                   l1767 00E3                     l1759 00CE                     l1695 006E  
                   l1687 0065                     l1679 0057                     l1793 01F2  
                   l1785 0158                     l1777 00FF                     l1769 00E7  
                   l1697 006F                     l1689 0066                     l1795 0219  
                   l1787 017E                     l1779 0107                     l1699 0076  
                   l1797 0240                     l1789 01A4                     l1799 0269  
                   _LATA 010C                     _LATB 010D                     _LATC 010E  
                   _LATD 010F                     _LATE 0110                     _T2PR 0494  
                   _WPUA 020C                     _WPUB 020D                     _WPUC 020E  
                   _WPUD 020F                     _main 0024                     btemp 007E  
                   start 001D                    ??_ISR 0070                    ?_main 0070  
                  _T2CON 0495                    _LEDON 067A                    i1l224 001B  
                  u35_20 000B                    u35_21 000A                    u36_20 0011  
                  u36_21 0010                    u37_20 0015                    u37_21 0014  
                  _TRISA 008C                    _TRISB 008D                    _TRISC 008E  
                  _TRISD 008F                    _RXPPS 0E3D                    status 0003  
                  wtemp0 007E          __initialization 001F             __end_of_main 0391  
                 ??_main 007A                   ?_LEDON 0070                   _CCPR1H 0292  
                 _CCPR2H 0296                   _CCPR1L 0291                   _CCPR2L 0295  
                 _CCPR7H 029A                   _CCPR8H 0312                   _CCPR7L 0299  
                 _CCPR8L 0311                   _ANSELA 018C                   _ANSELB 018D  
                 _ANSELC 018E                   _ANSELD 018F                   _ANSELE 0190  
                 _LEDOFF 067D                   _RA0PPS 0E90                   _RA1PPS 0E91  
                 _RC1REG 0199                   _RA2PPS 0E92                   _RB0PPS 0E98  
                 _RA3PPS 0E93                   _RB1PPS 0E99                   _RB2PPS 0E9A  
                 _RB3PPS 0E9B                   _RC1STA 019D                   _RB4PPS 0E9C  
                 i1l1341 0011                   i1l1343 0015                   i1l1345 0016  
                 i1l1337 0006                   i1l1347 0019                   i1l1339 000B  
                 _RD4PPS 0EAC                   _RD5PPS 0EAD                   _RD6PPS 0EAE  
                 _RD7PPS 0EAF                   _OSCCON 009B                   _TX1REG 019A  
                 _TX1STA 019E             _CCPTMRS1bits 029E             _CCPTMRS2bits 029F  
                 ___wmul 0643                   _motorA 05D0                   _motorB 055D  
                 _motorC 04EA                   _motorD 0477                   _motorE 0404  
                 _motorF 0391  __end_of__initialization 0020            __end_of_LEDON 067D  
             _g_ReadData 007C           __pcstackCOMMON 0070            ?_Signal1_Read 0070  
          ?_Signal2_Read 0070            ?_Signal3_Read 0070            ?_Signal4_Read 0070  
                ??_LEDON 0070           _OPTION_REGbits 0097                  ?_LEDOFF 0070  
           _T2CLKCONbits 0497               __pmaintext 0024                  ?___wmul 0070  
             __pintentry 0004                  _CCP1CON 0293                  _CCP2CON 0297  
                _CCP7CON 029B                  _CCP8CON 0313           ??_Signal1_Read 0070  
         ??_Signal2_Read 0070           ??_Signal3_Read 0070           ??_Signal4_Read 0070  
                ?_motorA 0076                  ?_motorB 0076                  ?_motorC 0076  
                ?_motorD 0076                  ?_motorE 0076                  ?_motorF 0076  
                _SP1BRGH 019C                  _SP1BRGL 019B                  _PWM3DCH 0615  
                _PWM3DCL 0614                  _PWM4DCH 0618                  _PWM4DCL 0617  
                _PWM3CON 0616                  _PWM4CON 0619                  __ptext1 0391  
                __ptext2 0404                  __ptext3 0477                  __ptext4 04EA  
                __ptext5 055D                  __ptext6 05D0                  __ptext7 0643  
                __ptext8 0668                  __ptext9 0672                  main@sum 007A  
   end_of_initialization 0020                _PORTAbits 000C                _PORTCbits 000E  
              _PORTDbits 000F     __end_of_Signal1_Read 0672     __end_of_Signal2_Read 0668  
   __end_of_Signal3_Read 067A     __end_of_Signal4_Read 0676           __end_of_LEDOFF 0680  
         __end_of___wmul 0662           __end_of_motorA 0643           __end_of_motorB 05D0  
         __end_of_motorC 055D           __end_of_motorD 04EA           __end_of_motorE 0477  
         __end_of_motorF 0404      start_initialization 001F              __end_of_ISR 001D  
          ?_SwitchA_Read 0070                 ??_LEDOFF 0070                 ??___wmul 0074  
               ??_motorA 0078                 ??_motorB 0078                 ??_motorC 0078  
               ??_motorD 0078                 ??_motorE 0078                 ??_motorF 0078  
            __pbssCOMMON 007C                ___latbits 0003           ??_SwitchA_Read 0070  
               _BAUD1CON 019F               motorA@duty 0076               motorB@duty 0076  
             motorC@duty 0076               motorD@duty 0076               motorE@duty 0076  
             motorF@duty 0076           ___wmul@product 0074                 _LATAbits 010C  
               _LATBbits 010D                 _LATDbits 010F                 _PIE1bits 0091  
               _PIR1bits 0011             _Signal1_Read 066D             _Signal2_Read 0662  
           _Signal3_Read 0676             _Signal4_Read 0672        ___wmul@multiplier 0070  
   __end_of_SwitchA_Read 066D                 __ptext10 0676                 __ptext11 0662  
               __ptext12 066D                 __ptext13 067A                 __ptext14 067D  
             _RC1STAbits 019D                 int$flags 007E               _INTCONbits 000B  
               intlevel1 0000  
